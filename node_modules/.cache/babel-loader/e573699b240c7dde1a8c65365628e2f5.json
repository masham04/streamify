{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect, canMove } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\n\nvar ToolBase =\n/** @class */\nfunction () {\n  /**\n   * Initializes the tool\n   *\n   * @param {CommandHandler} command Command that is corresponding to the current action\n   * @param protectChange\n   */\n  function ToolBase(command, protectChange) {\n    if (protectChange === void 0) {\n      protectChange = false;\n    }\n    /**\n     * Command that is corresponding to the current action\n     */\n\n\n    this.commandHandler = null;\n    this.deepDiffer = new DeepDiffMapper();\n    /**\n     * Sets/Gets whether the interaction is being done\n     */\n\n    this.inAction = false;\n    /**\n     * Sets/Gets the protect change\n     */\n\n    this.isProtectChange = false;\n    /**\n     * Sets/Gets the current element that is under mouse\n     */\n\n    this.currentElement = null;\n    /**   @private  */\n\n    this.blocked = false;\n    this.isTooltipVisible = false;\n    /** @private */\n\n    this.childTable = {};\n    /**\n     * Sets/Gets the previous object when mouse down\n     */\n\n    this.undoElement = {\n      nodes: [],\n      connectors: []\n    };\n    this.checkProperty = true;\n    this.undoParentElement = {\n      nodes: [],\n      connectors: []\n    };\n    this.commandHandler = command;\n    this.isProtectChange = protectChange;\n  }\n\n  ToolBase.prototype.startAction = function (currentElement) {\n    this.currentElement = currentElement;\n    this.inAction = true;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ToolBase.prototype.mouseDown = function (args) {\n    if (isBlazor()) {\n      this.commandHandler.enableCloneObject(true);\n      this.commandHandler.ismouseEvents(true);\n    }\n\n    this.currentElement = args.source;\n    this.startPosition = this.currentPosition = this.prevPosition = args.position;\n    this.isTooltipVisible = true;\n    this.startAction(args.source);\n    this.checkProperty = true; // Bug fix - EJ2-44495 -Node does not gets selected on slight movement of mouse when drag constraints disabled for node\n\n    this.mouseDownElement = args.source;\n  };\n\n  ToolBase.prototype.checkPropertyValue = function () {\n    if (this.checkProperty) {\n      this.commandHandler.startTransaction(this.isProtectChange);\n    }\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ToolBase.prototype.mouseMove = function (args) {\n    this.currentPosition = args.position;\n\n    if (this.inAction) {\n      this.commandHandler.startTransaction(this.isProtectChange);\n      this.checkProperty = false;\n    } //this.currentElement = currentElement;\n\n\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ToolBase.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    this.currentPosition = args.position; // this.currentElement = currentElement;\n\n    this.isTooltipVisible = false;\n    this.commandHandler.endTransaction(this.isProtectChange);\n\n    if (isBlazor()) {\n      this.commandHandler.enableCloneObject(false);\n      this.commandHandler.ismouseEvents(false);\n      this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n    }\n\n    this.endAction(); // Bug fix - EJ2-44495 -Node does not gets selected on slight movement of mouse when drag constraints disabled for node\n\n    this.mouseDownElement = null;\n  };\n\n  ToolBase.prototype.endAction = function () {\n    if (!this.isTooltipVisible) {\n      this.commandHandler.closeTooltip();\n    }\n\n    this.commandHandler = null;\n    this.currentElement = null;\n    this.currentPosition = null;\n    this.inAction = false;\n    this.blocked = false;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ToolBase.prototype.mouseWheel = function (args) {\n    this.currentPosition = args.position;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ToolBase.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n\n  ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n    shape = this.commandHandler.renderContainerHelper(shape) || shape;\n    var horizontalsnap = {\n      snapped: false,\n      offset: 0,\n      left: false,\n      right: false\n    };\n    var verticalsnap = {\n      snapped: false,\n      offset: 0,\n      top: false,\n      bottom: false\n    };\n    var difx = this.currentPosition.x - this.startPosition.x;\n    var dify = this.currentPosition.y - this.startPosition.y;\n    var snapEnabled = !(shape instanceof TextElement) && this.commandHandler.snappingModule && this.commandHandler.snappingModule.canSnap();\n    var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n    var rotateAngle = shape instanceof TextElement ? angle : shape.rotateAngle;\n    var matrix;\n    matrix = identityMatrix();\n    rotateMatrix(matrix, -rotateAngle, 0, 0);\n    var x = shape.offsetX;\n    var y = shape.offsetY;\n    var w = shape.width;\n    var h = shape.height;\n    x = x - w * shape.pivot.x;\n    y = y - h * shape.pivot.y;\n    var deltaWidth = 0;\n    var deltaHeight = 0;\n    var diff;\n    var width = shape instanceof TextElement ? shape.actualSize.width : shape.width;\n    var height = shape instanceof TextElement ? shape.actualSize.height : shape.height;\n\n    switch (corner) {\n      case 'ResizeWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        deltaHeight = 1;\n        difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n        dify = 0;\n        deltaWidth = (initialBounds.width - difx) / width;\n        break;\n\n      case 'ResizeEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n        dify = 0;\n        deltaWidth = (initialBounds.width + difx) / width;\n        deltaHeight = 1;\n        break;\n\n      case 'ResizeNorth':\n        deltaWidth = 1;\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n\n      case 'ResizeSouth':\n        deltaWidth = 1;\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n        deltaHeight = (initialBounds.height + dify) / height;\n        break;\n\n      case 'ResizeNorthEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n        dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n        deltaWidth = (initialBounds.width + difx) / width;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n\n      case 'ResizeNorthWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n        difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n        deltaWidth = (initialBounds.width - difx) / width;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n\n      case 'ResizeSouthEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n        difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n        deltaHeight = (initialBounds.height + dify) / height;\n        deltaWidth = (initialBounds.width + difx) / width;\n        break;\n\n      case 'ResizeSouthWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n        difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n        deltaWidth = (initialBounds.width - difx) / width;\n        deltaHeight = (initialBounds.height + dify) / height;\n        break;\n    }\n\n    return {\n      width: deltaWidth,\n      height: deltaHeight\n    };\n  };\n\n  ToolBase.prototype.getPivot = function (corner) {\n    switch (corner) {\n      case 'ResizeWest':\n        return {\n          x: 1,\n          y: 0.5\n        };\n\n      case 'ResizeEast':\n        return {\n          x: 0,\n          y: 0.5\n        };\n\n      case 'ResizeNorth':\n        return {\n          x: 0.5,\n          y: 1\n        };\n\n      case 'ResizeSouth':\n        return {\n          x: 0.5,\n          y: 0\n        };\n\n      case 'ResizeNorthEast':\n        return {\n          x: 0,\n          y: 1\n        };\n\n      case 'ResizeNorthWest':\n        return {\n          x: 1,\n          y: 1\n        };\n\n      case 'ResizeSouthEast':\n        return {\n          x: 0,\n          y: 0\n        };\n\n      case 'ResizeSouthWest':\n        return {\n          x: 1,\n          y: 0\n        };\n    }\n\n    return {\n      x: 0.5,\n      y: 0.5\n    };\n  };\n\n  return ToolBase;\n}();\n\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\n\nvar SelectTool =\n/** @class */\nfunction (_super) {\n  __extends(SelectTool, _super);\n\n  function SelectTool(commandHandler, protectChange, action) {\n    var _this = _super.call(this, commandHandler, true) || this;\n\n    _this.action = action;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  SelectTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  SelectTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args); //draw selected region\n\n\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      var rect = Rect.toBounds([this.prevPosition, this.currentPosition]); // Bug fix - EJ2-44495 -Node does not gets selected on slight movement of mouse when drag constraints disabled for node\n\n      if (this.mouseDownElement && !canMove(this.mouseDownElement)) {\n        this.commandHandler.clearObjectSelection(this.mouseDownElement);\n      } else {\n        this.commandHandler.clearSelectedItems();\n        this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n      }\n    }\n\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  SelectTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue(); //rubber band selection\n\n    if (!this.commandHandler.isUserHandle(this.currentPosition)) {\n      if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n        var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        this.commandHandler.doRubberBandSelection(region);\n      } else {\n        //single selection\n        var arrayNodes = this.commandHandler.getSelectedObject();\n\n        if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n          this.commandHandler.clearSelection(args.source === null ? true : false);\n\n          if (this.action === 'LabelSelect') {\n            this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n          } else if (args.source) {\n            this.commandHandler.selectObjects([args.source], false, arrayNodes);\n          }\n        } else {\n          //handling multiple selection\n          if (args && args.source) {\n            if (!this.commandHandler.isSelected(args.source)) {\n              this.commandHandler.selectObjects([args.source], true);\n            } else {\n              if (args.clickCount === 1) {\n                this.commandHandler.unSelect(args.source);\n                this.commandHandler.updateBlazorSelector();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.inAction = false;\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  SelectTool.prototype.mouseLeave = function (args) {\n    if (this.inAction) {\n      this.mouseUp(args);\n    }\n  };\n\n  return SelectTool;\n}(ToolBase);\n\nexport { SelectTool };\n\nvar FixedUserHandleTool =\n/** @class */\nfunction (_super) {\n  __extends(FixedUserHandleTool, _super);\n\n  function FixedUserHandleTool() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  FixedUserHandleTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    this.inAction = false;\n    var val = args.source;\n    var fixedUserHandle;\n    var iconId = args.sourceWrapper.id;\n\n    for (var i = 0; i < val.fixedUserHandles.length; i++) {\n      if (iconId.indexOf(val.fixedUserHandles[i].id) > -1) {\n        fixedUserHandle = val.fixedUserHandles[i];\n      }\n    }\n\n    if (isBlazor()) {\n      var element = getObjectType(args.source) === Connector ? {\n        connector: args.source\n      } : {\n        node: args.source\n      };\n      var fixedUserHandles = getObjectType(args.source) === Connector ? {\n        connectorFixedUserHandle: fixedUserHandle\n      } : {\n        nodeFixedUserHandle: fixedUserHandle\n      };\n      var arg = {\n        fixedUserHandle: fixedUserHandles,\n        element: element\n      };\n      var trigger = DiagramEvent.fixedUserHandleClick;\n      this.commandHandler.triggerEvent(trigger, arg);\n\n      _super.prototype.mouseUp.call(this, args);\n    } else {\n      var arg = {\n        fixedUserHandle: fixedUserHandle,\n        element: args.source\n      };\n      var trigger = DiagramEvent.fixedUserHandleClick;\n      this.commandHandler.triggerEvent(trigger, arg);\n\n      _super.prototype.mouseUp.call(this, args);\n    }\n  };\n\n  return FixedUserHandleTool;\n}(ToolBase);\n\nexport { FixedUserHandleTool };\n/**\n * Helps to edit the selected connectors\n */\n\nvar ConnectTool =\n/** @class */\nfunction (_super) {\n  __extends(ConnectTool, _super);\n\n  function ConnectTool(commandHandler, endPoint) {\n    var _this = _super.call(this, commandHandler, true) || this;\n\n    _this.isConnected = false;\n    _this.endPoint = endPoint;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectTool.prototype.mouseDown = function (args) {\n    return __awaiter(this, void 0, void 0, function () {\n      var selectorModel, connector, arg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n      return __generator(this, function (_a) {\n        if (isBlazor() && args && args.source) {\n          this.commandHandler.insertSelectedObjects();\n          this.commandHandler.insertBlazorConnector(args.source);\n          selectorModel = args.source;\n\n          if (selectorModel.connectors) {\n            connector = selectorModel.connectors[0];\n            this.oldConnector = cloneObject(connector);\n            arg = {\n              connector: cloneBlazorObject(connector),\n              oldValue: {\n                connectorTargetValue: {\n                  portId: undefined,\n                  nodeId: undefined\n                }\n              },\n              newValue: {\n                connectorTargetValue: {\n                  portId: undefined,\n                  nodeId: undefined\n                }\n              },\n              cancel: false,\n              state: 'Changing',\n              connectorEnd: this.endPoint\n            };\n            this.tempArgs = arg;\n          }\n        }\n\n        this.inAction = true;\n        this.undoElement = undefined;\n\n        if (!(this instanceof ConnectorDrawingTool)) {\n          this.undoElement = cloneObject(args.source);\n        }\n\n        _super.prototype.mouseDown.call(this, args);\n\n        if (args.source && args.source.connectors) {\n          oldValue = {\n            x: this.prevPosition.x,\n            y: this.prevPosition.y\n          };\n          connectors = args.source.connectors[0];\n          this.oldConnector = cloneObject(connectors);\n        } // Sets the selected segment\n\n\n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n          for (i = 0; i < connectors.segments.length; i++) {\n            segment = connectors.segments[i];\n            segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n\n            if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) || contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n              this.selectedSegment = segment;\n            }\n          }\n        }\n\n        this.currentPosition = args.position;\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectTool.prototype.mouseUp = function (args) {\n    return __awaiter(this, void 0, void 0, function () {\n      var trigger, temparg, nodeEndId, portEndId, diagram, blazorInterop, blazor, eventObj, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!isBlazor()) return [3\n            /*break*/\n            , 3];\n            trigger = DiagramEvent.connectionChange;\n            temparg = void 0;\n            if (!(this.tempArgs && this.oldConnector)) return [3\n            /*break*/\n            , 3];\n            this.commandHandler.updatePropertiesToBlazor(args, false);\n            this.tempArgs.state = 'Changed';\n            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            this.tempArgs.oldValue = this.endPoint === 'ConnectorSourceEnd' ? {\n              connectorSourceValue: {\n                nodeId: this.oldConnector[nodeEndId],\n                portId: this.oldConnector[portEndId]\n              }\n            } : {\n              connectorTargetValue: {\n                nodeId: this.oldConnector[nodeEndId],\n                portId: this.oldConnector[portEndId]\n              }\n            };\n            temparg = {\n              state: this.tempArgs.state,\n              oldValue: this.tempArgs.oldValue,\n              newValue: this.tempArgs.newValue,\n              cancel: this.tempArgs.cancel,\n              connectorEnd: this.tempArgs.connectorEnd\n            };\n            diagram = 'diagram';\n            blazorInterop = 'sfBlazor';\n            blazor = 'Blazor';\n            if (!(window && window[blazor] && this.commandHandler[diagram].connectionChange)) return [3\n            /*break*/\n            , 2];\n            eventObj = {\n              'EventName': 'connectionChange',\n              args: JSON.stringify(this.tempArgs)\n            };\n            return [4\n            /*yield*/\n            , window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n\n          case 1:\n            temparg = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (temparg) {\n              this.commandHandler.updateConnectorValue(temparg);\n            }\n\n            _a.label = 3;\n\n          case 3:\n            if (!isBlazor() && this.isConnected && args.source.connectors) {\n              connector = args.source.connectors[0];\n              nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n              portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n              arg = {\n                connector: cloneBlazorObject(connector),\n                oldValue: {\n                  nodeId: this.oldConnector[nodeEndId],\n                  portId: this.oldConnector[portEndId]\n                },\n                newValue: {\n                  nodeId: connector[nodeEndId],\n                  portId: connector[portEndId]\n                },\n                cancel: false,\n                state: 'Changed',\n                connectorEnd: this.endPoint\n              };\n\n              if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                this.isConnected = false;\n              }\n            }\n\n            this.checkPropertyValue();\n            this.commandHandler.updateSelector();\n            this.commandHandler.removeSnap();\n            this.commandHandler.changeAnnotationDrag(args);\n\n            if (!(this instanceof ConnectorDrawingTool) && (this.endPoint === 'ConnectorSourceEnd' && args.source.connectors.length && (!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) || args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID) || this.endPoint === 'ConnectorTargetEnd' && (!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint) || args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))) {\n              oldValues = void 0;\n              connector = void 0;\n\n              if (args.source && args.source.connectors) {\n                oldValues = {\n                  x: this.prevPosition.x,\n                  y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n              }\n\n              targetPortName = void 0;\n              targetNodeNode = void 0;\n\n              if (args.target) {\n                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n                target instanceof PointPort ? targetPortName = target.id : targetNodeNode = target.id;\n              }\n\n              arg = {\n                connector: connector,\n                state: 'Completed',\n                targetNode: targetNodeNode,\n                oldValue: oldValues,\n                newValue: oldValues,\n                cancel: false,\n                targetPort: targetPortName\n              };\n\n              if (isBlazor()) {\n                arg = {\n                  connector: cloneBlazorObject(connector),\n                  state: 'Completed',\n                  targetNode: targetNodeNode,\n                  oldValue: cloneBlazorObject(oldValues),\n                  newValue: oldValues,\n                  cancel: arg.cancel,\n                  targetPort: targetPortName\n                };\n              }\n\n              trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n              this.commandHandler.triggerEvent(trigger, arg);\n              this.commandHandler.removeTerminalSegment(connector, true);\n\n              if (this.undoElement && args.source) {\n                obj = void 0;\n                obj = cloneObject(args.source);\n                entry = {\n                  type: 'ConnectionChanged',\n                  redoObject: cloneObject(obj),\n                  undoObject: cloneObject(this.undoElement),\n                  category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n              }\n            } else if (!(this instanceof ConnectorDrawingTool) && (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n              if (this.undoElement && args.source) {\n                obj = cloneObject(args.source);\n                entry = {\n                  type: 'SegmentChanged',\n                  redoObject: obj,\n                  undoObject: this.undoElement,\n                  category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n              }\n            }\n\n            this.commandHandler.updateBlazorSelector();\n            this.canCancel = undefined;\n            this.tempArgs = undefined;\n\n            _super.prototype.mouseUp.call(this, args);\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /* tslint:disable */\n\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var tempArgs;\n\n    if (!(this instanceof ConnectorDrawingTool) && (this.endPoint === 'ConnectorSourceEnd' && Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) || this.endPoint === 'ConnectorTargetEnd' && Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))) {\n      var oldValue = void 0;\n      var connectors = void 0;\n\n      if (args.source && args.source.connectors) {\n        oldValue = {\n          x: this.prevPosition.x,\n          y: this.prevPosition.y\n        };\n        connectors = args.source.connectors[0];\n      }\n\n      var targetPort = void 0;\n      var targetNode = void 0;\n\n      if (args.target) {\n        targetNode = args.target.id;\n        var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n        target instanceof PointPort || target instanceof BpmnSubEvent ? targetPort = target.id : targetNode = target.id;\n      }\n\n      var arg = {\n        connector: connectors,\n        state: 'Start',\n        targetNode: targetNode,\n        oldValue: oldValue,\n        newValue: oldValue,\n        cancel: false,\n        targetPort: targetPort\n      };\n\n      if (isBlazor()) {\n        arg = {\n          connector: cloneBlazorObject(connectors),\n          state: 'Start',\n          targetNode: targetNode,\n          oldValue: oldValue,\n          newValue: oldValue,\n          cancel: arg.cancel,\n          targetPort: targetPort\n        };\n      }\n\n      var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n      this.commandHandler.triggerEvent(trigger, arg);\n    }\n\n    this.currentPosition = args.position;\n\n    if (this.currentPosition && this.prevPosition) {\n      var diffX = this.currentPosition.x - this.prevPosition.x;\n      var diffY = this.currentPosition.y - this.prevPosition.y;\n      var newValue = void 0;\n      var oldValue = void 0;\n      var inPort = void 0;\n      var outPort = void 0;\n      this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n      var connector = void 0;\n\n      if (args.source && args.source.connectors) {\n        newValue = {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y\n        };\n        oldValue = {\n          x: this.prevPosition.x,\n          y: this.prevPosition.y\n        };\n        connector = args.source.connectors[0];\n      }\n\n      var targetPortId = void 0;\n      var targetNodeId = void 0;\n\n      if (args.target) {\n        var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n        target instanceof PointPort ? targetPortId = target.id : targetNodeId = target.id;\n      }\n\n      var arg = {\n        connector: connector,\n        state: 'Progress',\n        targetNode: targetNodeId,\n        oldValue: oldValue,\n        newValue: newValue,\n        cancel: false,\n        targetPort: targetPortId\n      };\n\n      if (isBlazor()) {\n        arg = {\n          connector: cloneBlazorObject(connector),\n          state: 'Progress',\n          targetNode: targetNodeId,\n          oldValue: oldValue,\n          newValue: newValue,\n          cancel: arg.cancel,\n          targetPort: targetPortId\n        };\n      }\n\n      if (!(this instanceof ConnectorDrawingTool)) {\n        var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n        this.commandHandler.triggerEvent(trigger, arg);\n      }\n\n      if (args.target) {\n        inPort = getInOutConnectPorts(args.target, true);\n        outPort = getInOutConnectPorts(args.target, false);\n      }\n\n      if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n        this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n        this.commandHandler.updateSelector();\n\n        if (args.target && (this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)) || this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort)))) {\n          if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n            tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n            this.isConnected = true;\n          }\n\n          var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n\n          if (target instanceof Node) {\n            if (canInConnect(target) && this.endPoint === 'ConnectorTargetEnd' || canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n              tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n              this.isConnected = true;\n            }\n          } else {\n            var isConnect = this.checkConnect(target);\n\n            if (isConnect) {\n              this.isConnected = true;\n              tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n            }\n          }\n        } else if (this.endPoint.indexOf('Bezier') === -1) {\n          this.isConnected = true;\n          tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n          this.commandHandler.updateSelector();\n        }\n      }\n\n      if (this.commandHandler.canEnableDefaultTooltip()) {\n        var content = this.getTooltipContent(args.position);\n        this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n        this.isTooltipVisible = false;\n      }\n\n      if (tempArgs) {\n        this.tempArgs = tempArgs;\n      }\n    }\n\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n\n  ConnectTool.prototype.getTooltipContent = function (position) {\n    return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n  };\n\n  ConnectTool.prototype.checkConnect = function (target) {\n    if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n      return true;\n    } else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n      return true;\n    } else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target) && (target.constraints == undefined || (target.constraints & (PortConstraints.Default & ~(PortConstraints.InConnect | PortConstraints.OutConnect))) > 0)) {\n      return true;\n    }\n\n    return false;\n  };\n  /**   @private  */\n\n\n  ConnectTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n\n    this.prevPosition = null;\n    this.endPoint = null;\n  };\n\n  return ConnectTool;\n}(ToolBase);\n\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\n\nvar MoveTool =\n/** @class */\nfunction (_super) {\n  __extends(MoveTool, _super);\n\n  function MoveTool(commandHandler, objType) {\n    var _this = _super.call(this, commandHandler, true) || this;\n    /**   @private  */\n\n\n    _this.currentTarget = null;\n    _this.canCancel = false;\n    _this.objectType = objType;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  MoveTool.prototype.mouseDown = function (args) {\n    if (args.source instanceof Node || args.source instanceof Connector) {\n      var arrayNodes = this.commandHandler.getSelectedObject();\n      this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n      var selectedObject = {\n        nodes: [],\n        connectors: []\n      };\n\n      if (args.source instanceof Node) {\n        selectedObject.nodes.push(cloneObject(args.source));\n      } else {\n        selectedObject.connectors.push(cloneObject(args.source));\n      }\n\n      this.undoElement = cloneObject(selectedObject);\n    } else {\n      this.undoElement = cloneObject(args.source);\n    }\n\n    this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n\n    if (this.objectType === 'Port') {\n      this.portId = args.sourceWrapper.id;\n    }\n\n    this.commandHandler.insertBlazorConnector(args.source);\n    var oldValues;\n\n    if (isBlazor()) {\n      this.commandHandler.insertSelectedObjects();\n      this.startPosition = this.currentPosition = this.prevPosition = args.position;\n      this.initialOffset = {\n        x: 0,\n        y: 0\n      };\n\n      if (args.source) {\n        oldValues = {\n          offsetX: args.source.wrapper.offsetX,\n          offsetY: args.source.wrapper.offsetY\n        };\n      }\n\n      var arg = {\n        source: cloneObject(args.source),\n        state: 'Start',\n        oldValue: oldValues,\n        newValue: {},\n        target: cloneObject(args.target),\n        targetPosition: args.position,\n        allowDrop: true,\n        cancel: false\n      };\n      this.tempArgs = arg;\n    }\n\n    _super.prototype.mouseDown.call(this, args);\n\n    this.initialOffset = {\n      x: 0,\n      y: 0\n    };\n  };\n  /* tslint:disable */\n\n  /**\n   * @param args\n   * @param isPreventHistory\n   * @param args\n   * @param isPreventHistory\n   * @private\n   */\n\n\n  MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n    return __awaiter(this, void 0, void 0, function () {\n      var oldValues, newValues, arg, blazorArgs, diagram, blazorInterop, blazor, eventObj, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, temp, i, i, entry;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(isBlazor() && this.objectType !== 'Port')) return [3\n            /*break*/\n            , 3];\n            this.commandHandler.updatePropertiesToBlazor(args, false);\n\n            if (args.source) {\n              newValues = {\n                offsetX: args.source.wrapper.offsetX,\n                offsetY: args.source.wrapper.offsetY\n              };\n              oldValues = {\n                offsetX: args.source.wrapper.offsetX,\n                offsetY: args.source.wrapper.offsetY\n              };\n            }\n\n            arg = {\n              state: 'Completed',\n              oldValue: cloneBlazorObject(this.tempArgs.oldValue),\n              newValue: cloneBlazorObject(newValues),\n              target: cloneBlazorObject(this.currentTarget),\n              targetPosition: cloneBlazorObject(this.currentPosition),\n              allowDrop: true,\n              cancel: false\n            };\n            blazorArgs = void 0;\n            diagram = 'diagram';\n            blazorInterop = 'sfBlazor';\n            blazor = 'Blazor';\n            if (!(window && window[blazor] && this.commandHandler[diagram].positionChange)) return [3\n            /*break*/\n            , 2];\n            eventObj = {\n              'EventName': 'positionChange',\n              args: JSON.stringify(arg)\n            };\n            return [4\n            /*yield*/\n            , window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n\n          case 1:\n            blazorArgs = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (blazorArgs && blazorArgs.cancel) {\n              this.commandHandler.enableCloneObject(true);\n              this.commandHandler.ismouseEvents(true);\n              this.canCancel = true;\n            }\n\n            if (this.canCancel) {\n              this.commandHandler.insertBlazorObject(args.source);\n              tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n              ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n              this.commandHandler.dragSelectedObjects(tx, ty);\n            }\n\n            _a.label = 3;\n\n          case 3:\n            this.checkPropertyValue();\n            historyAdded = false;\n            redoObject = {\n              nodes: [],\n              connectors: []\n            };\n            if (!(this.objectType !== 'Port')) return [3\n            /*break*/\n            , 8];\n\n            if (args.source instanceof Node || args.source instanceof Connector) {\n              if (args.source instanceof Node) {\n                redoObject.nodes.push(cloneObject(args.source));\n              } else {\n                redoObject.connectors.push(cloneObject(args.source));\n              }\n\n              obj = cloneObject(redoObject);\n              wrapper = args.source.wrapper;\n              obj.offsetX = wrapper.offsetX;\n              obj.offsetY = wrapper.offsetY;\n            } else {\n              obj = cloneObject(args.source);\n            }\n\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source || this.commandHandler.renderContainerHelper(args.source);\n\n            if (object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase || object.id !== 'helper') {\n              if ((object instanceof Selector && Math.round(object.width) === Math.round(this.undoElement.width) && Math.round(object.height) === Math.round(this.undoElement.height) || !(object instanceof Selector)) && (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY || object.sourcePoint !== this.undoElement.sourcePoint // eslint-disable-next-line max-len\n              || object.targetPoint !== this.undoElement.targetPoint) || this.isSelectionHasConnector(object)) {\n                if (args.source) {\n                  newValues = {\n                    offsetX: args.source.wrapper.offsetX,\n                    offsetY: args.source.wrapper.offsetY\n                  };\n                  oldValues = {\n                    offsetX: args.source.wrapper.offsetX,\n                    offsetY: args.source.wrapper.offsetY\n                  };\n                }\n\n                arg = {\n                  source: args.source,\n                  state: 'Completed',\n                  oldValue: oldValues,\n                  newValue: newValues,\n                  target: this.currentTarget,\n                  targetPosition: this.currentPosition,\n                  allowDrop: true,\n                  cancel: false\n                };\n                arg = {\n                  source: cloneBlazorObject(args.source),\n                  state: 'Completed',\n                  oldValue: cloneBlazorObject(oldValues),\n                  newValue: cloneBlazorObject(newValues),\n                  target: cloneBlazorObject(this.currentTarget),\n                  targetPosition: cloneBlazorObject(this.currentPosition),\n                  allowDrop: arg.allowDrop,\n                  cancel: arg.cancel\n                };\n\n                if (isBlazor()) {\n                  arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                }\n\n                if (!isBlazor()) {\n                  this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                }\n\n                if (!isPreventHistory) {\n                  this.commandHandler.startGroupAction();\n                  historyAdded = true;\n                  entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj),\n                    undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                  };\n\n                  if (obj.nodes[0] && obj.nodes[0].processId) {\n                    entry_1 = {\n                      type: 'SizeChanged',\n                      category: 'Internal',\n                      undoObject: this.undoParentElement,\n                      redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                  }\n\n                  this.commandHandler.addHistoryEntry(entry);\n                }\n              }\n            }\n\n            snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) && this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3\n            /*break*/\n            , 7];\n            this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n            arg = {\n              element: args.source,\n              target: this.currentTarget,\n              position: this.currentPosition,\n              cancel: false\n            };\n            if (!isBlazor()) return [3\n            /*break*/\n            , 5];\n            arg = getDropEventArguements(args, arg);\n            return [4\n            /*yield*/\n            , this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n\n          case 4:\n            arg = _a.sent() || arg;\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            _a.label = 6;\n\n          case 6:\n            if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n              nodes = args.source instanceof Selector ? args.source.nodes : [args.source];\n              isEndGroup = false;\n              temp = void 0;\n\n              for (i = 0; i < nodes.length; i++) {\n                if (nodes[0].parentId === nodes[i].parentId) {\n                  temp = true;\n                } else {\n                  temp = false;\n                  break;\n                }\n              }\n\n              for (i = 0; i < nodes.length; i++) {\n                if (!nodes[i].container && temp) {\n                  isEndGroup = true;\n                  this.commandHandler.updateLaneChildrenZindex(nodes[i], this.currentTarget);\n                  this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                  this.commandHandler.renderContainerHelper(nodes[i]);\n                }\n              }\n\n              if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                this.commandHandler.endGroupAction();\n              }\n            }\n\n            _a.label = 7;\n\n          case 7:\n            if (args.source && this.currentTarget) {\n              this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n\n            this.commandHandler.updateSelector();\n\n            if (historyAdded && !this.commandHandler.isContainer) {\n              this.commandHandler.endGroupAction();\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            redoObject.nodes.push(cloneObject(args.source));\n            args.portId = this.portId;\n            obj = cloneObject(redoObject);\n            entry = {\n              type: 'PortPositionChanged',\n              objectId: this.portId,\n              redoObject: cloneObject(obj),\n              undoObject: cloneObject(this.undoElement),\n              category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            _a.label = 9;\n\n          case 9:\n            this.commandHandler.updateBlazorSelector();\n\n            _super.prototype.mouseUp.call(this, args);\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  MoveTool.prototype.isSelectionHasConnector = function (args) {\n    if (args.nodes && args.connectors && args.nodes.length > 0 && args.connectors.length > 0 && (args.width !== this.undoElement.width || args.height !== this.undoElement.height)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n    args = {\n      source: cloneBlazorObject(args.source),\n      state: args.state,\n      oldValue: args.oldValue,\n      newValue: args.newValue,\n      target: getObjectType(target) === Connector ? {\n        connector: cloneBlazorObject(target)\n      } : {\n        node: cloneBlazorObject(target)\n      },\n      targetPosition: this.currentPosition,\n      allowDrop: true,\n      cancel: false\n    };\n    return args;\n  };\n  /* tslint:disable */\n\n  /**\n   * @param args\n   * @private\n   */\n\n\n  MoveTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var isSame = false;\n    var object;\n    object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n\n    if (object instanceof Node || object instanceof Connector) {\n      if (object instanceof Node) {\n        if (object.offsetX === this.undoElement.nodes[0].offsetX && object.offsetY === this.undoElement.nodes[0].offsetY) {\n          isSame = true;\n        }\n      } else {\n        if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) && Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n          isSame = true;\n        }\n      }\n    } else {\n      if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX && object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n        isSame = true;\n      }\n    }\n\n    var oldValues;\n\n    if (object) {\n      oldValues = {\n        offsetX: object.wrapper.offsetX,\n        offsetY: object.wrapper.offsetY\n      };\n    }\n\n    var arg = {\n      source: object,\n      state: 'Start',\n      oldValue: oldValues,\n      newValue: oldValues,\n      target: args.target,\n      targetPosition: args.position,\n      allowDrop: true,\n      cancel: false\n    };\n    arg = {\n      source: cloneBlazorObject(object),\n      state: 'Start',\n      oldValue: cloneBlazorObject(oldValues),\n      newValue: cloneBlazorObject(oldValues),\n      target: args.target,\n      targetPosition: args.position,\n      allowDrop: arg.allowDrop,\n      cancel: arg.cancel\n    };\n\n    if (isSame && !isBlazor()) {\n      this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n    }\n\n    this.currentPosition = args.position;\n\n    if (this.objectType !== 'Port') {\n      var x = this.currentPosition.x - this.prevPosition.x;\n      var y = this.currentPosition.y - this.prevPosition.y;\n      var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n      var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n      this.commandHandler.dragOverElement(args, this.currentPosition);\n      this.commandHandler.disConnect(args.source);\n      this.commandHandler.removeSnap();\n      var oldValues_1;\n      var newValues = void 0;\n      var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n      this.initialOffset.x = diffX - snappedPoint.x;\n      this.initialOffset.y = diffY - snappedPoint.y;\n\n      if (object) {\n        oldValues_1 = {\n          offsetX: object.wrapper.offsetX,\n          offsetY: object.wrapper.offsetY\n        };\n        newValues = {\n          offsetX: object.wrapper.offsetX + snappedPoint.x,\n          offsetY: object.wrapper.offsetY + snappedPoint.y\n        };\n      }\n\n      if (this.currentTarget && args.target !== this.currentTarget) {\n        this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n      }\n\n      this.currentTarget = args.target;\n      var arg_1 = {\n        source: object,\n        state: 'Progress',\n        oldValue: oldValues_1,\n        newValue: newValues,\n        target: args.target,\n        targetPosition: args.position,\n        allowDrop: true,\n        cancel: false\n      };\n\n      if (isBlazor()) {\n        arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n      }\n\n      if (!isBlazor()) {\n        this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n      }\n\n      if (!arg_1.cancel && !this.canCancel) {\n        this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n        var blocked = !this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition);\n        this.blocked = this.blocked || blocked;\n      }\n\n      this.commandHandler.removeStackHighlighter();\n      this.commandHandler.renderStackHighlighter(args);\n\n      if (this.currentTarget && args.source !== this.currentTarget && this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n        var object_1 = args.source instanceof Selector ? args.source.nodes[0] : args.source;\n\n        if (!this.commandHandler.isParentAsContainer(object_1, true) && object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase) {\n          if (this.currentTarget.isLane) {\n            this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n          } else {\n            this.commandHandler.drawHighlighter(this.currentTarget);\n          }\n        }\n      } else {\n        this.commandHandler.removeHighlighter();\n      }\n\n      if (this.commandHandler.canEnableDefaultTooltip()) {\n        var content = this.getTooltipContent(args.source);\n        this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n        this.isTooltipVisible = false;\n      }\n    } else {\n      var matrix = identityMatrix();\n      var node = args.source;\n      rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n      var prevPosition = transformPointByMatrix(matrix, {\n        x: this.prevPosition.x,\n        y: this.prevPosition.y\n      });\n      var position = transformPointByMatrix(matrix, {\n        x: args.position.x,\n        y: args.position.y\n      });\n      this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n    }\n\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n\n  MoveTool.prototype.getTooltipContent = function (node) {\n    return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  MoveTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**   @private  */\n\n\n  MoveTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n\n    this.currentTarget = null;\n    this.prevPosition = null;\n  };\n\n  return MoveTool;\n}(ToolBase);\n\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\n\nvar RotateTool =\n/** @class */\nfunction (_super) {\n  __extends(RotateTool, _super);\n\n  function RotateTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  RotateTool.prototype.mouseDown = function (args) {\n    if (isBlazor()) {\n      var object = void 0;\n      object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n      var oldValue = {\n        rotateAngle: object.wrapper.rotateAngle\n      };\n      var arg = {\n        source: cloneBlazorObject(args.source),\n        state: 'Start',\n        oldValue: oldValue,\n        newValue: undefined,\n        cancel: false\n      };\n      var temparg = arg;\n      this.tempArgs = temparg;\n\n      if (this.tempArgs && this.tempArgs.cancel) {\n        this.canCancel = true;\n      }\n    }\n\n    this.undoElement = cloneObject(args.source);\n\n    if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n      var objects = [];\n      var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = this.commandHandler.cloneChild(nodes[i].id);\n        this.childTable[nodes[i].id] = cloneObject(node);\n      }\n    }\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  RotateTool.prototype.mouseUp = function (args) {\n    return __awaiter(this, void 0, void 0, function () {\n      var diagram, blazorInterop, blazor, object_2, oldValue, newValue, arg, blazorArgs, eventObj, object, oldValue, arg, obj, entry;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.checkPropertyValue();\n            if (!isBlazor()) return [3\n            /*break*/\n            , 3];\n            diagram = 'diagram';\n            blazorInterop = 'sfBlazor';\n            blazor = 'Blazor';\n            this.commandHandler.updatePropertiesToBlazor(args, false);\n            object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            oldValue = {\n              rotateAngle: this.tempArgs.oldValue.rotateAngle\n            };\n            newValue = {\n              rotateAngle: object_2.wrapper.rotateAngle\n            };\n            arg = {\n              state: 'Completed',\n              oldValue: oldValue,\n              newValue: newValue,\n              cancel: false\n            };\n            blazorArgs = void 0;\n            if (!(window && window[blazor] && this.commandHandler[diagram].rotateChange)) return [3\n            /*break*/\n            , 2];\n            eventObj = {\n              'EventName': 'rotateChange',\n              args: JSON.stringify(arg)\n            };\n            return [4\n            /*yield*/\n            , window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n\n          case 1:\n            blazorArgs = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (blazorArgs && blazorArgs.cancel) {\n              this.commandHandler.enableCloneObject(true);\n              this.commandHandler.ismouseEvents(true);\n              this.canCancel = true;\n            }\n\n            if (this.canCancel) {\n              this.commandHandler.insertBlazorObject(args.source);\n              this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n            }\n\n            _a.label = 3;\n\n          case 3:\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n\n            if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n              oldValue = {\n                rotateAngle: object.wrapper.rotateAngle\n              };\n              arg = {\n                source: args.source,\n                state: 'Completed',\n                oldValue: oldValue,\n                newValue: oldValue,\n                cancel: false\n              };\n\n              if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n              }\n\n              obj = void 0;\n              obj = cloneObject(args.source);\n              entry = {\n                type: 'RotationChanged',\n                redoObject: cloneObject(obj),\n                undoObject: cloneObject(this.undoElement),\n                category: 'Internal',\n                childTable: this.childTable\n              };\n              this.commandHandler.addHistoryEntry(entry);\n              this.commandHandler.updateSelector();\n            }\n\n            this.commandHandler.updateBlazorSelector();\n            this.canCancel = undefined;\n            this.tempArgs = undefined;\n\n            _super.prototype.mouseUp.call(this, args);\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  RotateTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var object;\n    object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n\n    if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n      var oldValue_1 = {\n        rotateAngle: object.wrapper.rotateAngle\n      };\n      var arg_2 = {\n        source: args.source,\n        state: 'Start',\n        oldValue: oldValue_1,\n        newValue: oldValue_1,\n        cancel: false\n      };\n\n      if (!isBlazor()) {\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n      }\n    }\n\n    this.currentPosition = args.position;\n    var refPoint = {\n      x: object.wrapper.offsetX,\n      y: object.wrapper.offsetY\n    };\n    var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n    var snapAngle = this.commandHandler.snapAngle(angle);\n    angle = snapAngle !== 0 ? snapAngle : angle;\n    angle = (angle + 360) % 360;\n    var oldValue = {\n      rotateAngle: object.wrapper.rotateAngle\n    };\n    var newValue = {\n      rotateAngle: angle\n    };\n    var arg = {\n      source: args.source,\n      state: 'Progress',\n      oldValue: oldValue,\n      newValue: newValue,\n      cancel: false\n    };\n    var arg1 = {\n      source: cloneBlazorObject(args.source),\n      state: 'Progress',\n      oldValue: cloneBlazorObject(oldValue),\n      newValue: cloneBlazorObject(newValue),\n      cancel: arg.cancel\n    };\n\n    if (!isBlazor()) {\n      this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n    }\n\n    if (!isBlazor() && !arg1.cancel || isBlazor() && !this.canCancel) {\n      this.blocked = !this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle);\n    }\n\n    if (this.commandHandler.canEnableDefaultTooltip()) {\n      var content = this.getTooltipContent(args.source);\n      this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n      this.isTooltipVisible = false;\n    }\n\n    return !this.blocked;\n  };\n\n  RotateTool.prototype.getTooltipContent = function (node) {\n    return Math.round(node.rotateAngle % 360).toString() + '\\xB0';\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  RotateTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**   @private  */\n\n\n  RotateTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n\n  return RotateTool;\n}(ToolBase);\n\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\n\nvar ResizeTool =\n/** @class */\nfunction (_super) {\n  __extends(ResizeTool, _super);\n\n  function ResizeTool(commandHandler, corner) {\n    var _this = _super.call(this, commandHandler, true) || this;\n    /**   @private  */\n\n\n    _this.initialBounds = new Rect();\n    _this.canCancel = false;\n    _this.corner = corner;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ResizeTool.prototype.mouseDown = function (args) {\n    var oldValues;\n\n    if (isBlazor()) {\n      this.commandHandler.insertSelectedObjects();\n      this.startPosition = this.currentPosition = this.prevPosition = args.position;\n      this.currentElement = args.source;\n      this.initialBounds.x = args.source.wrapper.offsetX;\n      this.initialBounds.y = args.source.wrapper.offsetY;\n      this.initialBounds.height = args.source.wrapper.actualSize.height;\n      this.initialBounds.width = args.source.wrapper.actualSize.width;\n\n      if (args.source) {\n        oldValues = {\n          offsetX: args.source.wrapper.offsetX,\n          offsetY: args.source.wrapper.offsetY,\n          width: args.source.wrapper.actualSize.width,\n          height: args.source.wrapper.actualSize.height\n        };\n      }\n\n      var arg = {\n        source: cloneBlazorObject(args.source),\n        state: 'Start',\n        oldValue: oldValues,\n        newValue: cloneBlazorObject(this.currentElement),\n        cancel: false\n      };\n      this.tempArgs = arg;\n    }\n\n    this.undoElement = cloneObject(args.source);\n    this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n\n    _super.prototype.mouseDown.call(this, args);\n\n    if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n      var elements = [];\n      var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = this.commandHandler.cloneChild(nodes[i].id);\n        this.childTable[nodes[i].id] = cloneObject(node);\n      }\n    }\n\n    this.commandHandler.checkSelection(args.source, this.corner);\n\n    _super.prototype.mouseDown.call(this, args);\n\n    this.initialBounds.x = args.source.wrapper.offsetX;\n    this.initialBounds.y = args.source.wrapper.offsetY;\n    this.initialBounds.height = args.source.wrapper.actualSize.height;\n    this.initialBounds.width = args.source.wrapper.actualSize.width;\n  };\n  /**\n   * @param args\n   * @param isPreventHistory\n   * @param args\n   * @param isPreventHistory\n   * @private\n   */\n\n\n  ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n    return __awaiter(this, void 0, void 0, function () {\n      var diagram, blazorInterop, blazor, obj, oldValues, arg, blazorArgs, eventObj, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!isBlazor()) return [3\n            /*break*/\n            , 4];\n            diagram = 'diagram';\n            blazorInterop = 'sfBlazor';\n            blazor = 'Blazor';\n            this.commandHandler.updatePropertiesToBlazor(args, false);\n            obj = cloneObject(args.source);\n            oldValues = {\n              width: args.source.wrapper.actualSize.width,\n              height: args.source.wrapper.actualSize.height,\n              offsetX: args.source.wrapper.offsetX,\n              offsetY: args.source.wrapper.offsetY\n            };\n            arg = {\n              oldValue: this.tempArgs.oldValue,\n              newValue: oldValues,\n              cancel: false,\n              state: 'Completed'\n            };\n            if (!!this.canCancel) return [3\n            /*break*/\n            , 3];\n            blazorArgs = void 0;\n            if (!(window && window[blazor] && this.commandHandler[diagram].sizeChange)) return [3\n            /*break*/\n            , 2];\n            eventObj = {\n              'EventName': 'sizeChange',\n              args: JSON.stringify(arg)\n            };\n            return [4\n            /*yield*/\n            , window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n\n          case 1:\n            blazorArgs = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (blazorArgs && blazorArgs.cancel) {\n              this.commandHandler.enableCloneObject(true);\n              this.commandHandler.ismouseEvents(true);\n              this.commandHandler.insertBlazorObject(args.source);\n              scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n              scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n              this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n            }\n\n            _a.label = 3;\n\n          case 3:\n            this.tempArgs = undefined;\n            this.canCancel = undefined;\n            _a.label = 4;\n\n          case 4:\n            this.checkPropertyValue();\n            this.commandHandler.removeSnap();\n            this.commandHandler.updateSelector();\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n\n            if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY || this.undoElement.width !== object.wrapper.bounds.width || this.undoElement.height !== object.wrapper.bounds.height) {\n              if (!isBlazor()) {\n                deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                oldValue = {\n                  offsetX: args.source.wrapper.offsetX,\n                  offsetY: args.source.wrapper.offsetY,\n                  width: args.source.wrapper.actualSize.width,\n                  height: args.source.wrapper.actualSize.height\n                };\n                arg = {\n                  source: cloneBlazorObject(args.source),\n                  state: 'Completed',\n                  oldValue: oldValue,\n                  newValue: oldValue,\n                  cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n              }\n\n              obj = cloneObject(args.source);\n              entry = {\n                type: 'SizeChanged',\n                redoObject: cloneObject(obj),\n                undoObject: cloneObject(this.undoElement),\n                category: 'Internal',\n                childTable: this.childTable\n              };\n\n              if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                  entry_2 = {\n                    type: 'SizeChanged',\n                    redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement,\n                    category: 'Internal'\n                  };\n                  this.commandHandler.addHistoryEntry(entry_2);\n                }\n\n                this.commandHandler.endGroupAction();\n              }\n            }\n\n            this.commandHandler.updateBlazorSelector();\n\n            _super.prototype.mouseUp.call(this, args);\n\n            return [2\n            /*return*/\n            , !this.blocked];\n        }\n      });\n    });\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ResizeTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var object;\n    object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n\n    if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n      var oldValue = {\n        offsetX: args.source.wrapper.offsetX,\n        offsetY: args.source.wrapper.offsetY,\n        width: args.source.wrapper.actualSize.width,\n        height: args.source.wrapper.actualSize.height\n      };\n      var arg = {\n        source: args.source,\n        state: 'Start',\n        oldValue: oldValue,\n        newValue: this.currentElement,\n        cancel: false\n      };\n\n      if (!isBlazor()) {\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n      }\n    }\n\n    this.currentPosition = args.position;\n    var x = this.currentPosition.x - this.startPosition.x;\n    var y = this.currentPosition.y - this.startPosition.y;\n    var changes = {\n      x: x,\n      y: y\n    };\n    changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n    var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n    var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n    changes = this.getChanges(changes);\n    this.commandHandler.removeSnap();\n    var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n    this.blocked = !this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object);\n\n    if (this.commandHandler.canEnableDefaultTooltip()) {\n      var content = this.getTooltipContent(args.source);\n      this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n      this.isTooltipVisible = false;\n    }\n\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ResizeTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n\n  ResizeTool.prototype.getTooltipContent = function (node) {\n    return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n  };\n\n  ResizeTool.prototype.getChanges = function (change) {\n    switch (this.corner) {\n      case 'ResizeEast':\n        return {\n          x: change.x,\n          y: 0\n        };\n\n      case 'ResizeSouthEast':\n        return change;\n\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: change.y\n        };\n\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -change.y\n        };\n\n      case 'ResizeNorthEast':\n        return {\n          x: change.x,\n          y: -change.y\n        };\n\n      case 'ResizeNorthWest':\n        return {\n          x: -change.x,\n          y: -change.y\n        };\n\n      case 'ResizeWest':\n        return {\n          x: -change.x,\n          y: 0\n        };\n\n      case 'ResizeSouthWest':\n        return {\n          x: -change.x,\n          y: change.y\n        };\n    }\n\n    return change;\n  };\n  /**\n   * Updates the size with delta width and delta height using scaling.\n   */\n\n  /**\n   * Aspect ratio used to resize the width or height based on resizing the height or width\n   *\n   * @param deltaWidth\n   * @param deltaHeight\n   * @param corner\n   * @param startPoint\n   * @param endPoint\n   * @param source\n   * @param deltaWidth\n   * @param deltaHeight\n   * @param corner\n   * @param startPoint\n   * @param endPoint\n   * @param source\n   * @param deltaWidth\n   * @param deltaHeight\n   * @param corner\n   * @param startPoint\n   * @param endPoint\n   * @param source\n   * @param deltaWidth\n   * @param deltaHeight\n   * @param corner\n   * @param startPoint\n   * @param endPoint\n   * @param source\n   * @param deltaWidth\n   * @param deltaHeight\n   * @param corner\n   * @param startPoint\n   * @param endPoint\n   * @param source\n   * @param deltaWidth\n   * @param deltaHeight\n   * @param corner\n   * @param startPoint\n   * @param endPoint\n   * @param source\n   */\n\n\n  ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n    if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n      if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n        if (!(deltaHeight === 1 && deltaWidth === 1)) {\n          deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n        }\n      } else if (startPoint !== endPoint) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n      } else {\n        deltaHeight = deltaWidth = 0;\n      }\n    }\n\n    var oldValue = {\n      offsetX: source.offsetX,\n      offsetY: source.offsetY,\n      width: source.width,\n      height: source.height\n    };\n    this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n    var newValue = {\n      offsetX: source.offsetX,\n      offsetY: source.offsetY,\n      width: source.width,\n      height: source.height\n    };\n    var arg;\n    arg = {\n      source: source,\n      state: 'Progress',\n      oldValue: oldValue,\n      newValue: newValue,\n      cancel: false\n    };\n    var arg1;\n    arg1 = {\n      source: cloneBlazorObject(source),\n      state: 'Progress',\n      oldValue: cloneBlazorObject(oldValue),\n      newValue: cloneBlazorObject(newValue),\n      cancel: arg.cancel\n    };\n\n    if (!isBlazor()) {\n      this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n    }\n\n    if (arg1.cancel || this.canCancel) {\n      this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n    }\n\n    return this.blocked;\n  };\n\n  return ResizeTool;\n}(ToolBase);\n\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\n\nvar NodeDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(NodeDrawingTool, _super);\n\n  function NodeDrawingTool(commandHandler, sourceObject) {\n    var _this = _super.call(this, commandHandler, true) || this;\n\n    _this.sourceObject = sourceObject;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  NodeDrawingTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.inAction = true;\n    this.commandHandler.setFocus();\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  NodeDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var checkBoundaryConstraints;\n    var node = {\n      offsetX: this.currentPosition.x,\n      width: 3,\n      height: 3,\n      offsetY: this.currentPosition.y\n    };\n\n    if (!this.drawingObject) {\n      this.drawingObject = this.commandHandler.drawObject(node);\n    }\n\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n      checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n\n      if (checkBoundaryConstraints) {\n        this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n      }\n    }\n\n    return checkBoundaryConstraints;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  NodeDrawingTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    var checkBoundaryConstraints;\n    var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n    checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n\n    if (this.drawingObject && this.drawingObject instanceof Node) {\n      this.commandHandler.addObjectToDiagram(this.drawingObject);\n      this.drawingObject = null;\n    }\n\n    this.commandHandler.updateBlazorSelector();\n\n    _super.prototype.mouseUp.call(this, args);\n\n    this.inAction = false;\n  };\n  /**   @private  */\n\n\n  NodeDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  NodeDrawingTool.prototype.mouseLeave = function (args) {\n    if (this.inAction) {\n      this.mouseUp(args);\n    }\n  };\n\n  return NodeDrawingTool;\n}(ToolBase);\n\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\n\nvar ConnectorDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(ConnectorDrawingTool, _super);\n\n  function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n    var _this = _super.call(this, commandHandler, endPoint) || this;\n\n    _this.sourceObject = sourceObject;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectorDrawingTool.prototype.mouseDown = function (args) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        _super.prototype.mouseDown.call(this, args);\n\n        this.inAction = true;\n        this.commandHandler.setFocus();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectorDrawingTool.prototype.mouseMove = function (args) {\n    this.commandHandler.enableServerDataBinding(false);\n\n    if (this.inAction) {\n      var connector = {\n        sourcePoint: this.currentPosition,\n        targetPoint: this.currentPosition\n      };\n\n      if (!this.drawingObject) {\n        this.drawingObject = this.commandHandler.drawObject(connector);\n      }\n\n      args.source = this.drawingObject;\n\n      if ((args.target && args.target instanceof Node || args.actualObject && args.sourceWrapper && checkPort(args.actualObject, args.sourceWrapper)) && (this.endPoint !== 'ConnectorTargetEnd' || canInConnect(args.target))) {\n        this.commandHandler.connect(this.endPoint, args);\n      }\n\n      this.endPoint = 'ConnectorTargetEnd';\n    }\n\n    if (!this.inAction) {\n      this.commandHandler.updateSelector();\n\n      if (args.source && args.sourceWrapper) {\n        this.commandHandler.renderHighlighter(args, true);\n      }\n    }\n\n    _super.prototype.mouseMove.call(this, args);\n\n    this.commandHandler.enableServerDataBinding(true);\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectorDrawingTool.prototype.mouseUp = function (args) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.commandHandler.enableServerDataBinding(false);\n        this.checkPropertyValue();\n\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n          this.commandHandler.addObjectToDiagram(this.drawingObject);\n          this.drawingObject = null;\n        }\n\n        this.commandHandler.updateBlazorSelector();\n        this.inAction = false;\n        this.commandHandler.enableServerDataBinding(true);\n\n        _super.prototype.mouseUp.call(this, args);\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**   @private  */\n\n\n  ConnectorDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n    if (this.inAction) {\n      this.mouseUp(args);\n    }\n  };\n\n  return ConnectorDrawingTool;\n}(ConnectTool);\n\nexport { ConnectorDrawingTool };\n\nvar TextDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(TextDrawingTool, _super);\n\n  function TextDrawingTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  TextDrawingTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.commandHandler.clearSelection();\n    var node = {\n      shape: {\n        type: 'Text'\n      },\n      offsetX: this.currentPosition.x,\n      offsetY: this.currentPosition.y\n    };\n\n    if (!args.source) {\n      this.drawingNode = this.commandHandler.drawObject(node);\n    }\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  TextDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (!this.drawingNode) {\n      var node = {\n        shape: {\n          type: 'Text'\n        },\n        offsetX: this.currentPosition.x,\n        width: 30,\n        height: 30,\n        // EJ2-42640-Text size is different if Text Node is created over another diagram commited by sivakumar sekar\n        // commanded style property and added it after the object is drawn\n        // style: { strokeDashArray: '2 2', fill: 'transparent' },\n        offsetY: this.currentPosition.y\n      };\n      this.drawingNode = this.commandHandler.drawObject(node);\n      this.drawingNode.style.strokeDashArray = '2 2';\n      this.drawingNode.style.fill = 'transparent';\n    } else {\n      this.drawingNode.style.strokeColor = 'black';\n      this.drawingNode.style.strokeDashArray = '2 2';\n      this.drawingNode.style.fill = 'transparent';\n    }\n\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n      this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n    }\n\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  TextDrawingTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n\n    if (this.drawingNode) {\n      this.drawingNode.style.strokeColor = 'none';\n      this.drawingNode.style.fill = 'none';\n    } else {\n      this.drawingNode = args.source;\n    }\n\n    if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n      this.commandHandler.addText(this.drawingNode, this.currentPosition);\n    }\n\n    _super.prototype.mouseUp.call(this, args);\n\n    this.inAction = false;\n  };\n  /**   @private  */\n\n\n  TextDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n\n  return TextDrawingTool;\n}(ToolBase);\n\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\n\nvar ZoomPanTool =\n/** @class */\nfunction (_super) {\n  __extends(ZoomPanTool, _super);\n\n  function ZoomPanTool(commandHandler, zoom) {\n    var _this = _super.call(this, commandHandler) || this;\n\n    _this.zooming = zoom;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ZoomPanTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.inAction = true;\n    this.commandHandler.setBlazorDiagramProps(true);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ZoomPanTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n        var difX = this.currentPosition.x - this.prevPosition.x;\n        var difY = this.currentPosition.y - this.prevPosition.y;\n        this.commandHandler.scroll(difX, difY, this.currentPosition);\n      } else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n        var startTouch0 = args.startTouches[0];\n        var startTouch1 = args.startTouches[1];\n        var moveTouch0 = args.moveTouches[0];\n        var moveTouch1 = args.moveTouches[1];\n        var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n        var focusPoint = args.position;\n        this.commandHandler.zoom(scale, 0, 0, focusPoint);\n        this.updateTouch(startTouch0, moveTouch0);\n        this.updateTouch(startTouch1, moveTouch1);\n      }\n    }\n\n    this.commandHandler.dataBinding();\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ZoomPanTool.prototype.mouseUp = function (args) {\n    this.commandHandler.setBlazorDiagramProps(false);\n    this.checkPropertyValue();\n    this.commandHandler.updatePanState(false);\n\n    _super.prototype.mouseUp.call(this, args);\n\n    this.inAction = false;\n  };\n  /**   @private  */\n\n\n  ZoomPanTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n\n  ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n    var x = touch2.pageX - touch1.pageX;\n    var y = touch2.pageY - touch1.pageY;\n    return Math.sqrt(x * x + y * y);\n  };\n\n  ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n    startTouch.pageX = moveTouch.pageX;\n    startTouch.pageY = moveTouch.pageY;\n  };\n\n  return ZoomPanTool;\n}(ToolBase);\n\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\n\nvar ExpandTool =\n/** @class */\nfunction (_super) {\n  __extends(ExpandTool, _super);\n\n  function ExpandTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  ExpandTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    this.commandHandler.initExpand(args);\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n\n  return ExpandTool;\n}(ToolBase);\n\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\n\nvar LabelTool =\n/** @class */\nfunction (_super) {\n  __extends(LabelTool, _super);\n\n  function LabelTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n    win.focus();\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n\n  return LabelTool;\n}(ToolBase);\n\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\n\nvar PolygonDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(PolygonDrawingTool, _super);\n\n  function PolygonDrawingTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolygonDrawingTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.inAction = true;\n\n    if (!this.drawingObject) {\n      this.startPoint = {\n        x: this.startPosition.x,\n        y: this.startPosition.y\n      };\n      var node = {\n        offsetX: this.currentPosition.x,\n        offsetY: this.currentPosition.y,\n        width: 5,\n        height: 5,\n        style: {\n          strokeColor: 'black',\n          strokeWidth: 1\n        },\n        shape: {\n          type: 'Basic',\n          shape: 'Polygon',\n          points: [{\n            x: this.startPoint.x,\n            y: this.startPoint.y\n          }, {\n            x: this.currentPosition.x,\n            y: this.currentPosition.y\n          }]\n        }\n      };\n\n      if (isBlazor() && node.shape.type === 'Basic') {\n        node.shape.basicShape = 'Polygon';\n      }\n\n      this.drawingObject = this.commandHandler.drawObject(node);\n    } else {\n      var pt = void 0;\n      var obj = this.drawingObject.shape;\n      pt = obj.points[obj.points.length - 1];\n      pt = {\n        x: pt.x,\n        y: pt.y\n      };\n      this.drawingObject.shape.points.push(pt);\n    }\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolygonDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      var obj = this.drawingObject.shape;\n\n      if (this.drawingObject && this.currentPosition) {\n        obj.points[obj.points.length - 1].x = this.currentPosition.x;\n        obj.points[obj.points.length - 1].y = this.currentPosition.y;\n        this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n          var region = Rect.toBounds(this.drawingObject.shape.points);\n          this.commandHandler.updateNodeDimension(this.drawingObject, region);\n        }\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @param args\n   * @param dblClickArgs\n   * @param args\n   * @param dblClickArgs\n   * @private\n   */\n\n\n  PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n    this.checkPropertyValue();\n\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      this.inAction = false;\n\n      if (this.drawingObject) {\n        this.commandHandler.addObjectToDiagram(this.drawingObject);\n      }\n    }\n\n    this.endAction();\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolygonDrawingTool.prototype.mouseWheel = function (args) {\n    _super.prototype.mouseWheel.call(this, args);\n\n    this.mouseMove(args);\n  };\n  /**   @private  */\n\n\n  PolygonDrawingTool.prototype.endAction = function () {\n    this.inAction = false;\n    this.drawingObject = null;\n  };\n\n  return PolygonDrawingTool;\n}(ToolBase);\n\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\n\nvar PolyLineDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(PolyLineDrawingTool, _super);\n\n  function PolyLineDrawingTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolyLineDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      var obj = this.drawingObject;\n      obj.targetPoint = this.currentPosition;\n      this.commandHandler.updateConnectorPoints(obj);\n    }\n\n    return true;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolyLineDrawingTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.inAction = true;\n\n    if (!this.drawingObject) {\n      var connector = {\n        id: 'Connector',\n        type: 'Straight',\n        sourcePoint: this.currentPosition,\n        targetPoint: this.currentPosition\n      };\n      this.drawingObject = this.commandHandler.drawObject(connector);\n    } else {\n      var drawObject = this.drawingObject;\n      var segment = void 0;\n      segment = new StraightSegment(drawObject, 'segments', {\n        type: 'Straight'\n      }, true);\n      segment.point = this.currentPosition;\n      drawObject.segments[drawObject.segments.length - 1] = segment;\n    }\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n    _super.prototype.mouseWheel.call(this, args);\n\n    this.mouseMove(args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  PolyLineDrawingTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      if (this.drawingObject) {\n        var drawObject = this.drawingObject;\n        drawObject.segments[drawObject.segments.length - 1].point = {\n          x: 0,\n          y: 0\n        };\n        this.commandHandler.addObjectToDiagram(this.drawingObject);\n      }\n    }\n\n    this.endAction();\n  };\n  /**   @private  */\n\n\n  PolyLineDrawingTool.prototype.endAction = function () {\n    this.drawingObject = null;\n    this.inAction = false;\n  };\n\n  return PolyLineDrawingTool;\n}(ToolBase);\n\nexport { PolyLineDrawingTool };\n\nvar LabelDragTool =\n/** @class */\nfunction (_super) {\n  __extends(LabelDragTool, _super);\n\n  function LabelDragTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelDragTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.undoElement = cloneObject(args.source);\n    this.annotationId = args.sourceWrapper.id;\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelDragTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var difx = this.currentPosition.x - this.prevPosition.x;\n    var dify = this.currentPosition.y - this.prevPosition.y;\n    var node = args.source;\n\n    if (node instanceof Node) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n      var diff = transformPointByMatrix(matrix, {\n        x: difx,\n        y: dify\n      });\n      difx = diff.x;\n      dify = diff.y;\n    }\n\n    if (this.inAction) {\n      this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n      this.commandHandler.updateSelector();\n    }\n\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelDragTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    var redoValue = args.source;\n    this.inAction = false;\n    var entryValue = {\n      type: 'AnnotationPropertyChanged',\n      objectId: this.annotationId,\n      undoObject: cloneObject(this.undoElement),\n      category: 'Internal',\n      redoObject: cloneObject(redoValue)\n    };\n    this.commandHandler.addHistoryEntry(entryValue);\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelDragTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n\n  return LabelDragTool;\n}(ToolBase);\n\nexport { LabelDragTool };\n\nvar LabelResizeTool =\n/** @class */\nfunction (_super) {\n  __extends(LabelResizeTool, _super);\n\n  function LabelResizeTool(commandHandler, corner) {\n    var _this = _super.call(this, commandHandler, true) || this;\n\n    _this.corner = corner;\n    return _this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelResizeTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    var object = args.source.nodes.length ? args.source.nodes[0] : args.source.connectors[0];\n    this.annotationId = args.source.wrapper.children[0].id;\n    this.undoElement = cloneObject(object);\n    var annotation = args.source.wrapper.children[0];\n    this.initialBounds = {\n      x: annotation.offsetX,\n      y: annotation.offsetY,\n      width: annotation.actualSize.width,\n      height: annotation.actualSize.height\n    };\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelResizeTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      this.resizeObject(args);\n    }\n\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelResizeTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    var redoObject = args.source.nodes.length ? args.source.nodes[0] : args.source.connectors[0];\n    this.inAction = false;\n    var entry = {\n      type: 'AnnotationPropertyChanged',\n      objectId: this.annotationId,\n      redoObject: cloneObject(redoObject),\n      undoObject: cloneObject(this.undoElement),\n      category: 'Internal'\n    };\n    this.commandHandler.addHistoryEntry(entry);\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelResizeTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelResizeTool.prototype.resizeObject = function (args) {\n    var object;\n    object = args.source.nodes.length ? args.source.nodes[0] : args.source.connectors[0];\n    var textElement = args.source.wrapper.children[0];\n    var deltaWidth;\n    var deltaHeight;\n    var center = {\n      x: textElement.offsetX,\n      y: textElement.offsetY\n    };\n    var rotateAngle = textElement.rotateAngle;\n    rotateAngle += object instanceof Node ? object.rotateAngle : 0;\n    rotateAngle = (rotateAngle + 360) % 360;\n    var trans = identityMatrix();\n    rotateMatrix(trans, rotateAngle, center.x, center.y);\n    var corner = this.corner.slice(5);\n    var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n    var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n    var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n    var pivotPoint = this.getPivot(corner);\n    pivotPoint = {\n      x: x + textElement.actualSize.width * pivotPoint.x,\n      y: y + textElement.actualSize.height * pivotPoint.y\n    };\n    var point = transformPointByMatrix(trans, pivotPoint);\n    pivot.x = point.x;\n    pivot.y = point.y;\n    deltaWidth = pivot.width;\n    deltaHeight = pivot.height;\n    deltaWidth = deltaWidth < 0 ? 1 : deltaWidth;\n    deltaHeight = deltaHeight < 0 ? 1 : deltaHeight;\n    this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n    this.commandHandler.updateSelector();\n  };\n\n  return LabelResizeTool;\n}(ToolBase);\n\nexport { LabelResizeTool };\n\nvar LabelRotateTool =\n/** @class */\nfunction (_super) {\n  __extends(LabelRotateTool, _super);\n\n  function LabelRotateTool(commandHandler) {\n    return _super.call(this, commandHandler, true) || this;\n  }\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelRotateTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.annotationId = args.source.wrapper.children[0].id;\n    var object = args.source.nodes.length ? args.source.nodes[0] : args.source.connectors[0];\n    this.undoElement = cloneObject(object);\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelRotateTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (args.source) {\n      if (this.inAction) {\n        var object = args.source.nodes[0] ? args.source.nodes[0] : args.source.connectors[0];\n        var annotation = void 0;\n        annotation = args.source.annotation;\n        this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n        this.commandHandler.updateSelector();\n      }\n    }\n\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelRotateTool.prototype.mouseUp = function (args) {\n    this.checkPropertyValue();\n    this.inAction = false;\n    var redoEntry = args.source.nodes.length ? args.source.nodes[0] : args.source.connectors[0];\n    var entryObject = {\n      type: 'AnnotationPropertyChanged',\n      objectId: this.annotationId,\n      redoObject: cloneObject(redoEntry),\n      undoObject: cloneObject(this.undoElement),\n      category: 'Internal'\n    };\n    this.commandHandler.addHistoryEntry(entryObject);\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @param args\n   * @private\n   */\n\n\n  LabelRotateTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n\n  return LabelRotateTool;\n}(ToolBase);\n\nexport { LabelRotateTool };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/tool.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Node","Connector","StraightSegment","Point","BpmnSubEvent","PointPort","rotatePoint","cloneObject","Rect","getPolygonPath","canOutConnect","canInConnect","canAllowDrop","canPortInConnect","canPortOutConnect","canMove","transformPointByMatrix","rotateMatrix","identityMatrix","NodeConstraints","DiagramEvent","PortConstraints","TextElement","contains","Selector","getInOutConnectPorts","cloneBlazorObject","getDropEventArguements","getObjectType","checkPort","isBlazor","DeepDiffMapper","ToolBase","command","protectChange","commandHandler","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","nodes","connectors","checkProperty","undoParentElement","startAction","mouseDown","args","enableCloneObject","ismouseEvents","source","startPosition","currentPosition","prevPosition","position","mouseDownElement","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","shape","startPoint","endPoint","corner","initialBounds","angle","renderContainerHelper","horizontalsnap","snapped","offset","left","right","verticalsnap","top","bottom","difx","x","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","rotateAngle","matrix","offsetX","offsetY","w","width","h","height","pivot","deltaWidth","deltaHeight","diff","actualSize","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","_super","action","_this","equals","rect","toBounds","clearObjectSelection","clearSelectedItems","drawSelectionRectangle","isUserHandle","region","doRubberBandSelection","arrayNodes","getSelectedObject","hasSelection","info","ctrlKey","clearSelection","labelSelect","sourceWrapper","selectObjects","isSelected","clickCount","unSelect","updateBlazorSelector","FixedUserHandleTool","arguments","val","fixedUserHandle","iconId","id","i","fixedUserHandles","indexOf","element","connector","node","connectorFixedUserHandle","nodeFixedUserHandle","arg","trigger","fixedUserHandleClick","triggerEvent","ConnectTool","isConnected","selectorModel","oldValue","segment","segmentpoint1","segmentpoint2","_a","insertSelectedObjects","insertBlazorConnector","oldConnector","connectorTargetValue","portId","undefined","nodeId","newValue","cancel","state","connectorEnd","tempArgs","ConnectorDrawingTool","segments","isEmptyPoint","point1","bezierPoint1","point2","bezierPoint2","hitPadding","selectedSegment","temparg","nodeEndId","portEndId","diagram","blazorInterop","blazor","eventObj","oldValues","targetPortName","targetNodeNode","target","obj","entry","connectionChange","updatePropertiesToBlazor","connectorSourceValue","window","JSON","stringify","updateBlazorDiagramEvents","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","sourcePoint","sourceID","targetPoint","targetID","findTarget","targetWrapper","targetNode","targetPort","sourcePointChange","targetPointChange","removeTerminalSegment","type","redoObject","undoObject","category","addHistoryEntry","canCancel","diffX","diffY","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","isConnect","checkConnect","canEnableDefaultTooltip","content","getTooltipContent","showTooltip","Math","round","constraints","None","Default","InConnect","OutConnect","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","wrapper","targetPosition","allowDrop","isPreventHistory","newValues","blazorArgs","tx","ty","historyAdded","object","entry_1","snappedPoint","isEndGroup","temp","positionChange","insertBlazorObject","dragSelectedObjects","isLane","isPhase","isSelectionHasConnector","getBlazorPositionChangeEventArgs","startGroupAction","processId","snapPoint","removeHighlighter","isDroppable","drop","isParentAsContainer","parentId","container","updateLaneChildrenZindex","dropChildToContainer","isContainer","endGroupAction","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","renderStackHighlighter","object_1","drawHighlighter","portDrag","bounds","RotateTool","children","objects","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","refPoint","findAngle","snapAngle","arg1","rotateSelectedItems","toString","ResizeTool","elements","checkSelection","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","sx","sy","getChanges","change","AspectRatio","max","NodeDrawingTool","sourceObject","setFocus","checkBoundaryConstraints","drawingObject","drawObject","updateNodeDimension","addObjectToDiagram","enableServerDataBinding","actualObject","renderHighlighter","TextDrawingTool","drawingNode","style","strokeDashArray","fill","strokeColor","addText","ZoomPanTool","zoom","zooming","setBlazorDiagramProps","difX","difY","scroll","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","scale","getDistance","focusPoint","updateTouch","dataBinding","updatePanState","touch1","touch2","pageX","pageY","sqrt","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","win","open","hyperlink","link","focus","PolygonDrawingTool","strokeWidth","points","basicShape","pt","data","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","point","annotationId","labelDrag","redoValue","entryValue","LabelResizeTool","annotation","resizeObject","textElement","center","trans","slice","pivotPoint","labelResize","LabelRotateTool","labelRotate","redoEntry","entryObject"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect, canMove } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     *\n     * @param {CommandHandler} command Command that is corresponding to the current action\n     * @param protectChange\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n        // Bug fix - EJ2-44495 -Node does not gets selected on slight movement of mouse when drag constraints disabled for node\n        this.mouseDownElement = args.source;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n        // Bug fix - EJ2-44495 -Node does not gets selected on slight movement of mouse when drag constraints disabled for node\n        this.mouseDownElement = null;\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            // Bug fix - EJ2-44495 -Node does not gets selected on slight movement of mouse when drag constraints disabled for node\n            if (this.mouseDownElement && !canMove(this.mouseDownElement)) {\n                this.commandHandler.clearObjectSelection(this.mouseDownElement);\n            }\n            else {\n                this.commandHandler.clearSelectedItems();\n                this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n            }\n        }\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (!this.commandHandler.isUserHandle(this.currentPosition)) {\n            if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n                var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n                this.commandHandler.doRubberBandSelection(region);\n            }\n            else {\n                //single selection\n                var arrayNodes = this.commandHandler.getSelectedObject();\n                if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                    this.commandHandler.clearSelection(args.source === null ? true : false);\n                    if (this.action === 'LabelSelect') {\n                        this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                    }\n                    else if (args.source) {\n                        this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                    }\n                }\n                else {\n                    //handling multiple selection\n                    if (args && args.source) {\n                        if (!this.commandHandler.isSelected(args.source)) {\n                            this.commandHandler.selectObjects([args.source], true);\n                        }\n                        else {\n                            if (args.clickCount === 1) {\n                                this.commandHandler.unSelect(args.source);\n                                this.commandHandler.updateBlazorSelector();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\nvar FixedUserHandleTool = /** @class */ (function (_super) {\n    __extends(FixedUserHandleTool, _super);\n    function FixedUserHandleTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    FixedUserHandleTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var val = args.source;\n        var fixedUserHandle;\n        var iconId = args.sourceWrapper.id;\n        for (var i = 0; i < val.fixedUserHandles.length; i++) {\n            if (iconId.indexOf(val.fixedUserHandles[i].id) > -1) {\n                fixedUserHandle = val.fixedUserHandles[i];\n            }\n        }\n        if (isBlazor()) {\n            var element = getObjectType(args.source) === Connector ? { connector: args.source }\n                : { node: args.source };\n            var fixedUserHandles = getObjectType(args.source) === Connector ?\n                { connectorFixedUserHandle: fixedUserHandle }\n                : { nodeFixedUserHandle: fixedUserHandle };\n            var arg = {\n                fixedUserHandle: fixedUserHandles,\n                element: element\n            };\n            var trigger = DiagramEvent.fixedUserHandleClick;\n            this.commandHandler.triggerEvent(trigger, arg);\n            _super.prototype.mouseUp.call(this, args);\n        }\n        else {\n            var arg = {\n                fixedUserHandle: fixedUserHandle,\n                element: args.source\n            };\n            var trigger = DiagramEvent.fixedUserHandleClick;\n            this.commandHandler.triggerEvent(trigger, arg);\n            _super.prototype.mouseUp.call(this, args);\n        }\n    };\n    return FixedUserHandleTool;\n}(ToolBase));\nexport { FixedUserHandleTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                if (isBlazor() && args && args.source) {\n                    this.commandHandler.insertSelectedObjects();\n                    this.commandHandler.insertBlazorConnector(args.source);\n                    selectorModel = args.source;\n                    if (selectorModel.connectors) {\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        this.tempArgs = arg;\n                    }\n                }\n                this.inAction = true;\n                this.undoElement = undefined;\n                if (!(this instanceof ConnectorDrawingTool)) {\n                    this.undoElement = cloneObject(args.source);\n                }\n                _super.prototype.mouseDown.call(this, args);\n                if (args.source && args.source.connectors) {\n                    oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                    connectors = args.source.connectors[0];\n                    this.oldConnector = cloneObject(connectors);\n                }\n                // Sets the selected segment\n                if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                    for (i = 0; i < connectors.segments.length; i++) {\n                        segment = connectors.segments[i];\n                        segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                        segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                        if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                            contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                            this.selectedSegment = segment;\n                        }\n                    }\n                }\n                this.currentPosition = args.position;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, nodeEndId, portEndId, diagram, blazorInterop, blazor, eventObj, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        if (!(this.tempArgs && this.oldConnector)) return [3 /*break*/, 3];\n                        this.commandHandler.updatePropertiesToBlazor(args, false);\n                        this.tempArgs.state = 'Changed';\n                        nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                        portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                        this.tempArgs.oldValue = this.endPoint === 'ConnectorSourceEnd' ?\n                            { connectorSourceValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } } :\n                            { connectorTargetValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } };\n                        temparg = {\n                            state: this.tempArgs.state, oldValue: this.tempArgs.oldValue,\n                            newValue: this.tempArgs.newValue, cancel: this.tempArgs.cancel, connectorEnd: this.tempArgs.connectorEnd\n                        };\n                        diagram = 'diagram';\n                        blazorInterop = 'sfBlazor';\n                        blazor = 'Blazor';\n                        if (!(window && window[blazor] && this.commandHandler[diagram].connectionChange)) return [3 /*break*/, 2];\n                        eventObj = { 'EventName': 'connectionChange', args: JSON.stringify(this.tempArgs) };\n                        return [4 /*yield*/, window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n                    case 1:\n                        temparg = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 3;\n                    case 3:\n                        if (!isBlazor() && this.isConnected && args.source.connectors) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = { x: this.prevPosition.x, y: this.prevPosition.y };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**\n     * @param args\n     * @private\n     */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)\n            && (target.constraints == undefined || (target.constraints & (PortConstraints.Default & ~(PortConstraints.InConnect | PortConstraints.OutConnect))) > 0)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        this.commandHandler.insertBlazorConnector(args.source);\n        var oldValues;\n        if (isBlazor()) {\n            this.commandHandler.insertSelectedObjects();\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**\n     * @param args\n     * @param isPreventHistory\n     * @param args\n     * @param isPreventHistory\n     * @private\n     */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, diagram, blazorInterop, blazor, eventObj, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, temp, i, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 3];\n                        this.commandHandler.updatePropertiesToBlazor(args, false);\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        blazorArgs = void 0;\n                        diagram = 'diagram';\n                        blazorInterop = 'sfBlazor';\n                        blazor = 'Blazor';\n                        if (!(window && window[blazor] && this.commandHandler[diagram].positionChange)) return [3 /*break*/, 2];\n                        eventObj = { 'EventName': 'positionChange', args: JSON.stringify(arg) };\n                        return [4 /*yield*/, window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.commandHandler.enableCloneObject(true);\n                            this.commandHandler.ismouseEvents(true);\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.insertBlazorObject(args.source);\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 8];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source || this.commandHandler.renderContainerHelper(args.source);\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if ((((object instanceof Selector && Math.round(object.width) === Math.round(this.undoElement.width) && Math.round(object.height) === Math.round(this.undoElement.height)) || !(object instanceof Selector)) && (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY ||\n                                object.sourcePoint !== this.undoElement.sourcePoint\n                                // eslint-disable-next-line max-len\n                                || object.targetPoint !== this.undoElement.targetPoint)) || this.isSelectionHasConnector(object)) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 7];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 5];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 4:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 6];\n                    case 5:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 6;\n                    case 6:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            temp = void 0;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (nodes[0].parentId === nodes[i].parentId) {\n                                    temp = true;\n                                }\n                                else {\n                                    temp = false;\n                                    break;\n                                }\n                            }\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container && temp) {\n                                    isEndGroup = true;\n                                    this.commandHandler.updateLaneChildrenZindex(nodes[i], this.currentTarget);\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 7;\n                    case 7:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 9];\n                    case 8:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 9;\n                    case 9:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.isSelectionHasConnector = function (args) {\n        if (args.nodes && args.connectors && args.nodes.length > 0 && args.connectors.length > 0 &&\n            (args.width !== this.undoElement.width || args.height !== this.undoElement.height)) {\n            return true;\n        }\n        return false;\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**\n     * @param args\n     * @private\n     */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagram, blazorInterop, blazor, object_2, oldValue, newValue, arg, blazorArgs, eventObj, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        diagram = 'diagram';\n                        blazorInterop = 'sfBlazor';\n                        blazor = 'Blazor';\n                        this.commandHandler.updatePropertiesToBlazor(args, false);\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        blazorArgs = void 0;\n                        if (!(window && window[blazor] && this.commandHandler[diagram].rotateChange)) return [3 /*break*/, 2];\n                        eventObj = { 'EventName': 'rotateChange', args: JSON.stringify(arg) };\n                        return [4 /*yield*/, window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.commandHandler.enableCloneObject(true);\n                            this.commandHandler.ismouseEvents(true);\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.insertBlazorObject(args.source);\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 3;\n                    case 3:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor()) {\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            }\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param args\n     * @private\n     */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**\n     * @param args\n     * @private\n     */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.commandHandler.insertSelectedObjects();\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**\n     * @param args\n     * @param isPreventHistory\n     * @param args\n     * @param isPreventHistory\n     * @private\n     */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagram, blazorInterop, blazor, obj, oldValues, arg, blazorArgs, eventObj, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        diagram = 'diagram';\n                        blazorInterop = 'sfBlazor';\n                        blazor = 'Blazor';\n                        this.commandHandler.updatePropertiesToBlazor(args, false);\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 3];\n                        blazorArgs = void 0;\n                        if (!(window && window[blazor] && this.commandHandler[diagram].sizeChange)) return [3 /*break*/, 2];\n                        eventObj = { 'EventName': 'sizeChange', args: JSON.stringify(arg) };\n                        return [4 /*yield*/, window[blazorInterop].updateBlazorDiagramEvents(eventObj, this.commandHandler[diagram])];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.commandHandler.enableCloneObject(true);\n                            this.commandHandler.ismouseEvents(true);\n                            this.commandHandler.insertBlazorObject(args.source);\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 4;\n                    case 4:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY ||\n                            this.undoElement.width !== object.wrapper.bounds.width || this.undoElement.height !== object.wrapper.bounds.height)) {\n                            if (!isBlazor()) {\n                                deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                                this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                                oldValue = {\n                                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: oldValue, newValue: oldValue, cancel: false\n                                };\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     *\n     * @param deltaWidth\n     * @param deltaHeight\n     * @param corner\n     * @param startPoint\n     * @param endPoint\n     * @param source\n     * @param deltaWidth\n     * @param deltaHeight\n     * @param corner\n     * @param startPoint\n     * @param endPoint\n     * @param source\n     * @param deltaWidth\n     * @param deltaHeight\n     * @param corner\n     * @param startPoint\n     * @param endPoint\n     * @param source\n     * @param deltaWidth\n     * @param deltaHeight\n     * @param corner\n     * @param startPoint\n     * @param endPoint\n     * @param source\n     * @param deltaWidth\n     * @param deltaHeight\n     * @param corner\n     * @param startPoint\n     * @param endPoint\n     * @param source\n     * @param deltaWidth\n     * @param deltaHeight\n     * @param corner\n     * @param startPoint\n     * @param endPoint\n     * @param source\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        this.commandHandler.setFocus();\n    };\n    /**\n     * @param args\n     * @private\n     */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                this.commandHandler.setFocus();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        this.commandHandler.enableServerDataBinding(false);\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (((args.target && args.target instanceof Node) || (args.actualObject && args.sourceWrapper && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        this.commandHandler.enableServerDataBinding(true);\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.commandHandler.enableServerDataBinding(false);\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                this.commandHandler.enableServerDataBinding(true);\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**\n     * @param args\n     * @private\n     */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                // EJ2-42640-Text size is different if Text Node is created over another diagram commited by sivakumar sekar\n                // commanded style property and added it after the object is drawn\n                // style: { strokeDashArray: '2 2', fill: 'transparent' },\n                offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        this.commandHandler.setBlazorDiagramProps(true);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        this.commandHandler.dataBinding();\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.commandHandler.setBlazorDiagramProps(false);\n        this.checkPropertyValue();\n        this.commandHandler.updatePanState(false);\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**\n     * @param args\n     * @private\n     */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * @param args\n     * @param dblClickArgs\n     * @param args\n     * @param dblClickArgs\n     * @private\n     */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**\n     * @param args\n     * @private\n     */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**\n     * @param args\n     * @private\n     */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**\n     * @param args\n     * @private\n     */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @param args\n     * @private\n     */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n"]},"metadata":{},"sourceType":"module"}