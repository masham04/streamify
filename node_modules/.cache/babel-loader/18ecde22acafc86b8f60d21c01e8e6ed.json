{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Property, ChildProperty, isBlazor } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\nimport { BlazorTooltip } from '../blazor-tooltip/blazor-Tooltip';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\n\nvar DiagramTooltip =\n/** @class */\nfunction (_super) {\n  __extends(DiagramTooltip, _super);\n\n  function DiagramTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], DiagramTooltip.prototype, \"content\", void 0);\n\n  __decorate([Property('TopLeft')], DiagramTooltip.prototype, \"position\", void 0);\n\n  __decorate([Property('Mouse')], DiagramTooltip.prototype, \"relativeMode\", void 0);\n\n  __decorate([Property(true)], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n\n  __decorate([Property('auto')], DiagramTooltip.prototype, \"width\", void 0);\n\n  __decorate([Property('auto')], DiagramTooltip.prototype, \"height\", void 0);\n\n  __decorate([Property('Auto')], DiagramTooltip.prototype, \"openOn\", void 0);\n\n  __decorate([Property()], DiagramTooltip.prototype, \"animation\", void 0);\n\n  return DiagramTooltip;\n}(ChildProperty);\n\nexport { DiagramTooltip };\n/**\n * initTooltip method \\\n *\n * @returns { Tooltip | BlazorTooltip } initTooltip method .\\\n * @param {Diagram} diagram - provide the points value.\n *\n * @private\n */\n\nexport function initTooltip(diagram) {\n  var tooltip;\n\n  if (!isBlazor()) {\n    var tooltipOption = new Tooltip();\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n  } else {\n    tooltip = new BlazorTooltip(diagram);\n    tooltip = updateTooltipContent(diagram.tooltip, tooltip);\n  }\n\n  return tooltip;\n}\n/**\n * beforeOpen method \\\n *\n * @returns { void } beforeOpen method .\\\n * @param {TooltipEventArgs} args - provide the points value.\n *\n * @private\n */\n\nfunction beforeOpen(args) {\n  if (this.content === '' || this.content === undefined) {\n    args.element.style.display = 'none';\n  }\n}\n/**\n * beforeCollision method \\\n *\n * @returns { void } beforeCollision method .\\\n * @param {TooltipEventArgs} args - provide the points value.\n *\n * @private\n */\n\n\nfunction beforeCollision(args) {\n  if (args.collidedPosition && args.collidedPosition !== this.position) {\n    args.element.style.display = 'none';\n  }\n}\n/**\n * updateTooltip method \\\n *\n * @returns { Tooltip } updateTooltip method .\\\n * @param {Diagram} diagram - provide the points value.\n * @param {NodeModel | ConnectorModel} node - provide the points value.\n *\n * @private\n */\n\n\nexport function updateTooltip(diagram, node) {\n  //let tooltip: DiagramTooltipModel;\n  var tooltipObject = diagram.tooltipObject;\n  var tooltip = node ? node.tooltip : diagram.tooltip;\n  updateTooltipContent(tooltip, tooltipObject);\n  return tooltipObject;\n}\n/**\n * updateTooltipContent method \\\n *\n * @returns { Tooltip | BlazorTooltip } updateTooltipContent method .\\\n * @param {DiagramTooltipModel} tooltip - provide the points value.\n * @param {Tooltip | BlazorTooltip} tooltipObject - provide the points value.\n *\n * @private\n */\n\nfunction updateTooltipContent(tooltip, tooltipObject) {\n  if (tooltip.content) {\n    tooltipObject.content = tooltip.content;\n    tooltipObject.position = tooltip.position;\n    tooltipObject.showTipPointer = tooltip.showTipPointer;\n    tooltipObject.width = tooltip.width;\n    tooltipObject.height = tooltip.height;\n\n    if (!tooltip.animation) {\n      tooltipObject.animation = {\n        close: {\n          effect: 'None'\n        }\n      };\n    } else {\n      tooltipObject.animation = tooltip.animation;\n    }\n  } else {\n    tooltipObject.close();\n  }\n\n  return tooltipObject;\n}","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/tooltip.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Property","ChildProperty","isBlazor","Tooltip","BlazorTooltip","DiagramTooltip","_super","apply","initTooltip","diagram","tooltip","tooltipOption","updateTooltipContent","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","content","undefined","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","width","height","animation","effect"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,QAAT,EAAmBC,aAAnB,EAAkCC,QAAlC,QAAkD,sBAAlD;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAClDlC,EAAAA,SAAS,CAACiC,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,GAA0B;AACtB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBf,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,SAFnB,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,SAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,OAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,cAFnB,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,gBAFnB,EAEqC,KAAK,CAF1C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,OAFnB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,QAFnB,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,QAFnB,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPc,QAAQ,EADD,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;AAGA,SAAOqB,cAAP;AACH,CA9BmC,CA8BlCJ,aA9BkC,CAApC;;AA+BA,SAASI,cAAT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,WAAT,CAAqBC,OAArB,EAA8B;AACjC,MAAIC,OAAJ;;AACA,MAAI,CAACR,QAAQ,EAAb,EAAiB;AACb,QAAIS,aAAa,GAAG,IAAIR,OAAJ,EAApB;AACAQ,IAAAA,aAAa,GAAGC,oBAAoB,CAACH,OAAO,CAACC,OAAT,EAAkBC,aAAlB,CAApC;AACAD,IAAAA,OAAO,GAAG,IAAIP,OAAJ,CAAYQ,aAAZ,CAAV;AACAD,IAAAA,OAAO,CAACG,eAAR,GAA0BA,eAA1B;AACAH,IAAAA,OAAO,CAACI,UAAR,GAAqBA,UAArB;AACAJ,IAAAA,OAAO,CAACK,QAAR,GAAmB,mBAAnB;AACAL,IAAAA,OAAO,CAACM,OAAR,GAAkB,QAAlB;AACAN,IAAAA,OAAO,CAACO,QAAR,CAAiB,MAAMR,OAAO,CAACS,OAAR,CAAgBC,EAAvC;AACAT,IAAAA,OAAO,CAACU,KAAR;AACH,GAVD,MAWK;AACDV,IAAAA,OAAO,GAAG,IAAIN,aAAJ,CAAkBK,OAAlB,CAAV;AACAC,IAAAA,OAAO,GAAGE,oBAAoB,CAACH,OAAO,CAACC,OAAT,EAAkBA,OAAlB,CAA9B;AACH;;AACD,SAAOA,OAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASI,UAAT,CAAoBO,IAApB,EAA0B;AACtB,MAAK,KAAKC,OAAL,KAAiB,EAAjB,IAAuB,KAAKA,OAAL,KAAiBC,SAA7C,EAAyD;AACrDF,IAAAA,IAAI,CAACH,OAAL,CAAaM,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASZ,eAAT,CAAyBQ,IAAzB,EAA+B;AAC3B,MAAKA,IAAI,CAACK,gBAAL,IAAyBL,IAAI,CAACK,gBAAL,KAA0B,KAAKC,QAA7D,EAAwE;AACpEN,IAAAA,IAAI,CAACH,OAAL,CAAaM,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASG,aAAT,CAAuBnB,OAAvB,EAAgCoB,IAAhC,EAAsC;AACzC;AACA,MAAIC,aAAa,GAAGrB,OAAO,CAACqB,aAA5B;AACA,MAAIpB,OAAO,GAAGmB,IAAI,GAAGA,IAAI,CAACnB,OAAR,GAAkBD,OAAO,CAACC,OAA5C;AACAE,EAAAA,oBAAoB,CAACF,OAAD,EAAUoB,aAAV,CAApB;AACA,SAAOA,aAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASlB,oBAAT,CAA8BF,OAA9B,EAAuCoB,aAAvC,EAAsD;AAClD,MAAIpB,OAAO,CAACY,OAAZ,EAAqB;AACjBQ,IAAAA,aAAa,CAACR,OAAd,GAAwBZ,OAAO,CAACY,OAAhC;AACAQ,IAAAA,aAAa,CAACH,QAAd,GAAyBjB,OAAO,CAACiB,QAAjC;AACAG,IAAAA,aAAa,CAACC,cAAd,GAA+BrB,OAAO,CAACqB,cAAvC;AACAD,IAAAA,aAAa,CAACE,KAAd,GAAsBtB,OAAO,CAACsB,KAA9B;AACAF,IAAAA,aAAa,CAACG,MAAd,GAAuBvB,OAAO,CAACuB,MAA/B;;AACA,QAAI,CAACvB,OAAO,CAACwB,SAAb,EAAwB;AACpBJ,MAAAA,aAAa,CAACI,SAAd,GAA0B;AAAEd,QAAAA,KAAK,EAAE;AAAEe,UAAAA,MAAM,EAAE;AAAV;AAAT,OAA1B;AACH,KAFD,MAGK;AACDL,MAAAA,aAAa,CAACI,SAAd,GAA0BxB,OAAO,CAACwB,SAAlC;AACH;AACJ,GAZD,MAaK;AACDJ,IAAAA,aAAa,CAACV,KAAd;AACH;;AACD,SAAOU,aAAP;AACH","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, isBlazor } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\nimport { BlazorTooltip } from '../blazor-tooltip/blazor-Tooltip';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * initTooltip method \\\n *\n * @returns { Tooltip | BlazorTooltip } initTooltip method .\\\n * @param {Diagram} diagram - provide the points value.\n *\n * @private\n */\nexport function initTooltip(diagram) {\n    var tooltip;\n    if (!isBlazor()) {\n        var tooltipOption = new Tooltip;\n        tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n        tooltip = new Tooltip(tooltipOption);\n        tooltip.beforeCollision = beforeCollision;\n        tooltip.beforeOpen = beforeOpen;\n        tooltip.cssClass = 'e-diagram-tooltip';\n        tooltip.opensOn = 'custom';\n        tooltip.appendTo('#' + diagram.element.id);\n        tooltip.close();\n    }\n    else {\n        tooltip = new BlazorTooltip(diagram);\n        tooltip = updateTooltipContent(diagram.tooltip, tooltip);\n    }\n    return tooltip;\n}\n/**\n * beforeOpen method \\\n *\n * @returns { void } beforeOpen method .\\\n * @param {TooltipEventArgs} args - provide the points value.\n *\n * @private\n */\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * beforeCollision method \\\n *\n * @returns { void } beforeCollision method .\\\n * @param {TooltipEventArgs} args - provide the points value.\n *\n * @private\n */\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * updateTooltip method \\\n *\n * @returns { Tooltip } updateTooltip method .\\\n * @param {Diagram} diagram - provide the points value.\n * @param {NodeModel | ConnectorModel} node - provide the points value.\n *\n * @private\n */\nexport function updateTooltip(diagram, node) {\n    //let tooltip: DiagramTooltipModel;\n    var tooltipObject = diagram.tooltipObject;\n    var tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\n/**\n * updateTooltipContent method \\\n *\n * @returns { Tooltip | BlazorTooltip } updateTooltipContent method .\\\n * @param {DiagramTooltipModel} tooltip - provide the points value.\n * @param {Tooltip | BlazorTooltip} tooltipObject - provide the points value.\n *\n * @private\n */\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n"]},"metadata":{},"sourceType":"module"}