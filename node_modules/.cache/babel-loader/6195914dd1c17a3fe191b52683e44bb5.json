{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\n\nvar DiagramHtmlElement =\n/** @class */\nfunction (_super) {\n  __extends(DiagramHtmlElement, _super);\n  /**\n   * set the id for each element \\\n   *\n   * @returns { void }set the id for each element\\\n   * @param {string} nodeId - provide the x value.\n   * @param {string} diagramId - provide the y value.\n   * @param {string} annotationId - provide the id value.\n   * @param {string} nodeTemplate - provide the id value.\n   *\n   * @private\n   */\n\n\n  function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n    var _this = _super.call(this) || this;\n\n    _this.data = '';\n    /**\n     * Gets the node id for the element\n     */\n\n    _this.nodeId = '';\n    /**\n     * defines the id of the annotation on rendering template on label.\n     * @private\n     */\n\n    _this.annotationId = '';\n    /**\n     * Gets the diagram id for the html element\n     */\n\n    _this.diagramId = '';\n    _this.diagramId = diagramId;\n    _this.nodeId = nodeId;\n    _this.annotationId = annotationId;\n    _this.templateFn = templateCompiler(nodeTemplate);\n    return _this;\n  }\n  /**\n   * getNodeTemplate method \\\n   *\n   * @returns { Function } getNodeTemplate method .\\\n   *\n   * @private\n   */\n\n\n  DiagramHtmlElement.prototype.getNodeTemplate = function () {\n    return this.templateFn;\n  };\n\n  Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n    /**\n     * Gets or sets the geometry of the html element \\\n     *\n     * @returns { string | HTMLElement } Gets or sets the geometry of the html element \\\n     *\n     * @private\n     */\n    get: function () {\n      return this.data;\n    },\n\n    /**\n     * Gets or sets the value of the html element \\\n     *\n     * @returns { void }Gets or sets the value of the html element\\\n     * @param {string | HTMLElement} value - provide the value value.\n     *\n     * @private\n     */\n    set: function (value) {\n      this.data = value;\n\n      if (!this.canReset) {\n        this.canReset = true;\n\n        if (!this.isTemplate) {\n          this.template = getContent(this, true);\n        }\n\n        this.canReset = false;\n        this.isDirt = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DiagramHtmlElement;\n}(DiagramElement);\n\nexport { DiagramHtmlElement };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/html-element.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","DiagramElement","getContent","templateCompiler","DiagramHtmlElement","_super","nodeId","diagramId","annotationId","nodeTemplate","_this","call","data","templateFn","getNodeTemplate","defineProperty","get","set","value","canReset","isTemplate","template","isDirt","enumerable","configurable"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element \\\n     *\n     * @returns { void }set the id for each element\\\n     * @param {string} nodeId - provide the x value.\n     * @param {string} diagramId - provide the y value.\n     * @param {string} annotationId - provide the id value.\n     * @param {string} nodeTemplate - provide the id value.\n     *\n     * @private\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /**\n     * getNodeTemplate method \\\n     *\n     * @returns { Function } getNodeTemplate method .\\\n     *\n     * @private\n     */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element \\\n         *\n         * @returns { string | HTMLElement } Gets or sets the geometry of the html element \\\n         *\n         * @private\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element \\\n         *\n         * @returns { void }Gets or sets the value of the html element\\\n         * @param {string | HTMLElement} value - provide the value value.\n         *\n         * @private\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.canReset) {\n                this.canReset = true;\n                if (!this.isTemplate) {\n                    this.template = getContent(this, true);\n                }\n                this.canReset = false;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n"]},"metadata":{},"sourceType":"module"}