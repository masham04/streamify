{"ast":null,"code":"import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode, applyStyleAgainstCsp } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n\n/**\n * Used to generate the random id \\\n *\n * @returns { boolean }    Used to generate the random id .\\\n *\n * @private\n */\n\nexport function randomId() {\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n  var id = '';\n  var num;\n\n  for (var i = 0; i < 5; i++) {\n    if ('crypto' in window && 'getRandomValues' in crypto) {\n      var count = new Uint16Array(1); // tslint:disable-next-line:no-any\n\n      var intCrypto = window.msCrypto || window.crypto;\n      num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n    } else {\n      num = Math.floor(Math.random() * chars.length);\n    }\n\n    if (i === 0 && num < 10) {\n      i--;\n      continue;\n    }\n\n    id += chars.substring(num, num + 1);\n  }\n\n  return id;\n}\n/**\n * Used to get the index value \\\n *\n * @returns { boolean }    Used to get the index value .\\\n * @param {Diagram} comp - provide the Diagram value.\n * @param {string} id - provide the id value.\n *\n * @private\n */\n\nexport function getIndex(comp, id) {\n  if (comp.nodes && comp.nodes.length > 0) {\n    for (var i = 0; i < comp.nodes.length; i++) {\n      if (comp.nodes[i].id === id) {\n        return i;\n      }\n    }\n  }\n\n  if (comp.connectors && comp.connectors.length > 0) {\n    for (var i = 0; i < comp.connectors.length; i++) {\n      if (comp.connectors[i].id === id) {\n        return i;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * templateCompiler method\\\n *\n * @returns { Function }    templateCompiler method .\\\n * @param {string} template - provide the template value.\n *\n * @private\n */\n\nexport function templateCompiler(template) {\n  if (template) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    var e = void 0;\n\n    try {\n      if (document.querySelectorAll(template).length) {\n        return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n      }\n    } catch (e) {\n      return baseTemplateComplier(template);\n    }\n  }\n\n  return undefined;\n}\n/**\n * cornersPointsBeforeRotation method\\\n *\n * @returns { Rect }    templateCompiler method .\\\n * @param {DiagramElement} ele - provide the template value.\n *\n * @private\n */\n\nexport function cornersPointsBeforeRotation(ele) {\n  var bounds = new Rect();\n  var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n  var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n  var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n  var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n  var topLeft = {\n    x: left,\n    y: top\n  }; //const topCenter: PointModel = { x: (left + right) / 2, y: top };\n\n  var topRight = {\n    x: right,\n    y: top\n  }; //const middleLeft: PointModel = { x: left, y: (top + bottom) / 2 };\n  //const middleRight: PointModel = { x: right, y: (top + bottom) / 2 };\n\n  var bottomLeft = {\n    x: left,\n    y: bottom\n  }; //const bottomCenter: PointModel = { x: (left + right) / 2, y: bottom };\n\n  var bottomRight = {\n    x: right,\n    y: bottom\n  };\n  bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n  return bounds;\n}\n/**\n * getBounds method\\\n *\n * @returns { Rect }    getBounds method .\\\n * @param {DiagramElement} element - provide the template value.\n *\n * @private\n */\n\nexport function getBounds(element) {\n  var bounds = new Rect(); //let corners: Rect;\n\n  var corners = cornersPointsBeforeRotation(element);\n  var middleLeft = corners.middleLeft;\n  var topCenter = corners.topCenter;\n  var bottomCenter = corners.bottomCenter;\n  var middleRight = corners.middleRight;\n  var topLeft = corners.topLeft;\n  var topRight = corners.topRight;\n  var bottomLeft = corners.bottomLeft;\n  var bottomRight = corners.bottomRight;\n  element.corners = {\n    topLeft: topLeft,\n    topCenter: topCenter,\n    topRight: topRight,\n    middleLeft: middleLeft,\n    middleRight: middleRight,\n    bottomLeft: bottomLeft,\n    bottomCenter: bottomCenter,\n    bottomRight: bottomRight\n  };\n\n  if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n    element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n    element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n    element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n    element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n    element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n    element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n    element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n    element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight); //Set corners based on rotate angle\n  }\n\n  bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n  element.corners.left = bounds.left;\n  element.corners.right = bounds.right;\n  element.corners.top = bounds.top;\n  element.corners.bottom = bounds.bottom;\n  element.corners.center = bounds.center;\n  element.corners.width = bounds.width;\n  element.corners.height = bounds.height;\n  return bounds;\n}\n/**\n * updateCloneProp method\\\n *\n * @returns { Rect }    updateCloneProp method .\\\n * @param {DiagramElement} properties - provide the template value.\n * @param {DiagramElement} obj - provide the template value.\n *\n * @private\n */\n\nfunction updateCloneProp(properties, obj) {\n  var prop = [];\n\n  if (obj instanceof Node) {\n    prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment', 'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight', 'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n  } else if (obj instanceof Connector) {\n    prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'type', 'targetDecorator', 'sourceDecorator', 'sourceID', 'shape', 'bridgeSpace', 'annotations', 'segments', 'hitPadding', 'tooltip', 'previewSize', 'dragSize', 'style', 'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n  } else if (obj instanceof Decorator) {\n    prop = ['height', 'width', 'shape', 'style', 'pivot', 'pathData'];\n  } else if (obj instanceof Shape || obj instanceof IconShape) {\n    prop.push('shape');\n\n    if (obj instanceof BasicShape) {\n      prop.push('cornerRadius');\n    } else if (obj instanceof Text) {\n      prop.push('margin');\n    } else if (obj instanceof Image) {\n      prop.push('align');\n      prop.push('scale');\n    } else if (obj instanceof Native) {\n      prop.push('scale');\n    } else if (obj instanceof BpmnShape) {\n      prop.push('activity');\n      prop.push('annotations');\n    } else if (obj instanceof IconShape) {\n      prop.push('borderColor');\n      prop.push('borderWidth');\n      prop.push('cornerRadius');\n      prop.push('fill');\n    }\n  } else if (obj instanceof BpmnActivity) {\n    prop.push('subProcess');\n  } else if (obj instanceof BpmnTask) {\n    prop.push('call');\n    prop.push('compensation');\n    prop.push('loop');\n  } else if (obj instanceof BpmnSubProcess) {\n    prop.push('adhoc');\n    prop.push('boundary');\n    prop.push('compensation');\n    prop.push('loop');\n    prop.push('processes');\n  } else if (obj instanceof Port) {\n    prop.push('height');\n    prop.push('width');\n    prop.push('visibility');\n    prop.push('horizontalAlignment');\n    prop.push('verticalAlignment');\n    prop.push('shape');\n  } else if (obj instanceof Annotation) {\n    prop.push('constraints');\n    prop.push('height');\n    prop.push('horizontalAlignment');\n    prop.push('rotateAngle');\n    prop.push('template');\n    prop.push('verticalAlignment');\n    prop.push('visibility');\n    prop.push('width');\n    prop.push('margin');\n  } else if (obj instanceof Margin) {\n    prop.push('left');\n    prop.push('right');\n    prop.push('top');\n    prop.push('bottom');\n  } else if (obj instanceof TextStyle) {\n    prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow', 'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n  }\n\n  if (obj instanceof ShapeStyle) {\n    prop.push('strokeColor');\n    prop.push('color');\n  }\n\n  properties = properties.concat(prop);\n  return properties;\n}\n/**\n * cloneObject method\\\n *\n * @returns { Rect }    cloneObject method .\\\n * @param {DiagramElement} obj - provide the obj value.\n * @param {DiagramElement} additionalProp - provide the additionalProp value.\n * @param {DiagramElement} key - provide the key value.\n * @param {DiagramElement} cloneBlazorProp - provide the cloneBlazorProp value.\n *\n * @private\n */\n\n\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n  var newObject = {};\n  var keys = 'properties';\n  var prop = 'propName';\n\n  if (obj) {\n    key = obj[prop];\n    var sourceObject = obj[keys] || obj;\n    var properties = [];\n    properties = properties.concat(Object.keys(sourceObject));\n    var customProperties = [];\n    properties.push('version');\n\n    if (key) {\n      var propAdditional = getFunction(additionalProp);\n\n      if (propAdditional) {\n        customProperties = propAdditional(key);\n      } else {\n        customProperties = [];\n      }\n\n      properties = properties.concat(customProperties);\n    }\n\n    var internalProp = getInternalProperties(key);\n    properties = properties.concat(internalProp);\n\n    if (cloneBlazorProp) {\n      properties = updateCloneProp(properties, obj);\n    }\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var property = properties_1[_i];\n\n      if (property !== 'historyManager') {\n        if (property !== 'wrapper') {\n          //const constructorId: string = 'constructor';\n          //const name: string = 'name';\n          // eslint-disable-next-line no-prototype-builtins\n          var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n\n          if (!isEventEmmitter) {\n            if (obj[property] instanceof Array) {\n              newObject[property] = cloneArray(internalProp.indexOf(property) === -1 && obj[keys] ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n            } else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n              newObject[property] = obj[property].cloneNode(true).innerHtml;\n            } else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n              newObject[property] = cloneObject(internalProp.indexOf(property) === -1 && obj[keys] ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n            } else {\n              newObject[property] = obj[property];\n            }\n          }\n        } else {\n          if (obj[property]) {\n            newObject[property] = {\n              actualSize: {\n                width: obj[property].actualSize.width,\n                height: obj[property].actualSize.height\n              },\n              offsetX: obj[property].offsetX,\n              offsetY: obj[property].offsetY\n            };\n          }\n        }\n      }\n    }\n  }\n\n  return newObject;\n}\n/**\n * getInternalProperties method\\\n *\n * @returns { string[] }    getInternalProperties method .\\\n * @param {string} propName - provide the propName value.\n *\n * @private\n */\n\nexport function getInternalProperties(propName) {\n  switch (propName) {\n    case 'nodes':\n    case 'children':\n      return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n\n    case 'connectors':\n      return ['parentId'];\n\n    case 'annotation':\n      return ['nodeId'];\n\n    case 'annotations':\n      return ['nodeId'];\n\n    case 'shape':\n      return ['hasHeader'];\n\n    case 'layers':\n      return ['objectZIndex'];\n  }\n\n  return [];\n}\n/**\n * cloneArray method\\\n *\n * @returns {  Object[] }    getInternalProperties method .\\\n * @param {string} sourceArray - provide the sourceArray value.\n * @param {string} additionalProp - provide the additionalProp value.\n * @param {string} key - provide the key value.\n * @param {string} cloneBlazorProp - provide the cloneBlazorProp value.\n *\n * @private\n */\n\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n  var clonedArray;\n\n  if (sourceArray) {\n    clonedArray = [];\n\n    for (var i = 0; i < sourceArray.length; i++) {\n      if (sourceArray[i] instanceof Array) {\n        clonedArray.push(sourceArray[i]);\n      } else if (sourceArray[i] instanceof Object) {\n        clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n      } else {\n        clonedArray.push(sourceArray[i]);\n      }\n    }\n  }\n\n  return clonedArray;\n}\n/**\n * extendObject method\\\n *\n * @returns {  Object}    getInternalProperties method .\\\n * @param {string} options - provide the options value.\n * @param {string} childObject - provide the childObject value.\n *\n * @private\n */\n\nexport function extendObject(options, childObject) {\n  var properties = 'properties';\n\n  if (options) {\n    if (!childObject) {\n      childObject = {\n        properties: {}\n      };\n    } //const target: Object = childObject;\n\n\n    for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n      var property = _a[_i];\n\n      if (options[property] instanceof Array) {\n        var extendeArray = extendArray(options[property], childObject[properties][property]);\n\n        if (!childObject[properties][property] || !childObject[properties][property].length) {\n          childObject[property] = extendeArray;\n        }\n      } else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n        childObject[property] = options[property].cloneNode(true).innerHtml;\n      } else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n        var extendedObject = extendObject(options[property], childObject[properties][property]);\n\n        if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n          delete extendedObject[properties];\n        }\n\n        childObject[property] = extendedObject;\n      } else {\n        childObject[property] = childObject[properties][property] !== undefined ? childObject[property] : options[property];\n      }\n    }\n  }\n\n  return childObject;\n}\n/**\n * extendObject method\\\n *\n * @returns {  Object}    getInternalProperties method .\\\n * @param {string} sourceArray - provide the sourceArray value.\n * @param {string} childArray - provide the childArray value.\n *\n * @private\n */\n\nexport function extendArray(sourceArray, childArray) {\n  var clonedArray = [];\n  var reset = false;\n\n  if (!childArray) {\n    childArray = [];\n  }\n\n  if (!childArray.length) {\n    reset = true;\n  }\n\n  for (var i = 0; i < sourceArray.length; i++) {\n    if (sourceArray[i] instanceof Array) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var extendedArray = extendArray(sourceArray[i], childArray[i]);\n\n      if (reset) {\n        clonedArray.push(extendArray);\n      }\n    } else if (sourceArray[i] instanceof Object) {\n      var extendedObject = extendObject(sourceArray[i], childArray[i]);\n\n      if (reset) {\n        clonedArray.push(extendedObject);\n      }\n    } else {\n      clonedArray.push(sourceArray[i]);\n    }\n  }\n\n  return clonedArray;\n}\n/**\n * textAlignToString method\\\n *\n * @returns {  Object}    textAlignToString method .\\\n * @param {string} value - provide the sourceArray value.\n *\n * @private\n */\n\nexport function textAlignToString(value) {\n  var state = '';\n\n  switch (value) {\n    case 'Center':\n      state = 'center';\n      break;\n\n    case 'Left':\n      state = 'left';\n      break;\n\n    case 'Right':\n      state = 'right';\n      break;\n  }\n\n  return state;\n}\n/**\n * wordBreakToString method\\\n *\n * @returns {  string }    wordBreakToString method .\\\n * @param {TextWrap | TextDecoration} value - provide the value value.\n *\n * @private\n */\n\nexport function wordBreakToString(value) {\n  var state = '';\n\n  switch (value) {\n    case 'Wrap':\n      state = 'breakall';\n      break;\n\n    case 'NoWrap':\n      state = 'keepall';\n      break;\n\n    case 'WrapWithOverflow':\n      state = 'normal';\n      break;\n\n    case 'LineThrough':\n      state = 'line-through';\n      break;\n  }\n\n  return state;\n}\n/**\n * bBoxText method\\\n *\n * @returns { number }    bBoxText method .\\\n * @param {string} textContent - provide the textContent value.\n * @param {string} options - provide the options value.\n *\n * @private\n */\n\nexport function bBoxText(textContent, options) {\n  var measureWindowElement = 'measureElement';\n  window[measureWindowElement].style.visibility = 'visible';\n  var svg = window[measureWindowElement].children[2];\n  var text = getChildNode(svg)[1];\n  text.textContent = textContent;\n  applyStyleAgainstCsp(text, 'font-size:' + options.fontSize + 'px; font-family:' + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n  var bBox = text.getBBox().width;\n  window[measureWindowElement].style.visibility = 'hidden';\n  return bBox;\n}\n/**\n * middleElement method\\\n *\n * @returns {  number}    middleElement method .\\\n * @param {number} i - provide the textContent value.\n * @param {number} j - provide the options value.\n *\n * @private\n */\n\nexport function middleElement(i, j) {\n  var m = 0;\n  m = (i + j) / 2;\n  return m;\n}\n/**\n * overFlow method\\\n *\n * @returns {  number}    overFlow method .\\\n * @param {number} text - provide the text value.\n * @param {number} options - provide the options value.\n *\n * @private\n */\n\nexport function overFlow(text, options) {\n  var i = 0;\n  var j = 0;\n  var middle = 0;\n  var bounds = 0;\n  var temp = '';\n  j = text.length;\n  var t = 0;\n\n  do {\n    if (bounds > 0) {\n      i = middle;\n    }\n\n    middle = Math.floor(middleElement(i, j));\n    temp += text.substr(i, middle);\n    bounds = bBoxText(temp, options);\n  } while (bounds <= options.width);\n\n  temp = temp.substr(0, i);\n\n  for (t = i; t < j; t++) {\n    temp += text[t];\n    bounds = bBoxText(temp, options);\n\n    if (bounds >= options.width) {\n      text = text.substr(0, temp.length - 1);\n      break;\n    }\n  }\n\n  if (options.textOverflow === 'Ellipsis') {\n    text = text.substr(0, text.length - 3);\n    text += '...';\n  } else {\n    text = text.substr(0, text.length);\n  }\n\n  return text;\n}\n/**\n * whiteSpaceToString method\\\n *\n * @returns {  number}    whiteSpaceToString method .\\\n * @param {number} value - provide the value value.\n * @param {number} wrap - provide the wrap value.\n *\n * @private\n */\n\nexport function whiteSpaceToString(value, wrap) {\n  if (wrap === 'NoWrap' && value === 'PreserveAll') {\n    return 'pre';\n  }\n\n  var state = '';\n\n  switch (value) {\n    case 'CollapseAll':\n      state = 'nowrap';\n      break;\n\n    case 'CollapseSpace':\n      state = 'pre-line';\n      break;\n\n    case 'PreserveAll':\n      state = 'pre-wrap';\n      break;\n  }\n\n  return state;\n}\n/**\n * rotateSize method\\\n *\n * @returns {  number}    rotateSize method .\\\n * @param {number} size - provide the size value.\n * @param {number} angle - provide the angle value.\n *\n * @private\n */\n\nexport function rotateSize(size, angle) {\n  var matrix = identityMatrix();\n  rotateMatrix(matrix, angle, 0, 0);\n  var topLeft = transformPointByMatrix(matrix, {\n    x: 0,\n    y: 0\n  });\n  var topRight = transformPointByMatrix(matrix, {\n    x: size.width,\n    y: 0\n  });\n  var bottomLeft = transformPointByMatrix(matrix, {\n    x: 0,\n    y: size.height\n  });\n  var bottomRight = transformPointByMatrix(matrix, {\n    x: size.width,\n    y: size.height\n  });\n  var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n  var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n  var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n  var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n  return new Size(maxX - minX, maxY - minY);\n}\n/**\n * rotatePoint method\\\n *\n * @returns {  number}    rotateSize method .\\\n * @param {number} angle - provide the angle value.\n * @param {number} pivotX - provide the pivotX value.\n * @param {number} pivotY - provide the pivotY value.\n * @param {PointModel} point - provide the point value.\n * @private\n */\n\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n  if (angle !== 0) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, pivotX, pivotY);\n    return transformPointByMatrix(matrix, point);\n  }\n\n  return point;\n}\n/**\n * getOffset method\\\n *\n * @returns {  number}    getOffset method .\\\n * @param {PointModel} topLeft - provide the angle value.\n * @param {DiagramElement} obj - provide the pivotX value.\n * @private\n */\n\nexport function getOffset(topLeft, obj) {\n  var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n  var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n  return {\n    x: offX,\n    y: offY\n  };\n}\n/**\n * getFunction method\\\n *\n * @returns {  Function }    getFunction method .\\\n * @param {PointModel} value - provide the angle value.\n * @private\n */\n\nexport function getFunction(value) {\n  if (value !== undefined) {\n    if (typeof value === 'string') {\n      value = getValue(value, window);\n    }\n  }\n\n  return value;\n}","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/base-util.js"],"names":["compile","baseTemplateComplier","Rect","Size","identityMatrix","transformPointByMatrix","rotateMatrix","getValue","getChildNode","applyStyleAgainstCsp","Node","BasicShape","Shape","Native","BpmnShape","BpmnActivity","BpmnTask","BpmnSubProcess","IconShape","TextStyle","ShapeStyle","Margin","Port","Annotation","Connector","Decorator","randomId","chars","id","num","i","window","crypto","count","Uint16Array","intCrypto","msCrypto","getRandomValues","length","Math","floor","random","substring","getIndex","comp","nodes","connectors","templateCompiler","template","e","document","querySelectorAll","querySelector","innerHTML","trim","undefined","cornersPointsBeforeRotation","ele","bounds","top","offsetY","actualSize","height","pivot","y","bottom","left","offsetX","width","x","right","topLeft","topRight","bottomLeft","bottomRight","toBounds","getBounds","element","corners","middleLeft","topCenter","bottomCenter","middleRight","rotateAngle","parentTransform","matrix","center","updateCloneProp","properties","obj","prop","push","Text","Image","concat","cloneObject","additionalProp","key","cloneBlazorProp","newObject","keys","sourceObject","Object","customProperties","propAdditional","getFunction","internalProp","getInternalProperties","_i","properties_1","property","isEventEmmitter","hasOwnProperty","Array","cloneArray","indexOf","HTMLElement","cloneNode","innerHtml","propName","sourceArray","clonedArray","extendObject","options","childObject","_a","extendeArray","extendArray","extendedObject","childArray","reset","extendedArray","textAlignToString","value","state","wordBreakToString","bBoxText","textContent","measureWindowElement","style","visibility","svg","children","text","fontSize","fontFamily","bold","bBox","getBBox","middleElement","j","m","overFlow","middle","temp","t","substr","textOverflow","whiteSpaceToString","wrap","rotateSize","size","angle","minX","min","minY","maxX","max","maxY","rotatePoint","pivotX","pivotY","point","getOffset","offX","desiredSize","offY"],"mappings":"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","sourcesContent":["import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode, applyStyleAgainstCsp } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/**\n * Used to generate the random id \\\n *\n * @returns { boolean }    Used to generate the random id .\\\n *\n * @private\n */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/**\n * Used to get the index value \\\n *\n * @returns { boolean }    Used to get the index value .\\\n * @param {Diagram} comp - provide the Diagram value.\n * @param {string} id - provide the id value.\n *\n * @private\n */\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/**\n * templateCompiler method\\\n *\n * @returns { Function }    templateCompiler method .\\\n * @param {string} template - provide the template value.\n *\n * @private\n */\nexport function templateCompiler(template) {\n    if (template) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/**\n * cornersPointsBeforeRotation method\\\n *\n * @returns { Rect }    templateCompiler method .\\\n * @param {DiagramElement} ele - provide the template value.\n *\n * @private\n */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    //const topCenter: PointModel = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    //const middleLeft: PointModel = { x: left, y: (top + bottom) / 2 };\n    //const middleRight: PointModel = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    //const bottomCenter: PointModel = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/**\n * getBounds method\\\n *\n * @returns { Rect }    getBounds method .\\\n * @param {DiagramElement} element - provide the template value.\n *\n * @private\n */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    //let corners: Rect;\n    var corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/**\n * updateCloneProp method\\\n *\n * @returns { Rect }    updateCloneProp method .\\\n * @param {DiagramElement} properties - provide the template value.\n * @param {DiagramElement} obj - provide the template value.\n *\n * @private\n */\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'type', 'targetDecorator', 'sourceDecorator',\n            'sourceID', 'shape', 'bridgeSpace', 'annotations', 'segments', 'hitPadding', 'tooltip', 'previewSize', 'dragSize', 'style',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width', 'shape', 'style', 'pivot', 'pathData'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/**\n * cloneObject method\\\n *\n * @returns { Rect }    cloneObject method .\\\n * @param {DiagramElement} obj - provide the obj value.\n * @param {DiagramElement} additionalProp - provide the additionalProp value.\n * @param {DiagramElement} key - provide the key value.\n * @param {DiagramElement} cloneBlazorProp - provide the cloneBlazorProp value.\n *\n * @private\n */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    //const constructorId: string = 'constructor';\n                    //const name: string = 'name';\n                    // eslint-disable-next-line no-prototype-builtins\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/**\n * getInternalProperties method\\\n *\n * @returns { string[] }    getInternalProperties method .\\\n * @param {string} propName - provide the propName value.\n *\n * @private\n */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n        case 'layers':\n            return ['objectZIndex'];\n    }\n    return [];\n}\n/**\n * cloneArray method\\\n *\n * @returns {  Object[] }    getInternalProperties method .\\\n * @param {string} sourceArray - provide the sourceArray value.\n * @param {string} additionalProp - provide the additionalProp value.\n * @param {string} key - provide the key value.\n * @param {string} cloneBlazorProp - provide the cloneBlazorProp value.\n *\n * @private\n */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/**\n * extendObject method\\\n *\n * @returns {  Object}    getInternalProperties method .\\\n * @param {string} options - provide the options value.\n * @param {string} childObject - provide the childObject value.\n *\n * @private\n */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        //const target: Object = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/**\n * extendObject method\\\n *\n * @returns {  Object}    getInternalProperties method .\\\n * @param {string} sourceArray - provide the sourceArray value.\n * @param {string} childArray - provide the childArray value.\n *\n * @private\n */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/**\n * textAlignToString method\\\n *\n * @returns {  Object}    textAlignToString method .\\\n * @param {string} value - provide the sourceArray value.\n *\n * @private\n */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/**\n * wordBreakToString method\\\n *\n * @returns {  string }    wordBreakToString method .\\\n * @param {TextWrap | TextDecoration} value - provide the value value.\n *\n * @private\n */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\n/**\n * bBoxText method\\\n *\n * @returns { number }    bBoxText method .\\\n * @param {string} textContent - provide the textContent value.\n * @param {string} options - provide the options value.\n *\n * @private\n */\nexport function bBoxText(textContent, options) {\n    var measureWindowElement = 'measureElement';\n    window[measureWindowElement].style.visibility = 'visible';\n    var svg = window[measureWindowElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    applyStyleAgainstCsp(text, 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureWindowElement].style.visibility = 'hidden';\n    return bBox;\n}\n/**\n * middleElement method\\\n *\n * @returns {  number}    middleElement method .\\\n * @param {number} i - provide the textContent value.\n * @param {number} j - provide the options value.\n *\n * @private\n */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/**\n * overFlow method\\\n *\n * @returns {  number}    overFlow method .\\\n * @param {number} text - provide the text value.\n * @param {number} options - provide the options value.\n *\n * @private\n */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/**\n * whiteSpaceToString method\\\n *\n * @returns {  number}    whiteSpaceToString method .\\\n * @param {number} value - provide the value value.\n * @param {number} wrap - provide the wrap value.\n *\n * @private\n */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/**\n * rotateSize method\\\n *\n * @returns {  number}    rotateSize method .\\\n * @param {number} size - provide the size value.\n * @param {number} angle - provide the angle value.\n *\n * @private\n */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/**\n * rotatePoint method\\\n *\n * @returns {  number}    rotateSize method .\\\n * @param {number} angle - provide the angle value.\n * @param {number} pivotX - provide the pivotX value.\n * @param {number} pivotY - provide the pivotY value.\n * @param {PointModel} point - provide the point value.\n * @private\n */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/**\n * getOffset method\\\n *\n * @returns {  number}    getOffset method .\\\n * @param {PointModel} topLeft - provide the angle value.\n * @param {DiagramElement} obj - provide the pivotX value.\n * @private\n */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * getFunction method\\\n *\n * @returns {  Function }    getFunction method .\\\n * @param {PointModel} value - provide the angle value.\n * @private\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n"]},"metadata":{},"sourceType":"module"}