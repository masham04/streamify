{"ast":null,"code":"/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n\n/** @private */\nvar Quad =\n/** @class */\nfunction () {\n  /**\n   *  Constructor for creating the Quad class\n   *\n   * @param {number} left The symbol palette model.\n   * @param {number} top The symbol palette element.\n   * @param {number} width The symbol palette element.\n   * @param {number} height The symbol palette element.\n   * @param {SpatialSearch} spatialSearching The symbol palette element.\n   * @private\n   */\n  function Quad(left, top, width, height, spatialSearching) {\n    this.objects = [];\n    this.left = left;\n    this.top = top;\n    this.width = width;\n    this.height = height;\n    this.spatialSearch = spatialSearching;\n  }\n  /**\n   * findQuads method\\\n   *\n   * @returns {  void}    findQuads method .\\\n   * @param {Rect} currentViewPort - provide the options value.\n   * @param {Quad[]} quads - provide the options value.\n   * @private\n   */\n\n\n  Quad.prototype.findQuads = function (currentViewPort, quads) {\n    if (this.first != null && this.first.isIntersect(currentViewPort)) {\n      this.first.findQuads(currentViewPort, quads);\n    }\n\n    if (this.second != null && this.second.isIntersect(currentViewPort)) {\n      this.second.findQuads(currentViewPort, quads);\n    }\n\n    if (this.third != null && this.third.isIntersect(currentViewPort)) {\n      this.third.findQuads(currentViewPort, quads);\n    }\n\n    if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n      this.fourth.findQuads(currentViewPort, quads);\n    }\n\n    if (this.objects.length > 0) {\n      quads.push(this);\n    }\n  };\n\n  Quad.prototype.isIntersect = function (t) {\n    if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * selectQuad method\\\n   *\n   * @returns {  Quad }    selectQuad method .\\\n   * @private\n   */\n\n\n  Quad.prototype.selectQuad = function () {\n    var target = null; // eslint-disable-next-line\n\n    var current = this;\n    var quadSet;\n\n    while (current != null) {\n      quadSet = current.getQuad(target);\n      current = quadSet.source;\n      target = quadSet.target || target;\n    }\n\n    return target;\n  };\n\n  Quad.prototype.getQuad = function (target) {\n    target = null;\n    var halfWidth = this.width / 2;\n    var halfHeight = this.height / 2;\n\n    if (halfWidth >= 1000 && halfHeight >= 1000) {\n      var xCenter = this.left + halfWidth;\n      var yCenter = this.top + halfHeight;\n\n      if (this.spatialSearch.childRight <= xCenter) {\n        if (this.spatialSearch.childBottom <= yCenter) {\n          if (!this.first) {\n            var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n            newQuad.parent = this;\n            this.first = newQuad;\n          }\n\n          return {\n            source: this.first\n          };\n        }\n\n        if (this.spatialSearch.childTop >= yCenter) {\n          if (!this.third) {\n            var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n            newQuad.parent = this;\n            this.third = newQuad;\n          }\n\n          return {\n            source: this.third\n          };\n        }\n      } else if (this.spatialSearch.childLeft >= xCenter) {\n        if (this.spatialSearch.childBottom <= yCenter) {\n          if (!this.second) {\n            var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n            newQuad.parent = this;\n            this.second = newQuad;\n          }\n\n          return {\n            source: this.second\n          };\n        }\n\n        if (this.spatialSearch.childTop >= yCenter) {\n          if (!this.fourth) {\n            var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n            newQuad.parent = this;\n            this.fourth = newQuad;\n          }\n\n          return {\n            source: this.fourth\n          };\n        }\n      }\n    }\n\n    target = this;\n    this.objects.push(this.spatialSearch.childNode);\n    return {\n      target: this\n    };\n  };\n  /**\n   * isContained method\\\n   *\n   * @returns {  boolean }    isContained method .\\\n   * @private\n   */\n\n\n  Quad.prototype.isContained = function () {\n    if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width && this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * addIntoAQuad method\\\n   *\n   * @returns {  Quad }    addIntoAQuad method .\\\n   * @param {IGroupable} node - provide the options value.\n   * @private\n   */\n\n\n  Quad.prototype.addIntoAQuad = function (node) {\n    var quadAddition = {};\n    this.spatialSearch.setCurrentNode(node);\n    var quad = null;\n\n    while (!quadAddition.isAdded) {\n      quadAddition = this.spatialSearch.parentQuad.add(quad);\n      quad = quadAddition.quad;\n    }\n\n    return quad;\n  };\n\n  Quad.prototype.add = function (quad) {\n    quad = null;\n\n    if (this.isContained()) {\n      quad = this.selectQuad();\n      return {\n        isAdded: true,\n        quad: quad\n      };\n    } else {\n      var newParent = void 0;\n      var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third && !this.fourth;\n      var newWidth = this.width * 2;\n      var newHeight = this.height * 2;\n\n      if (this.spatialSearch.childLeft < this.left) {\n        if (this.spatialSearch.childTop < this.top) {\n          newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n\n          if (!isempty) {\n            newParent.fourth = this;\n          }\n        } else {\n          newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n\n          if (!isempty) {\n            newParent.second = this;\n          }\n        }\n      } else if (this.spatialSearch.childTop < this.top) {\n        newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n\n        if (!isempty) {\n          newParent.third = this;\n        }\n      } else {\n        newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n\n        if (!isempty) {\n          newParent.first = this;\n        }\n      }\n\n      this.parent = newParent;\n      this.spatialSearch.parentQuad = newParent;\n      return {\n        isAdded: false,\n        quad: quad\n      }; //newParent.AddIntoaQuad(node);\n    }\n  };\n\n  return Quad;\n}();\n\nexport { Quad };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/spatial-search/quad.js"],"names":["Quad","left","top","width","height","spatialSearching","objects","spatialSearch","prototype","findQuads","currentViewPort","quads","first","isIntersect","second","third","fourth","length","push","t","right","bottom","selectQuad","target","current","quadSet","getQuad","source","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","parent","childTop","childLeft","childNode","isContained","addIntoAQuad","node","quadAddition","setCurrentNode","quad","isAdded","parentQuad","add","newParent","isempty","newWidth","newHeight"],"mappings":"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","sourcesContent":["/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /**\n     *  Constructor for creating the Quad class\n     *\n     * @param {number} left The symbol palette model.\n     * @param {number} top The symbol palette element.\n     * @param {number} width The symbol palette element.\n     * @param {number} height The symbol palette element.\n     * @param {SpatialSearch} spatialSearching The symbol palette element.\n     * @private\n     */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /**\n     * findQuads method\\\n     *\n     * @returns {  void}    findQuads method .\\\n     * @param {Rect} currentViewPort - provide the options value.\n     * @param {Quad[]} quads - provide the options value.\n     * @private\n     */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * selectQuad method\\\n     *\n     * @returns {  Quad }    selectQuad method .\\\n     * @private\n     */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        // eslint-disable-next-line\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /**\n     * isContained method\\\n     *\n     * @returns {  boolean }    isContained method .\\\n     * @private\n     */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * addIntoAQuad method\\\n     *\n     * @returns {  Quad }    addIntoAQuad method .\\\n     * @param {IGroupable} node - provide the options value.\n     * @private\n     */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n"]},"metadata":{},"sourceType":"module"}