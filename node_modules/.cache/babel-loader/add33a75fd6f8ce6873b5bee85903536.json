{"ast":null,"code":"/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { LinearGradient } from './core/appearance';\nvar storeFormat;\n/**\n * Print and Export Settings\n */\n\nvar PrintAndExport =\n/** @class */\nfunction () {\n  function PrintAndExport(diagram) {\n    this.diagram = diagram;\n  }\n  /**\n   * To Export the diagram\n   *\n   * @private\n   */\n\n\n  PrintAndExport.prototype.exportDiagram = function (options) {\n    var fileType;\n    var customBounds;\n    var content;\n    var content1 = '';\n    var data = 'data'; //let mode: string;\n\n    var buffers = [];\n    var margin = options.margin || {};\n    var region = options && options.region ? options.region : 'Content';\n    var mode = options && options.mode ? options.mode : 'Download';\n    var bounds = this.getDiagramBounds(region, options);\n\n    if (options.bounds) {\n      customBounds = true;\n      bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n      bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n      bounds.width = options.bounds.width || bounds.width;\n      bounds.height = options.bounds.height || bounds.height;\n    }\n\n    margin = {\n      top: margin.top !== undefined ? margin.top : 25,\n      bottom: margin.bottom !== undefined ? margin.bottom : 25,\n      right: margin.right !== undefined ? margin.right : 25,\n      left: margin.left !== undefined ? margin.left : 25\n    };\n    var nodes = this.diagram.nodes;\n\n    if (region !== 'PageSettings') {\n      bounds.x -= margin.left;\n      bounds.y -= margin.top;\n      bounds.width += margin.left + margin.right;\n      bounds.height += margin.top + margin.bottom;\n    }\n\n    var fileName = options.fileName || 'diagram';\n\n    if (options.format !== 'SVG') {\n      data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n\n      if (data !== null) {\n        return data;\n      }\n    } else {\n      fileType = options.format;\n      options.bounds = bounds;\n      options.margin = margin;\n      var svg = content = this.diagramAsSvg(options, margin);\n\n      if (mode === 'Data') {\n        if (isBlazor() && options.format === 'SVG') {\n          var svgData = new XMLSerializer().serializeToString(svg);\n          return svgData;\n        }\n\n        return content;\n      }\n\n      var buffer = new XMLSerializer().serializeToString(svg);\n      buffers.push(buffer);\n    }\n\n    if (mode === 'Download' && data !== null) {\n      var browserInfo = void 0; // Ensure this for Safari\n      // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n      //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n      //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n      //     return content;\n      // } else {\n\n      for (var b = 0; b < buffers.length; b++) {\n        var blob = new Blob([buffers[b]], {\n          type: 'application/octet-stream'\n        });\n\n        if (Browser.info.name === 'msie') {\n          window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n        } else {\n          var pom = createHtmlElement('a', {\n            'download': fileName + '.' + fileType\n          });\n          var url = URL.createObjectURL(blob);\n          pom.href = url;\n          var e = document.createEvent('MouseEvents');\n          e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n          pom.dispatchEvent(e);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n    var content;\n    options.bounds = bounds;\n    options.region = region;\n    var scaleX = 'scaleX';\n    var scaleY = 'scaleY';\n    var scaleOffsetX = 'scaleOffsetX';\n    var scaleOffsetY = 'scaleOffsetY';\n    this.setScaleValueforCanvas(options, bounds);\n    var canvas = this.diagramAsCanvas({\n      bounds: bounds,\n      margin: margin,\n      region: region,\n      scaleX: options[scaleX],\n      scaleY: options[scaleY],\n      scaleOffsetX: options[scaleOffsetX],\n      scaleOffsetY: options[scaleOffsetY]\n    }, customBounds);\n    var image;\n\n    if (options.format === 'JPG') {\n      image = content = storeFormat = canvas.toDataURL('image/jpeg');\n    } else if (options.format === 'BMP') {\n      image = content = storeFormat = canvas.toDataURL('image/bmp');\n    } else {\n      image = content = storeFormat = canvas.toDataURL();\n    }\n\n    if (mode === 'Data') {\n      return content;\n    }\n\n    this.canvasMultiplePage(options, canvas, margin, image, fileName);\n    return null;\n  };\n\n  PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n    var _this = this;\n\n    var images = [];\n    var imageData = image.substring(image.indexOf(\":\") + 1, image.indexOf(\";\"));\n    var imageFormat = imageData.substring(imageData.indexOf(\"/\") + 1);\n\n    if (imageFormat === 'jpeg') {\n      imageFormat = undefined;\n    } else {\n      imageFormat = imageFormat.toUpperCase();\n    }\n\n    var fileType = imageFormat || 'JPG';\n\n    if (options.multiplePage) {\n      options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n      options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n      options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n      options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n      margin = options.margin || {};\n\n      if (options.pageOrientation) {\n        if (options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth || options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n          var temp = options.pageWidth;\n          options.pageWidth = options.pageHeight;\n          options.pageHeight = temp;\n        }\n      }\n\n      options.margin = {\n        top: !isNaN(margin.top) ? margin.top : 0,\n        bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n        left: !isNaN(margin.left) ? margin.left : 0,\n        right: !isNaN(margin.right) ? margin.right : 0\n      };\n      var attr = {\n        'id': this.diagram.element.id + '_printImage',\n        'src': image\n      };\n      var img_1 = createHtmlElement('img', attr);\n\n      img_1.onload = function () {\n        images = _this.getMultipleImage(img_1, options, true);\n\n        _this.exportImage(images, fileName, fileType, image);\n      };\n    } else {\n      images = [image];\n      this.exportImage(images, fileName, fileType, image);\n    }\n  };\n\n  PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n    var buffers = [];\n    var length = !(images instanceof HTMLElement) ? images.length : 0;\n\n    for (var g = 0; g < length; g++) {\n      image = images[g];\n      image = image.replace(/^data:[a-z]*;,/, '');\n      var image1 = image.split(',');\n      var byteString = atob(image1[1]);\n      var buffer = new ArrayBuffer(byteString.length);\n      var intArray = new Uint8Array(buffer);\n\n      for (var i = 0; i < byteString.length; i++) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n\n      buffers.push(buffer);\n    }\n\n    var _loop_1 = function (j) {\n      var b = new Blob([buffers[j]], {\n        type: 'application/octet-stream'\n      });\n\n      if (Browser.info.name === 'msie') {\n        window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n      } else {\n        var htmlElement_1 = createHtmlElement('a', {\n          'download': fileName + '.' + fileType\n        });\n        var urlLink = URL.createObjectURL(b);\n        htmlElement_1.href = urlLink;\n        var mouseEvent_1 = document.createEvent('MouseEvents');\n        mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        setTimeout(function () {\n          htmlElement_1.dispatchEvent(mouseEvent_1);\n        }, (j + 1) * 5);\n      }\n    }; // Ensure this for safari\n    // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n    //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n    //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n    //     return content;\n    // } else {\n\n\n    for (var j = 0; j < buffers.length; j++) {\n      _loop_1(j);\n    }\n  };\n  /**   @private  */\n\n\n  PrintAndExport.prototype.getObjectsBound = function (options) {\n    var nodes = this.diagram.nodes;\n    var nodebounds;\n\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n      var node = nodes_1[_i];\n\n      if (node.visible) {\n        if (options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement) || options.format === 'SVG' && !(node instanceof DiagramHtmlElement)) {\n          if (!nodebounds) {\n            nodebounds = node.wrapper.outerBounds;\n          } else {\n            nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n          }\n        }\n      }\n    }\n\n    var connectors = this.diagram.connectors;\n\n    for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n      var connector = connectors_1[_a];\n\n      if (connector.visible) {\n        if (!nodebounds) {\n          nodebounds = connector.wrapper.outerBounds;\n        } else {\n          nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n        }\n      }\n    }\n\n    return nodebounds || new Rect(0, 0, 0, 0);\n  };\n  /**   @private  */\n\n\n  PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n    var rect = this.getObjectsBound(options);\n    var left = rect.left;\n    var top = rect.top;\n    var right = rect.right - rect.left;\n    var bottom = rect.bottom - rect.top;\n\n    if (mode !== 'Content') {\n      if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n        left = rect.left;\n        top = rect.top;\n\n        if (this.diagram.pageSettings.width) {\n          left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n          right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n        }\n\n        if (this.diagram.pageSettings.height) {\n          top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n          bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n        }\n\n        if (rect.width === 0 && this.diagram.pageSettings.width !== null) {\n          right = this.diagram.pageSettings.width;\n        }\n\n        if (rect.height === 0 && this.diagram.pageSettings.height !== null) {\n          bottom = this.diagram.pageSettings.height;\n        }\n      } else {\n        if (this.diagram.pageSettings.width) {\n          left = 0;\n          right = this.diagram.pageSettings.width;\n        }\n\n        if (this.diagram.pageSettings.height) {\n          top = 0;\n          bottom = this.diagram.pageSettings.height;\n        }\n      }\n    }\n\n    var svgBounds = new Rect();\n    svgBounds.x = left;\n    svgBounds.y = top;\n    svgBounds.width = right;\n    svgBounds.height = bottom;\n    return svgBounds;\n  };\n\n  PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n    var scaleX = 'scaleX';\n    var scaleY = 'scaleY';\n    var scaleOffsetX = 'scaleOffsetX';\n    var scaleOffsetY = 'scaleOffsetY';\n    options[scaleX] = 1;\n    options[scaleY] = 1;\n    options[scaleOffsetX] = 0;\n    options[scaleOffsetY] = 0;\n    options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n    options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n    var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n\n    if (!pageOrientation) {\n      pageOrientation = 'Portrait';\n    }\n\n    if (pageOrientation === 'Portrait') {\n      if (options.pageWidth > options.pageHeight) {\n        var temp = options.pageHeight;\n        options.pageHeight = options.pageWidth;\n        options.pageWidth = temp;\n      }\n    } else {\n      if (options.pageHeight > options.pageWidth) {\n        var temp = options.pageWidth;\n        options.pageWidth = options.pageHeight;\n        options.pageHeight = temp;\n      }\n    }\n\n    if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n      options.stretch = 'Meet';\n    }\n\n    var height = options.pageHeight || bounds.height;\n    var width = options.pageWidth || bounds.width;\n\n    if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n      options[scaleX] = width / bounds.width;\n      options[scaleY] = height / bounds.height;\n\n      if (options.stretch === 'Meet') {\n        options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n        options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n        options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n      } else if (options.stretch === 'Slice') {\n        options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n      }\n\n      bounds.width = width;\n      bounds.height = height;\n    }\n\n    bounds.x *= options[scaleX];\n    bounds.y *= options[scaleY];\n  };\n\n  PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n    var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n    document.body.appendChild(svg);\n    var g = createSvgElement('g', {\n      'id': this.diagram.element.id + '_pageBackground'\n    });\n    var region = options && options.region ? options.region : 'Content';\n    var bounds = this.getDiagramBounds(region, options);\n    var left = bounds.x;\n    var top = bounds.y;\n    var width = bounds.width;\n    var height = bounds.height;\n    svg.appendChild(g);\n    var attr = {\n      'x': String(left),\n      'y': String(top),\n      'width': String(width),\n      'height': String(height)\n    };\n    setAttributeSvg(g, attr);\n    this.setTransform(g, options.bounds, margin);\n    var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n\n    if (gradient) {\n      svg.appendChild(gradient);\n    }\n\n    attr = {\n      'x': String(left),\n      'y': String(top),\n      'width': String(width + margin.left + margin.right),\n      'height': String(height + margin.top + margin.bottom)\n    };\n    var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n    setAttributeSvg(backimage, attr);\n    svg.appendChild(backimage);\n    this.setTransform(backimage, bounds, margin);\n    var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n    setAttributeSvg(backRect, attr);\n    svg.appendChild(backRect);\n    this.setTransform(backRect, bounds, margin);\n\n    if (this.diagram.mode === 'SVG') {\n      var element = void 0;\n      var i = void 0;\n      var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n      svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n\n      for (i = 0; i < svg.childNodes.length; i++) {\n        element = svg.childNodes[i];\n\n        if (element.id === this.diagram.element.id + '_diagramLayer') {\n          this.setTransform(element, bounds, margin);\n        }\n      }\n    } else {\n      g = createSvgElement('g', {\n        'id': this.diagram.element.id + '_diagramLayer'\n      });\n      svg.appendChild(g);\n      this.setTransform(g, options.bounds, margin); //renderLabels\n\n      var renderer = new DiagramRenderer('', null, true);\n      var htmlLayer = getHTMLLayer(this.diagram.element.id);\n      this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n    }\n\n    document.body.removeChild(svg);\n    return svg;\n  };\n\n  PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' + (-bounds.y + margin.top) + ')');\n  };\n\n  PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n    var scaleX = 'scaleX';\n    var scaleY = 'scaleY';\n    var scaleOffsetX = 'scaleOffsetX';\n    var scaleOffsetY = 'scaleOffsetY';\n    var element;\n    var elements = [];\n    var region = options.bounds;\n    var margin = options.margin;\n    var mode = options && options.region ? options.region : 'Content';\n    var pageBounds = this.getDiagramBounds(mode, options);\n    var bgColor = this.diagram.pageSettings.background.color;\n    var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height); //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n\n    var context = canvas.getContext('2d');\n    context.translate(-region.x, -region.y);\n    context.save();\n    context.fillStyle = this.diagram.pageSettings.background.color === 'transparent' ? 'white' : this.diagram.pageSettings.background.color;\n    region = mode === 'Content' ? pageBounds : region;\n    context.fillRect(region.x, region.y, region.width, region.height);\n    var bgImg = this.diagram.pageSettings.background;\n\n    if (bgImg && bgImg.source) {\n      pageBounds = this.getDiagramBounds(mode, options);\n      var image = new Image();\n      image.src = bgImg.source;\n      var proportionX = pageBounds.width / image.width;\n      var proportionY = pageBounds.height / image.height;\n      var x = pageBounds.x;\n      var y = pageBounds.y;\n      var width = pageBounds.width;\n      var height = pageBounds.height;\n      var exportable = this.isImageExportable(bgImg);\n\n      if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n        var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n        width = proportion * image.width;\n        height = proportion * image.height;\n\n        if (bgImg.align.indexOf('xmid') > -1) {\n          x += (pageBounds.width - width) / 2;\n        } else if (bgImg.align.indexOf('xmax') > -1) {\n          x = x + pageBounds.width - width;\n        }\n\n        if (bgImg.align.indexOf('ymid') > -1) {\n          y += (pageBounds.height - height) / 2;\n        } else if (bgImg.align.indexOf('ymax') > -1) {\n          y = y + pageBounds.height - height;\n        }\n\n        if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n          context.fillStyle = 'white';\n          context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n\n        if (exportable) {\n          context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n        }\n      } else if (exportable) {\n        context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n      }\n    } else {\n      context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n      context.fillRect(pageBounds.x * options[scaleX] - margin.left, pageBounds.y * options[scaleY] - margin.top, pageBounds.width * options[scaleX] + margin.left + margin.right, options[scaleY] * pageBounds.height + margin.top + margin.bottom);\n    }\n\n    var brColor = this.diagram.pageSettings.background.color;\n    var brWidth = this.diagram.pageSettings.width;\n\n    if (brWidth) {\n      context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n      context.lineWidth = brWidth;\n      context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n    }\n\n    context.restore();\n    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n    var renderer = new DiagramRenderer('', null, false);\n    this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n    this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n    this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n    return canvas;\n  };\n\n  PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n    if (canvas && canvas.length > 0) {\n      for (var j = 0; j < canvas.length; j++) {\n        if (canvas[j].children) {\n          this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n        }\n\n        canvas[j].exportScaleValue.x = value;\n        canvas[j].exportScaleValue.y = value;\n        canvas[j].exportScaleOffset.x = scaleOffsetX;\n        canvas[j].exportScaleOffset.y = scaleOffsetY;\n        canvas[j].isExport = isExport;\n      }\n    }\n  };\n\n  PrintAndExport.prototype.scaleGradientValue = function (node, scaleValue, isExport) {\n    if (node.style.gradient.stops.length > 0) {\n      var gradients = node.style.gradient;\n\n      if (node.style.gradient instanceof LinearGradient) {\n        gradients.x1 = isExport ? gradients.x1 * scaleValue : gradients.x1 / scaleValue;\n        gradients.y1 = isExport ? gradients.y1 * scaleValue : gradients.y1 / scaleValue;\n        gradients.x2 = isExport ? gradients.x2 * scaleValue : gradients.x2 / scaleValue;\n        gradients.y2 = isExport ? gradients.y2 * scaleValue : gradients.y2 / scaleValue;\n      } else {\n        gradients.fx = isExport ? gradients.fx * scaleValue : gradients.fx / scaleValue;\n        gradients.fy = isExport ? gradients.fy * scaleValue : gradients.fy / scaleValue;\n        gradients.cx = isExport ? gradients.cx * scaleValue : gradients.cx / scaleValue;\n        gradients.cy = isExport ? gradients.cy * scaleValue : gradients.cy / scaleValue;\n        gradients.r = isExport ? gradients.r * scaleValue : gradients.r / scaleValue;\n      }\n    }\n  };\n\n  PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n    var wrapper;\n\n    for (var i = 0; i < this.diagram.nodes.length; i++) {\n      wrapper = this.diagram.nodes[i].wrapper;\n      this.scaleGradientValue(this.diagram.nodes[i], value, isExport);\n      this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n      wrapper.exportScaleValue.x = value;\n      wrapper.exportScaleValue.y = value;\n      wrapper.exportScaleOffset.x = scaleOffsetX;\n      wrapper.exportScaleOffset.y = scaleOffsetY;\n      wrapper.isExport = isExport;\n    }\n\n    for (var j = 0; j < this.diagram.connectors.length; j++) {\n      wrapper = this.diagram.connectors[j].wrapper;\n\n      for (var k = 0; k < wrapper.children.length; k++) {\n        wrapper.children[k].isExport = isExport;\n\n        if (isExport) {\n          wrapper.children[k].exportScaleValue.x = value;\n          wrapper.children[k].exportScaleValue.y = value;\n          wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n          wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n        }\n      }\n    }\n  };\n\n  PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n    var state = true;\n    var content;\n    var canvas;\n\n    if (backgroundImage.source) {\n      try {\n        canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n        var ctx = canvas.getContext('2d');\n        ctx.save();\n        var image = new Image();\n        image.src = backgroundImage.source;\n        ctx.drawImage(image, 0, 0, 100, 100);\n        ctx.restore();\n        content = canvas.toDataURL();\n      } catch (e) {\n        state = false;\n      }\n    }\n\n    return state;\n  };\n\n  PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n    var width = 0;\n    var height = 0;\n    var size = new Size();\n    width = img.width;\n    height = img.height;\n\n    if (options.pageHeight || options.pageWidth) {\n      height = options.pageHeight ? options.pageHeight : height;\n      width = options.pageWidth ? options.pageWidth : width;\n    }\n\n    if (options.pageOrientation) {\n      if (options.pageOrientation === 'Landscape' && height > width || options.pageOrientation === 'Portrait' && width > height) {\n        var temp = width;\n        width = height;\n        height = temp;\n      }\n    }\n\n    size.height = height;\n    size.width = width;\n    return size;\n  };\n\n  PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n    var imageArray = [];\n    var div = createHtmlElement('div', {});\n    var pageSize = this.getPrintCanvasStyle(img, options); //let pageWidth: number;\n    //let pageHeight: number;\n\n    var margin = options.margin;\n    var mLeft = margin.left;\n    var mTop = margin.top;\n    var mRight = margin.right;\n    var mBottom = margin.bottom;\n    var x = 0;\n    var y = 0;\n    var pageWidth = pageSize.width + x;\n    var pageHeight = pageSize.height + y;\n    var drawnX = 0;\n    var drawnY = 0;\n\n    if (options && options.multiplePage) {\n      div.style.height = 'auto';\n      div.style.width = 'auto';\n      var imgHeight = img.height;\n      var imgWidth = img.width; //if (img) {\n\n      var i = 0;\n      var j = 0;\n      var url = void 0;\n      var clipWidth = 0;\n      var clipHeight = 0;\n      var ctx = void 0;\n      var canvas = void 0;\n\n      do {\n        do {\n          clipWidth = pageSize.width;\n          clipHeight = pageSize.height;\n\n          if (drawnX + pageSize.width >= imgWidth) {\n            clipWidth = imgWidth - drawnX;\n          }\n\n          if (drawnY + pageSize.height >= imgHeight) {\n            clipHeight = imgHeight - drawnY;\n          }\n\n          canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n          ctx = canvas.getContext('2d');\n          ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n\n          if (drawnX + pageSize.width >= imgWidth) {\n            drawnX -= drawnX - imgWidth;\n          }\n\n          url = canvas.toDataURL();\n          ctx.restore();\n          drawnX += pageWidth;\n\n          if (isExport) {\n            imageArray.push(url);\n          } else {\n            this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n          }\n\n          i++;\n        } while (drawnX < imgWidth);\n\n        j++;\n        i = x = drawnX = 0;\n\n        if (drawnY + pageSize.height >= imgHeight) {\n          drawnY -= drawnY - imgHeight;\n        }\n\n        drawnY += pageHeight;\n      } while (drawnY < imgHeight); //}\n\n    } else {\n      var x_1 = 0;\n      var y_1 = 0;\n      var pageSize_1 = this.getPrintCanvasStyle(img, options); ///let pageWidth: number; let pageHeight: number;\n\n      var pageWidth_1 = pageSize_1.width;\n      var pageHeight_1 = pageSize_1.height; //let ctx: CanvasRenderingContext2D;\n      //let canvas: HTMLCanvasElement;\n      //let url: string;\n\n      var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n      var url = canvas.toDataURL();\n      ctx.restore();\n\n      if (isExport) {\n        imageArray.push(url);\n      } else {\n        this.printImage(div, url, 0);\n      }\n    }\n\n    if (isExport) {\n      return imageArray;\n    } else {\n      return div;\n    }\n  };\n\n  PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n    var attr = {\n      'class': 'e-diagram-print-page',\n      'style': 'width:' + pageWidth + 'height:' + pageHeight\n    };\n    var img = createHtmlElement('img', attr);\n    var innerDiv = createHtmlElement('div', attr);\n    attr = {\n      'id': this.diagram.element.id + '_multiplePrint_img' + i,\n      'style': 'float:left',\n      'src': url\n    };\n    setAttributeHtml(img, attr);\n    innerDiv.appendChild(img);\n    div.appendChild(innerDiv);\n  };\n  /**\n   * To print the image\n   *\n   * @private\n   */\n\n\n  PrintAndExport.prototype.print = function (options) {\n    options.mode = 'Data';\n    var url = this.exportDiagram(options);\n    this.printImages(url, options);\n  };\n\n  PrintAndExport.prototype.printImages = function (url, options) {\n    var _this = this;\n\n    var attr = {\n      'id': this.diagram.element.id + '_printImage',\n      'src': url\n    };\n    options.margin = {\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0\n    };\n    var img = createHtmlElement('img', attr);\n\n    img.onload = function () {\n      var div = _this.getMultipleImage(img, options); // specify window parameters\n\n\n      var printWind = window.open('');\n\n      if (printWind != null) {\n        if (div instanceof HTMLElement) {\n          printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' + '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' + '</style><title></title></head>');\n          printWind.addEventListener('load', function (event) {\n            setTimeout(function () {\n              printWind.window.print();\n            }, 3000);\n          });\n          printWind.document.write('<center>' + div.innerHTML + '</center>');\n          printWind.document.close();\n        }\n      }\n    };\n  };\n\n  PrintAndExport.prototype.getContent = function (styleSheets) {\n    var snapConstraints = this.diagram.snapSettings.constraints;\n    this.diagram.snapSettings.constraints = this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines;\n    this.diagram.dataBind();\n    this.diagram.clearSelection();\n    styleSheets = styleSheets || document.styleSheets;\n    var styleSheetRef = '';\n\n    for (var i = 0; i < styleSheets.length; i++) {\n      if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n        styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n      }\n    }\n\n    var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n    var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:' + 0 + 'px;margin-bottom:' + 0 + 'px;';\n    htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' + marginStyle + '\\'>' + htmlData + '</div></body>';\n    htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n    this.diagram.snapSettings.constraints = snapConstraints;\n    this.diagram.dataBind();\n    return htmlData;\n  };\n  /** @private */\n\n\n  PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n    if (this.diagram.scroller.currentZoom === 1) {\n      var htmlData = this.getContent(styleSheets);\n      /* tslint:disable */\n      // eslint-disable-next-line quotes\n\n      return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.protocol + '//' + location.host + location.pathname + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n      /* tslint:enable */\n    } else {\n      var container = document.getElementById(this.diagram.element.id + 'content');\n      var scrollerX = container.scrollLeft;\n      var scrollerY = container.scrollTop;\n      var oldZoom = this.diagram.scrollSettings.currentZoom;\n      var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n      var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n      var oldWidth = Number(String(this.diagram.width).split('%')[0]) ? container.clientWidth : Number(String(this.diagram.width).split('px')[0]);\n      var oldHeight = Number(String(this.diagram.height).split('%')[0]) ? container.clientHeight : Number(String(this.diagram.height).split('px')[0]);\n      var bounds = this.getDiagramBounds('', {});\n      this.diagram.scroller.zoom(1 / oldZoom);\n      var scrollX_1 = 0;\n      var scrollY_1 = 0;\n      scrollX_1 = bounds.x;\n      scrollY_1 = bounds.y;\n      this.diagram.scroller.transform = {\n        tx: -scrollX_1,\n        ty: -scrollY_1,\n        scale: this.diagram.scroller.currentZoom\n      };\n      this.diagram.scroller.horizontalOffset = -scrollX_1;\n      this.diagram.scroller.verticalOffset = -scrollY_1;\n      this.diagram.scroller.setSize();\n      this.diagram.setSize(bounds.width, bounds.height);\n      var htmlData = this.getContent(styleSheets);\n      this.diagram.setSize(oldWidth, oldHeight);\n      this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n      this.diagram.dataBind();\n\n      if (scrollerX || scrollerY) {\n        this.diagram.setOffset(scrollerX, scrollerY);\n      } else {\n        this.diagram.scroller.transform = {\n          tx: oldHorizontalOffset / this.diagram.scroller.currentZoom,\n          ty: oldVerticalOffset / this.diagram.scroller.currentZoom,\n          scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n        this.diagram.scroller.verticalOffset = oldVerticalOffset;\n      }\n\n      this.diagram.renderSelector(false);\n      /* tslint:disable */\n      // eslint-disable-next-line quotes\n\n      return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.protocol + '//' + location.host + location.pathname + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n      /* tslint:enable */\n    }\n  };\n  /** @private */\n\n\n  PrintAndExport.prototype.exportImages = function (image, options) {\n    var _this = this;\n\n    var region = options && options.region ? options.region : 'Content';\n    var margin = options.margin || {};\n    margin = {\n      top: !isNaN(margin.top) ? margin.top : 0,\n      bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n      left: !isNaN(margin.left) ? margin.left : 0,\n      right: !isNaN(margin.right) ? margin.right : 0\n    };\n    var bounds = this.getDiagramBounds(region, {});\n\n    if (options.bounds) {\n      bounds.x = !isNaN(options.bounds.x) ? options.bounds.x : bounds.x;\n      bounds.y = !isNaN(options.bounds.y) ? options.bounds.y : bounds.y;\n      bounds.width = options.bounds.width || bounds.width;\n      bounds.height = options.bounds.height || bounds.height;\n    }\n\n    var img = document.createElement('img');\n    var attr = {\n      'src': image\n    };\n    setAttributeHtml(img, attr);\n    var context = this;\n\n    img.onload = function () {\n      var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = context.diagram.pageSettings.background.color;\n      ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n      ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n      image = canvas.toDataURL();\n\n      if (options.printOptions) {\n        context.printImages(image, options);\n        return;\n      }\n\n      ctx.restore();\n      var fileName = options.fileName || 'diagram';\n\n      _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n    };\n  };\n  /**\n   *To destroy the ruler\n   *\n   * @returns {void} To destroy the ruler\n   */\n\n\n  PrintAndExport.prototype.destroy = function () {\n    /**\n     * Destroys the Print and Export module\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  PrintAndExport.prototype.getModuleName = function () {\n    /**\n     * Returns the module name\n     */\n    return 'PrintandExport';\n  };\n\n  return PrintAndExport;\n}();\n\nexport { PrintAndExport };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/print-settings.js"],"names":["Browser","isBlazor","CanvasRenderer","DiagramRenderer","Size","SnapConstraints","setAttributeHtml","setAttributeSvg","createHtmlElement","Rect","createSvgElement","getHTMLLayer","getDiagramLayerSvg","checkBrowserInfo","DiagramHtmlElement","DiagramNativeElement","LinearGradient","storeFormat","PrintAndExport","diagram","prototype","exportDiagram","options","fileType","customBounds","content","content1","data","buffers","margin","region","mode","bounds","getDiagramBounds","x","y","width","height","top","undefined","bottom","right","left","nodes","fileName","format","setCanvas","svg","diagramAsSvg","svgData","XMLSerializer","serializeToString","buffer","push","browserInfo","b","length","blob","Blob","type","info","name","window","navigator","msSaveOrOpenBlob","pom","url","URL","createObjectURL","href","e","document","createEvent","initMouseEvent","dispatchEvent","scaleX","scaleY","scaleOffsetX","scaleOffsetY","setScaleValueforCanvas","canvas","diagramAsCanvas","image","toDataURL","canvasMultiplePage","_this","images","imageData","substring","indexOf","imageFormat","toUpperCase","multiplePage","pageHeight","pageSettings","pageWidth","pageOrientation","temp","isNaN","attr","element","id","img_1","onload","getMultipleImage","exportImage","HTMLElement","g","replace","image1","split","byteString","atob","ArrayBuffer","intArray","Uint8Array","i","charCodeAt","_loop_1","j","htmlElement_1","urlLink","mouseEvent_1","setTimeout","getObjectsBound","nodebounds","_i","nodes_1","node","visible","wrapper","outerBounds","uniteRect","connectors","_a","connectors_1","connector","rect","Math","floor","ceil","svgBounds","orientation","stretch","min","max","createSvg","body","appendChild","String","setTransform","gradient","getElementById","backimage","cloneNode","backRect","diagramLayerSVG","diagramLayer","childNodes","renderer","htmlLayer","renderDiagramElements","removeChild","setAttribute","elements","pageBounds","bgColor","background","color","createCanvas","context","getContext","translate","save","fillStyle","fillRect","bgImg","source","Image","src","proportionX","proportionY","exportable","isImageExportable","scale","align","proportion","drawImage","brColor","brWidth","strokeStyle","lineWidth","strokeRect","restore","updateObjectValue","updateWrapper","value","isExport","children","exportScaleValue","exportScaleOffset","scaleGradientValue","scaleValue","style","stops","gradients","x1","y1","x2","y2","fx","fy","cx","cy","r","k","backgroundImage","state","ctx","getPrintCanvasStyle","img","size","imageArray","div","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","clipWidth","clipHeight","printImage","x_1","y_1","pageSize_1","pageWidth_1","pageHeight_1","innerDiv","print","printImages","printWind","open","write","addEventListener","event","innerHTML","close","getContent","styleSheets","snapConstraints","snapSettings","constraints","ShowLines","dataBind","clearSelection","styleSheetRef","htmlData","marginStyle","getDiagramContent","scroller","currentZoom","location","protocol","host","pathname","container","scrollerX","scrollLeft","scrollerY","scrollTop","oldZoom","scrollSettings","oldHorizontalOffset","horizontalOffset","oldVerticalOffset","verticalOffset","oldWidth","Number","clientWidth","oldHeight","clientHeight","zoom","scrollX_1","scrollY_1","transform","tx","ty","setSize","setOffset","renderSelector","exportImages","createElement","printOptions","destroy","getModuleName"],"mappings":"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","sourcesContent":["/* eslint-disable jsdoc/require-param */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { LinearGradient } from './core/appearance';\nvar storeFormat;\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     *\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        //let mode: string;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        var mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                if (isBlazor() && options.format === 'SVG') {\n                    var svgData = new XMLSerializer().serializeToString(svg);\n                    return svgData;\n                }\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image;\n        if (options.format === 'JPG') {\n            image = content = storeFormat = canvas.toDataURL('image/jpeg');\n        }\n        else if (options.format === 'BMP') {\n            image = content = storeFormat = canvas.toDataURL('image/bmp');\n        }\n        else {\n            image = content = storeFormat = canvas.toDataURL();\n        }\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var imageData = image.substring(image.indexOf(\":\") + 1, image.indexOf(\";\"));\n        var imageFormat = imageData.substring(imageData.indexOf(\"/\") + 1);\n        if (imageFormat === 'jpeg') {\n            imageFormat = undefined;\n        }\n        else {\n            imageFormat = imageFormat.toUpperCase();\n        }\n        var fileType = imageFormat || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = (this.diagram.pageSettings.background.color === 'transparent') ? 'white' :\n            this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.scaleGradientValue = function (node, scaleValue, isExport) {\n        if (node.style.gradient.stops.length > 0) {\n            var gradients = node.style.gradient;\n            if (node.style.gradient instanceof LinearGradient) {\n                gradients.x1 = isExport ? gradients.x1 * scaleValue : gradients.x1 / scaleValue;\n                gradients.y1 = isExport ? gradients.y1 * scaleValue : gradients.y1 / scaleValue;\n                gradients.x2 = isExport ? gradients.x2 * scaleValue : gradients.x2 / scaleValue;\n                gradients.y2 = isExport ? gradients.y2 * scaleValue : gradients.y2 / scaleValue;\n            }\n            else {\n                gradients.fx = isExport ? gradients.fx * scaleValue : gradients.fx / scaleValue;\n                gradients.fy = isExport ? gradients.fy * scaleValue : gradients.fy / scaleValue;\n                gradients.cx = isExport ? gradients.cx * scaleValue : gradients.cx / scaleValue;\n                gradients.cy = isExport ? gradients.cy * scaleValue : gradients.cy / scaleValue;\n                gradients.r = isExport ? gradients.r * scaleValue : gradients.r / scaleValue;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.scaleGradientValue(this.diagram.nodes[i], value, isExport);\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        //let pageWidth: number;\n        //let pageHeight: number;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        var pageWidth = pageSize.width + x;\n        var pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            ///let pageWidth: number; let pageHeight: number;\n            var pageWidth_1 = pageSize_1.width;\n            var pageHeight_1 = pageSize_1.height;\n            //let ctx: CanvasRenderingContext2D;\n            //let canvas: HTMLCanvasElement;\n            //let url: string;\n            var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            var url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     *\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.addEventListener('load', function (event) {\n                        setTimeout(function () {\n                            printWind.window.print();\n                        }, 3000);\n                    });\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    PrintAndExport.prototype.getContent = function (styleSheets) {\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        if (this.diagram.scroller.currentZoom === 1) {\n            var htmlData = this.getContent(styleSheets);\n            /* tslint:disable */\n            // eslint-disable-next-line quotes\n            return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.protocol + '//' + location.host + location.pathname + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n            /* tslint:enable */\n        }\n        else {\n            var container = document.getElementById(this.diagram.element.id + 'content');\n            var scrollerX = container.scrollLeft;\n            var scrollerY = container.scrollTop;\n            var oldZoom = this.diagram.scrollSettings.currentZoom;\n            var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n            var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n            var oldWidth = Number(String(this.diagram.width).split('%')[0]) ?\n                container.clientWidth : Number(String(this.diagram.width).split('px')[0]);\n            var oldHeight = Number(String(this.diagram.height).split('%')[0]) ?\n                container.clientHeight : Number(String(this.diagram.height).split('px')[0]);\n            var bounds = this.getDiagramBounds('', {});\n            this.diagram.scroller.zoom((1 / oldZoom));\n            var scrollX_1 = 0;\n            var scrollY_1 = 0;\n            scrollX_1 = bounds.x;\n            scrollY_1 = bounds.y;\n            this.diagram.scroller.transform = {\n                tx: -scrollX_1,\n                ty: -scrollY_1,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = -scrollX_1;\n            this.diagram.scroller.verticalOffset = -scrollY_1;\n            this.diagram.scroller.setSize();\n            this.diagram.setSize(bounds.width, bounds.height);\n            var htmlData = this.getContent(styleSheets);\n            this.diagram.setSize(oldWidth, oldHeight);\n            this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n            this.diagram.dataBind();\n            if (scrollerX || scrollerY) {\n                this.diagram.setOffset(scrollerX, scrollerY);\n            }\n            else {\n                this.diagram.scroller.transform = {\n                    tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                    ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                    scale: this.diagram.scroller.currentZoom\n                };\n                this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n                this.diagram.scroller.verticalOffset = oldVerticalOffset;\n            }\n            this.diagram.renderSelector(false);\n            /* tslint:disable */\n            // eslint-disable-next-line quotes\n            return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.protocol + '//' + location.host + location.pathname + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n            /* tslint:enable */\n        }\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = context.diagram.pageSettings.background.color;\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     *To destroy the ruler\n     *\n     * @returns {void} To destroy the ruler\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n"]},"metadata":{},"sourceType":"module"}