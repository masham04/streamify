{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable @typescript-eslint/ban-types */\nimport { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\n\nvar BpmnDiagrams =\n/** @class */\nfunction () {\n  //End size region\n\n  /**\n   * Constructor for the BpmnDiagrams module\n   *\n   * @private\n   */\n  function BpmnDiagrams() {\n    //Code conversion for Bpmn Shapes\n    //Start Region\n\n    /**   @private  */\n    this.annotationObjects = {}; //constructs the BpmnDiagrams module\n  }\n\n  Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n    /**   @private  */\n    get: function () {\n      var connectors = [];\n\n      for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var entry = this.annotationObjects[key];\n\n        for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n          var annotation = _c[_b];\n          var key_1 = 'connector';\n          connectors.push(entry[annotation][key_1]);\n        }\n      }\n\n      return connectors;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @private */\n\n  BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n    var connectors = [];\n\n    if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n      var entry = this.annotationObjects[obj.id];\n\n      for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n        var annotation = _a[_i];\n        var key = 'connector';\n        connectors.push(entry[annotation][key]);\n      }\n    }\n\n    return connectors;\n  };\n  /**   @private  */\n\n\n  BpmnDiagrams.prototype.getSize = function (node, content) {\n    var size = new Size(node.width, node.height);\n\n    if (size.width === undefined || size.height === undefined) {\n      if (!(content instanceof PathElement)) {\n        size.width = size.width || 50;\n        size.height = size.height || 50;\n      }\n\n      if (content.actualSize.width && content.actualSize.height) {\n        return content.actualSize;\n      } else {\n        content.measure(new Size());\n        size.width = size.width || content.desiredSize.width;\n        size.height = size.height || content.desiredSize.height;\n      }\n\n      if (node.maxWidth !== undefined) {\n        size.width = Math.min(size.width, node.maxWidth);\n      }\n\n      if (node.maxHeight !== undefined) {\n        size.height = Math.min(size.height, node.maxHeight);\n      }\n\n      if (node.minWidth !== undefined) {\n        size.width = Math.max(size.width, node.minWidth);\n      }\n\n      if (node.minHeight !== undefined) {\n        size.height = Math.max(size.height, node.minHeight);\n      }\n    }\n\n    return size;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n    var shape = isBlazor() ? node.shape : node.shape;\n    var bpmnShape = isBlazor() ? node.shape.bpmnShape : node.shape.shape;\n\n    if (bpmnShape === 'Event') {\n      content = this.getBPMNEventShape(node, shape.event);\n    }\n\n    if (bpmnShape === 'Gateway') {\n      content = this.getBPMNGatewayShape(node);\n    }\n\n    if (bpmnShape === 'DataObject') {\n      content = this.getBPMNDataObjectShape(node);\n    }\n\n    if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n      content = this.getBPMNShapes(node);\n    } // if (shape.shape === 'Group') {\n    //     content = this.getBPMNGroup(node, diagram);\n    //     content.style.strokeDashArray = '2 2 6 2';\n    //     content.horizontalAlignment = 'Center';\n    //     content.verticalAlignment = 'Center';\n    // }\n\n\n    if (bpmnShape === 'Activity') {\n      content = this.getBPMNActivityShape(node);\n    }\n\n    if (bpmnShape === 'TextAnnotation') {\n      content = this.renderBPMNTextAnnotation(diagram, node, content);\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n    var annotations = {};\n\n    if (shape.annotations.length > 0) {\n      for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n        content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n      }\n\n      content.style.strokeDashArray = '2 2 6 2';\n    }\n\n    return content;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n    var bpmnShape = new PathElement(); //set style\n\n    this.setStyle(bpmnShape, node);\n\n    if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n      bpmnShape.shadow = node.shadow;\n    }\n\n    var bpmnShapeData = getBpmnShapePathData(isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n    bpmnShape.data = bpmnShapeData;\n    bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n\n    if (node.width !== undefined && node.height !== undefined) {\n      bpmnShape.width = node.width;\n      bpmnShape.height = node.height;\n    }\n\n    return bpmnShape;\n  };\n  /** @private */\n  // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n  //     let group: Container = new Container();\n  //     group.id = node.id + '_group';\n  //     //group.style.strokeDashArray = '2 2 6 2';\n  //     if (!group.children) { group.children = []; }\n  //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n  //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n  //         for (let i: number = 0; i < grp.children.length; i++) {\n  //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n  //             group.children.push(b.wrapper);\n  //         }\n  //     }\n  //     return group;\n  // }\n\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n    var gatewayshape = new Canvas(); //childNode0\n\n    var gatewayNode = new PathElement();\n    gatewayNode.id = node.id + '_0_gateway';\n    gatewayNode.offsetX = node.offsetX;\n    gatewayNode.offsetY = node.offsetY;\n    gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n    this.setStyle(gatewayNode, node); //childNode1\n\n    var gatewayTypeNode = new PathElement();\n    gatewayTypeNode.id = node.id + '_1_gatewayType'; //set style - opacity\n\n    gatewayTypeNode.style.opacity = node.style.opacity;\n    gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n    gatewayTypeNode.horizontalAlignment = 'Center';\n    gatewayTypeNode.verticalAlignment = 'Center';\n    gatewayTypeNode.relativeMode = 'Object';\n    var shapeType = node.shape.gateway; //let gatewayTypeNodeShapeData: string;\n\n    var gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n\n    if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n      gatewayTypeNode.style.fill = 'white';\n    } else {\n      gatewayTypeNode.style.fill = 'black';\n    }\n\n    gatewayTypeNode.data = gatewayTypeNodeShapeData; // append child and set style\n\n    gatewayshape.style.fill = 'transparent';\n    gatewayshape.style.strokeColor = 'transparent';\n    gatewayshape.style.strokeWidth = 0;\n    gatewayshape.children = [gatewayNode, gatewayTypeNode];\n    var size = this.getSize(node, gatewayNode);\n    this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n    return gatewayshape;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n    var dataObjectshape = new Canvas();\n    var shape = node.shape.dataObject; //childNode0\n\n    var dataobjNode = new PathElement();\n    dataobjNode.id = node.id + '_0_dataobj';\n    dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n    var size = this.getSize(node, dataobjNode);\n    dataobjNode.width = size.width;\n    dataobjNode.height = size.height;\n    this.setStyle(dataobjNode, node); //childNode1\n\n    var dataobjTypeNode = new PathElement();\n    dataobjTypeNode.id = node.id + '_1_type';\n    dataobjTypeNode.width = 25;\n    dataobjTypeNode.height = 20;\n    dataobjTypeNode.margin.left = 5;\n    dataobjTypeNode.margin.top = 5;\n    dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z'; //set style - opacity\n\n    dataobjTypeNode.style.opacity = node.style.opacity; //childNode2\n\n    var dataobjCollectionNode = new PathElement();\n    dataobjCollectionNode.id = node.id + '_2_collection';\n    dataobjCollectionNode.width = 7.5;\n    dataobjCollectionNode.height = 15;\n    dataobjCollectionNode.style.fill = 'black';\n    dataobjCollectionNode.visible = true;\n    dataobjCollectionNode.horizontalAlignment = 'Center';\n    dataobjCollectionNode.verticalAlignment = 'Bottom';\n    dataobjCollectionNode.relativeMode = 'Object'; //set style - opacity\n\n    dataobjCollectionNode.style.opacity = node.style.opacity;\n    dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n\n    switch (shape.type) {\n      case 'None':\n        dataobjTypeNode.visible = false;\n        break;\n\n      case 'Input':\n        dataobjTypeNode.style.fill = 'white';\n        break;\n\n      case 'Output':\n        dataobjTypeNode.style.fill = 'black';\n        break;\n    }\n\n    if (shape.collection === false) {\n      dataobjCollectionNode.visible = false;\n    } //append child and set style\n\n\n    dataObjectshape.style.fill = 'transparent';\n    dataObjectshape.style.strokeColor = 'transparent';\n    dataObjectshape.style.strokeWidth = 0;\n    dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n    return dataObjectshape;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n    var shape = node.shape.activity;\n    var task = shape.task;\n    var taskShapes = new Canvas(); //childNode0\n\n    var taskNode = new DiagramElement();\n    taskNode.cornerRadius = 10;\n    var size = this.getSize(node, taskNode);\n    taskNode.id = node.id + '_0_task';\n    taskNode.width = size.width;\n    taskNode.height = size.height;\n    this.setStyle(taskNode, node); // if task as call\n\n    if (task.call !== undefined && task.call === true) {\n      taskNode.style.strokeWidth = 4;\n    }\n\n    taskShapes.width = size.width;\n    taskShapes.height = size.height;\n    var childCount = this.getTaskChildCount(node);\n    var x;\n    var childSpace = childCount * 12;\n    var area = size.width / 2 - childSpace;\n\n    if (childCount === 1) {\n      x = area + 8;\n    } else {\n      x = area + (childCount - 1) * 8;\n    } //childNode1\n\n\n    var taskTypeNode = new PathElement();\n\n    if (task.type === 'Receive' || task.type === 'Send') {\n      taskTypeNode.width = 18;\n      taskTypeNode.height = 16;\n    } else {\n      taskTypeNode.width = 20;\n      taskTypeNode.height = 20;\n    }\n\n    taskTypeNode.id = node.id + '_1_tasktType';\n    taskTypeNode.margin.left = 5;\n    taskTypeNode.margin.top = 5;\n    var taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n    taskTypeNode.data = taskTypeNodeData;\n    taskTypeNode.style.fill = 'transparent';\n    taskTypeNode.style.opacity = node.style.opacity; // append child and set style\n\n    taskShapes.style.fill = 'transparent';\n    taskShapes.style.strokeColor = 'transparent';\n    taskShapes.style.strokeWidth = 0;\n    taskShapes.children = [taskNode, taskTypeNode]; //childnode for service\n\n    if (task.type === 'Service') {\n      var taskTypeNodeService = new PathElement();\n      taskTypeNodeService.id = node.id + '_1_taskTypeService';\n      taskTypeNodeService.data = taskTypeNodeData;\n      taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n      taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n      taskTypeNodeService.style.fill = 'white';\n      taskTypeNodeService.style.opacity = node.style.opacity;\n      taskShapes.children.push(taskTypeNodeService);\n    } // if task as loop\n\n\n    var loopType = task.loop;\n    var taskLoopNode = new PathElement(); //let childNode2data: string;\n\n    var childNode2data = getBpmnLoopShapePathData(loopType);\n    taskLoopNode.data = childNode2data;\n    taskLoopNode.style.fill = 'black';\n\n    if (loopType !== 'None') {\n      taskLoopNode.visible = true;\n    } else {\n      taskLoopNode.visible = false;\n    }\n\n    if (childCount === 1) {\n      x = area + 9;\n    }\n\n    taskLoopNode.margin.left = x;\n\n    if (taskLoopNode.visible === true) {\n      x += 12 + 8;\n    }\n\n    taskLoopNode.width = 12;\n    taskLoopNode.height = 12;\n    taskLoopNode.margin.bottom = 5;\n    taskLoopNode.id = node.id + '_2_loop';\n    taskLoopNode.horizontalAlignment = 'Left';\n    taskLoopNode.verticalAlignment = 'Bottom';\n    taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n    taskLoopNode.relativeMode = 'Point';\n    taskLoopNode.style.fill = 'transparent';\n    taskTypeNode.style.opacity = node.style.opacity;\n    taskShapes.children.push(taskLoopNode); //if task as compensation\n\n    var taskCompNode = new PathElement();\n    taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n\n    if (task.compensation === true) {\n      taskCompNode.visible = true;\n    } else {\n      taskCompNode.visible = false;\n    }\n\n    if (childCount === 1) {\n      x = area + 9;\n    }\n\n    taskCompNode.margin.left = x - 3;\n    x += 12 + 6;\n    taskShapes.children.push(taskCompNode);\n    return taskShapes;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n    var eventshape = new Canvas();\n    var event;\n    var trigger;\n    var width;\n    var height;\n    id = id || node.id;\n    var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' + 'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' + '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n    var shapeEvent = node.shape.event;\n\n    if (!isBlazor() && node.shape.shape === 'Event' || isBlazor() && node.shape.bpmnShape === 'Event') {\n      event = shapeEvent.event;\n      trigger = shapeEvent.trigger;\n    }\n\n    width = subEvent.width;\n    height = subEvent.height;\n\n    if (sub) {\n      width = width || 20;\n      height = height || 20;\n    } else if (subEvent.width === undefined || subEvent.height === undefined) {\n      var pathElement = new PathElement();\n      pathElement.data = pathdata;\n      var size = this.getSize(node, pathElement);\n      width = size.width;\n      height = size.height;\n    }\n\n    var shapeActivity = node.shape.activity;\n\n    if (!isBlazor() && node.shape.shape === 'Activity' || isBlazor() && node.shape.bpmnShape === 'Activity') {\n      var subProcess = shapeActivity.subProcess;\n      event = subEvent.event;\n      trigger = subEvent.trigger;\n    } //childNode0\n\n\n    var innerEvtNode = new PathElement();\n    innerEvtNode.data = pathdata;\n    innerEvtNode.id = id + '_0_event';\n    innerEvtNode.width = width;\n    innerEvtNode.height = height;\n    innerEvtNode.horizontalAlignment = 'Center';\n    innerEvtNode.verticalAlignment = 'Center';\n    innerEvtNode.relativeMode = 'Object';\n    this.setStyle(innerEvtNode, node); //childNode1\n\n    var outerEvtNode = new PathElement();\n    outerEvtNode.data = pathdata;\n    outerEvtNode.id = id + '_1_event';\n    outerEvtNode.style.gradient = node.style.gradient;\n    outerEvtNode.horizontalAlignment = 'Center';\n    outerEvtNode.verticalAlignment = 'Center';\n    outerEvtNode.relativeMode = 'Object'; // set style opacity & strokeColor\n\n    outerEvtNode.style.strokeColor = node.style.strokeColor;\n    outerEvtNode.style.opacity = node.style.opacity; //childNode2\n\n    var triggerNode = new PathElement();\n    var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n    triggerNode.data = triggerNodeData;\n    triggerNode.id = id + '_2_trigger';\n    triggerNode.horizontalAlignment = 'Center';\n    triggerNode.verticalAlignment = 'Center';\n    triggerNode.relativeMode = 'Object'; // set style opacity & strokeColor\n\n    triggerNode.style.strokeColor = node.style.strokeColor;\n    triggerNode.style.opacity = node.style.opacity;\n\n    switch (event) {\n      case 'Start':\n        outerEvtNode.visible = false;\n        break;\n\n      case 'NonInterruptingStart':\n        innerEvtNode.style.strokeDashArray = '2 3';\n        outerEvtNode.visible = false;\n        break;\n\n      case 'Intermediate':\n        innerEvtNode.style.fill = node.style.fill;\n        innerEvtNode.style.gradient = null;\n        break;\n\n      case 'NonInterruptingIntermediate':\n        innerEvtNode.style.fill = node.style.fill;\n        innerEvtNode.style.gradient = null;\n        innerEvtNode.style.strokeDashArray = '2 3';\n        outerEvtNode.style.strokeDashArray = '2 3';\n        break;\n\n      case 'ThrowingIntermediate':\n      case 'End':\n        innerEvtNode.style.fill = event !== 'End' ? node.style.fill : node.style.fill !== 'white' ? node.style.fill : 'black';\n        innerEvtNode.style.gradient = null;\n        triggerNode.style.fill = 'black';\n        triggerNode.style.strokeColor = 'white';\n        break;\n    } //append child and set style\n\n\n    eventshape.style.fill = 'transparent';\n    eventshape.style.strokeColor = 'transparent';\n    eventshape.style.strokeWidth = 0;\n    eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n    this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n    return eventshape;\n  };\n\n  BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n    var event = node.shape.event.event;\n    var innerEvtNode = canvas[0];\n    var outerEvtNode = canvas[1];\n    var triggerNode = canvas[2];\n\n    switch (event) {\n      case 'Start':\n        outerEvtNode.visible = false;\n        break;\n\n      case 'NonInterruptingStart':\n        innerEvtNode.style.strokeDashArray = '2 3';\n        outerEvtNode.visible = false;\n        break;\n    }\n  };\n\n  BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n    var subProcess = node.shape.activity.subProcess;\n    var eventLength = subProcess.events.length;\n    var index = node.shape.activity.subProcess.type === 'Transaction' ? 2 : 0;\n    var elementWrapper = node.wrapper.children[0].children[0];\n\n    if (subProcess.adhoc === false) {\n      elementWrapper.children[3 + index + eventLength].visible = false;\n    }\n\n    if (subProcess.compensation === false) {\n      elementWrapper.children[4 + index + eventLength].visible = false;\n    }\n\n    if (eventLength > 0) {\n      for (var i = 0; i < eventLength; i++) {\n        this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n    var subProcessShapes = new Canvas();\n    var loopType;\n    var events;\n    var event;\n    var subprocessAdhoc = new PathElement();\n    var subProcessEventsShapes = new Canvas();\n    var subProcessLoopShapes = new PathElement();\n    var shape = node.shape.activity;\n    var subProcess = shape.subProcess;\n    var subChildCount = this.getSubprocessChildCount(node);\n    var x;\n    var subprocessNode = new DiagramElement();\n    subprocessNode.id = node.id + '_0_Subprocess';\n    subprocessNode.style.fill = 'transparent';\n    subprocessNode.cornerRadius = 10;\n    var size = this.getSize(node, subprocessNode);\n    subprocessNode.width = size.width;\n    subprocessNode.height = size.height;\n    subProcessShapes.children = [subprocessNode];\n\n    if (shape.subProcess.type === 'Transaction') {\n      this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n    }\n\n    var iconSpace = 4;\n    var subChildSpace = 12;\n    var childSpace = subChildCount * subChildSpace;\n    var area = size.width / 2;\n\n    if (subChildCount === 1) {\n      x = area - subChildSpace * 0.5;\n    } else {\n      x = area - childSpace / 2 - (subChildCount - 1) * iconSpace / 2;\n    } //set style\n\n\n    this.setStyle(subprocessNode, node);\n\n    if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n      subProcessShapes.shadow = node.shadow;\n    }\n\n    var collapsedShape = new PathElement();\n    collapsedShape.id = node.id + '_0_collapsed';\n    collapsedShape.width = 12;\n    collapsedShape.height = 12;\n    collapsedShape.style.fill = 'black';\n    collapsedShape.style.strokeColor = node.style.strokeColor;\n    collapsedShape.margin.bottom = 5;\n    collapsedShape.horizontalAlignment = 'Left';\n    collapsedShape.verticalAlignment = 'Bottom';\n    collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n    collapsedShape.relativeMode = 'Point';\n    collapsedShape.data = getBpmnShapePathData('collapsedShape');\n    collapsedShape.margin.left = x;\n\n    if (subProcess.collapsed === true && !subProcess.processes) {\n      collapsedShape.visible = true;\n    } else {\n      collapsedShape.visible = false;\n    }\n\n    if (collapsedShape.visible === true) {\n      x += 12 + 6;\n    }\n\n    subProcessShapes.children.push(collapsedShape);\n\n    if (subProcess.type === 'Event') {\n      subprocessNode.style.strokeWidth = 1;\n      subprocessNode.style.strokeDashArray = '2 2';\n      events = subProcess.events;\n\n      for (var i = 0; i < events.length; i++) {\n        event = events[i];\n        this.getBPMNSubEvent(event, node, subProcessShapes);\n      }\n    } // set loop for subprocess\n\n\n    subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n\n    if (subChildCount === 1) {\n      x = area + 8;\n    }\n\n    subProcessLoopShapes.margin.left = x;\n\n    if (subProcessLoopShapes.visible === true) {\n      x += subChildSpace + iconSpace;\n    }\n\n    subProcessShapes.children.push(subProcessLoopShapes); // set boundary for subprocess\n\n    subprocessNode.id = node.id + '_boundary';\n\n    if (subProcess.boundary === 'Default') {\n      subprocessNode.style.strokeWidth = 1;\n      subprocessNode.style.strokeDashArray = '1 0';\n    }\n\n    if (subProcess.boundary === 'Call') {\n      subprocessNode.style.strokeWidth = 4;\n      subprocessNode.style.strokeDashArray = '1 0';\n    }\n\n    if (subProcess.boundary === 'Event') {\n      subprocessNode.style.strokeWidth = 1;\n      subprocessNode.style.strokeDashArray = '2 2';\n    } //set adhoc for subprocess\n\n\n    subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n\n    if (subChildCount === 1) {\n      x = area + 8;\n    }\n\n    subprocessAdhoc.margin.left = x;\n\n    if (subprocessAdhoc.visible === true) {\n      x += subChildSpace + iconSpace;\n    }\n\n    subProcessShapes.children.push(subprocessAdhoc); //set compensation for subprocess\n\n    var subprocessComp = new PathElement();\n\n    if (subProcess.compensation === true) {\n      subprocessComp.visible = true;\n    } else {\n      subprocessComp.visible = false;\n    }\n\n    subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n\n    if (subChildCount === 1) {\n      x = area + 8;\n    }\n\n    subprocessComp.margin.left = x;\n\n    if (subprocessComp.visible === true) {\n      x += subChildSpace + iconSpace;\n    }\n\n    subProcessShapes.children.push(subprocessComp); //set style for subprocess\n\n    subProcessShapes.style.strokeColor = 'transparent';\n    subProcessShapes.style.strokeWidth = 0;\n    subProcessShapes.style.fill = 'transparent';\n    return subProcessShapes;\n  };\n\n  BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n    container.children = container.children || []; //let eventContainer: Canvas;\n\n    var eventContainer = this.getBPMNEventShape(node, event, true, id);\n    this.getBPMNSubprocessEvent(node, eventContainer, event);\n    eventContainer.id = id || node.id + '_subprocessEvents';\n    eventContainer.width = event.width || 20;\n    eventContainer.height = event.height || 20; // set offset for subevents\n\n    eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n    eventContainer.relativeMode = 'Point'; //set margin for subevents\n\n    eventContainer.margin = event.margin; //set alignment for subevents\n\n    eventContainer.horizontalAlignment = event.horizontalAlignment;\n    eventContainer.verticalAlignment = event.verticalAlignment; // set style for subevent\n\n    eventContainer.style.fill = 'transparent';\n    eventContainer.style.strokeColor = 'transparent';\n    eventContainer.style.strokeWidth = 0;\n    container.children.push(eventContainer);\n  };\n\n  BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n    var shapeWidth = container.children[0].width;\n    var shapeHeight = container.children[0].height;\n    var innerRect = new DiagramElement();\n    innerRect.margin = {\n      left: 3,\n      right: 0,\n      top: 3,\n      bottom: 0\n    };\n    innerRect.id = node.id + '_0_Subprocess_innnerRect';\n    innerRect.cornerRadius = 10;\n    innerRect.width = shapeWidth - 6;\n    innerRect.height = shapeHeight - 6;\n    container.children.push(innerRect);\n    var transactionEvents = new Canvas();\n    transactionEvents.id = node.id + '_transaction_events';\n    transactionEvents.style.gradient = node.style.gradient;\n    var transaction = shape.activity.subProcess.transaction;\n    this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n    this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n    this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n    this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n    this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n    this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n    transactionEvents.float = true;\n    transactionEvents.width = shapeWidth;\n    transactionEvents.height = shapeHeight;\n    transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n    container.children.push(transactionEvents);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n    var shape = node.shape.activity;\n    var loopType;\n    var subprocessLoop = new PathElement();\n    var subprocessLoopData;\n    var subProcess = shape.subProcess; // eslint-disable-next-line prefer-const\n\n    loopType = subProcess.loop; // eslint-disable-next-line prefer-const\n\n    subprocessLoopData = getBpmnLoopShapePathData(loopType);\n\n    if (loopType !== 'None') {\n      subprocessLoop.visible = true;\n    } else {\n      subprocessLoop.visible = false;\n    }\n\n    subprocessLoop.id = node.id + '_loop';\n    subprocessLoop.data = subprocessLoopData;\n    subprocessLoop.style.fill = 'black';\n    subprocessLoop.width = 12;\n    subprocessLoop.height = 12;\n    subprocessLoop.horizontalAlignment = 'Left';\n    subprocessLoop.verticalAlignment = 'Bottom';\n    subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n    subprocessLoop.relativeMode = 'Point';\n    subprocessLoop.margin.bottom = 5;\n    subprocessLoop.style.fill = 'transparent';\n    subprocessLoop.style.strokeColor = node.style.strokeColor;\n    return subprocessLoop;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n    var node = diagram.nameTable[obj.processId];\n\n    if (obj.margin.top + ty >= 0) {\n      diagram.nodePropertyChange(obj, {}, {\n        margin: {\n          top: obj.margin.top + ty\n        }\n      });\n    }\n\n    if (obj.margin.left + tx >= 0) {\n      diagram.nodePropertyChange(obj, {}, {\n        margin: {\n          left: obj.margin.left + tx\n        }\n      });\n    } //const diffX: number = 0;\n    //const diffY: number = 0;\n\n\n    var bound = this.getChildrenBound(node, obj.id, diagram);\n    this.updateSubProcessess(bound, obj, diagram);\n    node.wrapper.measure(new Size(undefined, undefined));\n    node.wrapper.arrange(node.wrapper.desiredSize);\n    diagram.refreshCanvasLayers();\n    diagram.updateSelector();\n    this.updateDocks(obj, diagram);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n    if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn' && (!isBlazor() && source.shape.shape !== 'TextAnnotation' || isBlazor() && source.shape.bpmnShape !== 'TextAnnotation')) {\n      var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n\n      if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n        source.processId = target.id;\n        return;\n      }\n\n      subProcess.processes = subProcess.processes || [];\n\n      if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n        subProcess.processes.push(source.id);\n        var redoElement = cloneObject(source);\n        var sources = diagram.nameTable[source.id].wrapper;\n        var targetWrapper = diagram.nameTable[target.id].wrapper;\n        sources.margin.top = sources.offsetY - sources.actualSize.height / 2 - (target.offsetY - target.actualSize.height / 2);\n        sources.margin.left = sources.offsetX - sources.actualSize.width / 2 - (target.offsetX - target.actualSize.width / 2);\n        sources.margin.top = sources.margin.top < 0 ? 0 : sources.margin.top;\n        sources.margin.left = sources.margin.left < 0 ? 0 : sources.margin.left;\n        diagram.nameTable[source.id].processId = target.id;\n        targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n        var bound = this.getChildrenBound(target, source.id, diagram);\n        this.updateSubProcessess(bound, source, diagram);\n        targetWrapper.measure(new Size(undefined, undefined));\n        targetWrapper.arrange(targetWrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        var edges = [];\n        edges = edges.concat(source.outEdges, source.inEdges);\n\n        for (var i = edges.length - 1; i >= 0; i--) {\n          if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n            diagram.remove(diagram.nameTable[edges[i]]);\n          }\n        }\n\n        var obj = cloneObject(source);\n        var entry = {\n          type: 'PositionChanged',\n          undoObject: {\n            nodes: [redoElement]\n          },\n          redoObject: {\n            nodes: [obj]\n          },\n          category: 'Internal'\n        };\n        diagram.addHistoryEntry(entry);\n\n        if (diagram.mode === 'SVG') {\n          if (source.zIndex < target.zIndex) {\n            diagram.updateProcesses(source);\n            this.updateSubprocessNodeIndex(source, diagram, target);\n          }\n        }\n\n        this.updateDocks(source, diagram);\n      }\n    }\n  };\n\n  BpmnDiagrams.prototype.updateIndex = function (diagram, source) {\n    //let processNode: Node;\n    var processNode = source;\n    var nodeindex = diagram.getIndex(processNode, processNode.id);\n    diagram.nodes.splice(Number(nodeindex), 1);\n    processNode.zIndex = diagram.nodes[diagram.nodes.length - 1].zIndex + 1;\n    diagram.nodes.push(processNode);\n  };\n\n  BpmnDiagrams.prototype.updateSubprocessNodeIndex = function (source, diagram, target) {\n    if (source.shape.activity.subProcess.processes && source.shape.activity.subProcess.processes.length > 0) {\n      for (var i = 0; i < source.shape.activity.subProcess.processes.length; i++) {\n        this.updateIndex(diagram, source);\n        var processes = source.shape.activity.subProcess.processes[i];\n\n        if (diagram.nameTable[processes].shape.activity.subProcess.processes.length > 0) {\n          this.updateSubprocessNodeIndex(diagram.nameTable[processes], diagram, target);\n        } else {\n          var node = diagram.nameTable[source.shape.activity.subProcess.processes[i]];\n          this.updateIndex(diagram, node);\n        }\n      }\n    } else {\n      this.updateIndex(diagram, source);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n    if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes && !obj.shape.activity.subProcess.collapsed) {\n      var processTable = obj.shape.activity.subProcess.processes;\n\n      for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n        var i = processTable_1[_i];\n        var actualObject = diagram.nameTable[i];\n\n        if (actualObject) {\n          diagram.updateConnectorEdges(actualObject);\n          actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n          actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n\n          if (actualObject.shape.activity.subProcess.processes && actualObject.shape.activity.subProcess.processes.length) {\n            this.updateDocks(actualObject, diagram);\n          }\n        }\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n    var element = diagram.nameTable[currentObj.processId];\n\n    if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes && currentObj.shape.activity.subProcess.processes.length > 0) {\n      var processes = currentObj.shape.activity.subProcess.processes;\n\n      for (var j = processes.length - 1; j >= 0; j--) {\n        diagram.remove(diagram.nameTable[processes[j]]);\n      }\n    }\n\n    if (element) {\n      diagram.removeDependentConnector(currentObj);\n      var processes = element.shape.activity.subProcess.processes;\n      this.removeChildFromBPMN(element.wrapper, currentObj.id);\n      var processIndex = processes.indexOf(currentObj.id);\n      processes.splice(processIndex, 1);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n    for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n      var i = _a[_i];\n\n      if (i.id === name) {\n        wrapper.children.splice(wrapper.children.indexOf(i), 1);\n      } else if (i.children) {\n        this.removeChildFromBPMN(i, name);\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n    var node = diagram.nameTable[id];\n\n    if (node) {\n      var parent_1 = diagram.nameTable[node.processId];\n\n      if (parent_1 && parent_1.shape.type === 'Bpmn') {\n        var processes = parent_1.shape.activity.subProcess.processes;\n        diagram.removeDependentConnector(node);\n        this.removeChildFromBPMN(parent_1.wrapper, id);\n        var processIndex = processes.indexOf(id);\n        processes.splice(processIndex, 1);\n        node.processId = '';\n        diagram.refreshDiagramLayer();\n        diagram.updateSelector();\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n    //let id: string;\n    process.id = process.id || randomId();\n    var id = process.id;\n    var node = diagram.nameTable[id];\n\n    if (!node) {\n      diagram.add(process);\n    }\n\n    process.processId = parentId;\n    var parentNode = diagram.nameTable[parentId];\n    var subProcess = parentNode.shape.activity.subProcess;\n\n    if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' && subProcess.processes) {\n      node.processId = parentId;\n      var processes = parentNode.shape.activity.subProcess.processes;\n\n      if (processes.indexOf(id) < 0) {\n        processes.push(id);\n      }\n\n      parentNode.wrapper.children.push(node.wrapper);\n      parentNode.wrapper.measure(new Size());\n      parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n      diagram.bpmnModule.updateDocks(parentNode, diagram);\n      diagram.refreshDiagramLayer();\n\n      if (diagram.mode === 'SVG' && node.shape && node.shape.activity && !node.shape.activity.subProcess.processes) {\n        var child = getDiagramElement(parentId + '_groupElement');\n        child.appendChild(getDiagramElement(process.id + '_groupElement'));\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n    var processes = node.shape.activity.subProcess.processes;\n    var bound;\n\n    if (processes && processes.length) {\n      for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n        var i = processes_1[_i];\n\n        if (excludeChild !== i) {\n          if (!bound) {\n            bound = diagram.nameTable[i].wrapper.bounds;\n          } else {\n            bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n          }\n        }\n      }\n    }\n\n    return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n    var diffX;\n    var diffY;\n    var node = diagram.nameTable[obj.processId];\n    var right;\n    var bottom;\n    var pivot = {\n      x: 0.5,\n      y: 0.5\n    };\n\n    if (node.wrapper.bounds.left + obj.margin.left + obj.width > node.wrapper.bounds.right) {\n      right = true;\n    }\n\n    if (node.wrapper.bounds.top + obj.margin.top + obj.height > node.wrapper.bounds.bottom) {\n      bottom = true;\n    }\n\n    if (right) {\n      pivot.x = 0;\n    }\n\n    if (bottom) {\n      pivot.y = 0;\n    }\n\n    var actualSize = node.wrapper.actualSize;\n\n    if (right) {\n      diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n    }\n\n    if (bottom) {\n      diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n    }\n\n    if (diffX > 0 || diffY > 0) {\n      diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n    compensationNode.id = node.id + '_0_compensation';\n    compensationNode.width = 12;\n    compensationNode.height = 12;\n    compensationNode.margin.bottom = 5;\n    compensationNode.style.fill = 'transparent';\n    compensationNode.style.strokeColor = node.style.strokeColor;\n    compensationNode.horizontalAlignment = 'Left';\n    compensationNode.verticalAlignment = 'Bottom';\n    compensationNode.relativeMode = 'Object';\n    compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' + ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' + ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' + ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' + ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' + ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n    return compensationNode;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n    var eventshape = new Canvas();\n    var content;\n    var shape = node.shape.activity;\n    var task = shape.activity;\n    var subProcess = shape.subProcess;\n    var activityType = shape.activity;\n\n    if (task === 'Task') {\n      content = this.getBPMNTaskShape(node);\n    }\n\n    if (task === 'SubProcess' && subProcess) {\n      content = this.getBPMNSubProcessShape(node);\n    }\n\n    content.id = task + node.id;\n    eventshape.children = [content];\n    eventshape.style.fill = 'transparent';\n    eventshape.style.strokeColor = 'transparent';\n    eventshape.style.strokeWidth = 0;\n    return eventshape;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n    var annotations;\n    var ports;\n\n    if (events.annotations.length !== 0) {\n      for (var i = 0; i < events.annotations.length; i++) {\n        var annot = events.annotations[i];\n        annotations = node.initAnnotationWrapper(annot);\n        annotations.width = events.width;\n        annotations.height = events.height;\n        subProcessEventsShapes.children.push(annotations);\n      }\n    }\n\n    if (events.ports.length !== 0) {\n      for (var i = 0; i < events.ports.length; i++) {\n        var port = events.ports[i];\n        ports = node.initPortWrapper(port);\n        subProcessEventsShapes.children.push(ports);\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n    adhocNode.id = node.id + '_0_adhoc';\n    adhocNode.width = 12;\n    adhocNode.height = 8;\n    adhocNode.style.fill = 'black';\n    adhocNode.style.strokeColor = node.style.strokeColor;\n    adhocNode.margin.bottom = 5;\n    adhocNode.horizontalAlignment = 'Left';\n    adhocNode.verticalAlignment = 'Bottom';\n    adhocNode.relativeMode = 'Object';\n    adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' + 's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' + 'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n\n    if (subProcess && subProcess.adhoc === true) {\n      adhocNode.visible = true;\n    } else {\n      adhocNode.visible = false;\n    }\n\n    return adhocNode;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n    annotation.id = annotation.id || randomId();\n    annotation.nodeId = node.id;\n    var annotationContainer = new Canvas();\n    var annotationPath = new PathElement();\n    var textElement = new TextElement();\n    var margin = 10;\n    annotationPath.id = node.id + '_' + annotation.id + '_path';\n    annotationPath.width = annotation.width;\n    annotationPath.height = annotation.height;\n    annotationPath.relativeMode = 'Object';\n    textElement.id = node.id + '_' + annotation.id + '_text';\n    textElement.content = annotation.text;\n    var style = node.style;\n    textElement.style = {\n      fontSize: style.fontSize,\n      italic: style.italic,\n      gradient: null,\n      opacity: style.opacity,\n      bold: style.bold,\n      textWrapping: style.textWrapping,\n      color: style.color,\n      fill: 'white',\n      fontFamily: style.fontFamily,\n      whiteSpace: style.whiteSpace,\n      textOverflow: 'Wrap',\n      strokeColor: 'none',\n      strokeWidth: 0,\n      strokeDashArray: style.strokeDashArray,\n      textAlign: style.textAlign,\n      textDecoration: style.textDecoration\n    };\n    textElement.horizontalAlignment = 'Center';\n    textElement.verticalAlignment = 'Center';\n    textElement.relativeMode = 'Object';\n    textElement.margin = {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    };\n    annotationContainer.offsetX = node.offsetX + annotation.length * Math.cos(annotation.angle * (Math.PI / 180));\n    annotationContainer.offsetY = node.offsetY + annotation.length * Math.sin(annotation.angle * (Math.PI / 180));\n    annotationContainer.float = true;\n    annotationContainer.transform = Transform.Self;\n    annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n    annotationContainer.style.strokeColor = 'transparent';\n    annotationContainer.margin = {\n      left: margin,\n      right: margin,\n      top: margin,\n      bottom: margin\n    };\n    annotationContainer.relativeMode = 'Object';\n    annotationContainer.rotateAngle = 0;\n    annotationContainer.children = [annotationPath, textElement];\n    var annotationNode = new Node(node.shape, 'annotations', {\n      id: annotationContainer.id,\n      shape: {\n        type: 'Bpmn',\n        shape: 'TextAnnotation'\n      }\n    }, true);\n    annotationNode.ports = [{\n      id: annotationPath.id + '_port',\n      shape: 'Square',\n      offset: {\n        x: 0,\n        y: 0.5\n      }\n    }];\n    annotationNode.offsetX = annotationContainer.offsetX;\n    annotationNode.offsetY = annotationContainer.offsetY;\n    annotationNode.text = annotation.text;\n    annotationNode.angle = annotation.angle;\n    annotationNode.length = annotation.length;\n    annotationNode.width = annotation.width;\n    annotationNode.height = annotation.height;\n    annotationNode.wrapper = annotationContainer;\n    annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n    var bounds = new Rect(0, 0, 0, 0);\n    var width = node.width || node.minWidth || 0;\n    var height = node.height || node.minHeight || 0;\n\n    if (width !== undefined && height !== undefined) {\n      bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n    }\n\n    this.setAnnotationPath(bounds, annotationContainer, {\n      x: annotationNode.offsetX,\n      y: annotationNode.offsetY\n    }, annotationNode, annotation.length, annotation.angle);\n    var connector = {\n      id: node.id + '_' + annotation.id + '_connector',\n      constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n      sourceID: node.id,\n      targetID: annotationContainer.id,\n      targetDecorator: {\n        shape: 'None'\n      }\n    };\n    var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n    annotationConnector.targetPortID = annotationNode.ports[0].id;\n    annotationConnector.init(diagram);\n    annotationConnector.wrapper.float = false;\n    annotationConnector.wrapper.transform = Transform.Self;\n    content.children.push(annotationConnector.wrapper);\n    annotationConnector.zIndex = 10000;\n    var entry = this.annotationObjects[node.id];\n\n    if (!entry) {\n      entry = {};\n    }\n\n    if (!entry[annotation.id]) {\n      entry[annotation.id] = {};\n    }\n\n    var nodeKey = 'node';\n    var connKey = 'connector';\n    entry[annotation.id][nodeKey] = annotationNode;\n    entry[annotation.id][connKey] = annotationConnector;\n    this.annotationObjects[node.id] = entry;\n    diagram.initObject(annotationNode, undefined, false);\n    annotationNode.zIndex = 10000;\n    return annotationContainer;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n    annotation.id = annotation.id || randomId();\n    var annotationsContainer = new Canvas();\n    var annotationPath = new PathElement();\n    var textObject = new TextElement();\n    var margin = 10;\n    annotationPath.id = '_' + annotation.id + '_path';\n    annotationPath.width = annotation.width;\n    annotationPath.height = annotation.height;\n    annotationPath.relativeMode = 'Object';\n    textObject.id = annotation.id + '_text';\n    textObject.content = annotation.shape.annotation.text;\n    var textStyle = annotation.style;\n    textObject.style = {\n      fontSize: textStyle.fontSize,\n      italic: textStyle.italic,\n      gradient: null,\n      opacity: textStyle.opacity,\n      bold: textStyle.bold,\n      textWrapping: textStyle.textWrapping,\n      color: textStyle.color,\n      fill: 'white',\n      fontFamily: textStyle.fontFamily,\n      whiteSpace: textStyle.whiteSpace,\n      textOverflow: 'Wrap',\n      strokeColor: 'none',\n      strokeWidth: 0,\n      strokeDashArray: textStyle.strokeDashArray,\n      textAlign: textStyle.textAlign,\n      textDecoration: textStyle.textDecoration\n    };\n    textObject.horizontalAlignment = 'Left';\n    textObject.verticalAlignment = 'Center';\n    textObject.relativeMode = 'Object';\n    textObject.margin = {\n      left: 5,\n      right: 5,\n      top: 5,\n      bottom: 5\n    };\n    annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length * Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n    annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length * Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n    annotationsContainer.float = true; //    annotationContainer.transform = Transform.Self;\n\n    annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n    annotationsContainer.style.strokeColor = 'transparent';\n    annotationsContainer.margin = {\n      left: margin,\n      right: margin,\n      top: margin,\n      bottom: margin\n    };\n    annotationsContainer.relativeMode = 'Object';\n    annotationsContainer.rotateAngle = 0;\n    annotationsContainer.children = [annotationPath, textObject];\n    var annotationObject = new Node(annotation.shape, 'annotations', {\n      id: annotationsContainer.id,\n      shape: {\n        type: 'Bpmn',\n        shape: 'TextAnnotation'\n      }\n    }, true);\n    annotationObject.ports = [{\n      id: annotationPath.id + '_port',\n      shape: 'Square',\n      offset: {\n        x: 0,\n        y: 0.5\n      }\n    }];\n    annotationObject.offsetX = annotationsContainer.offsetX;\n    annotationObject.offsetY = annotationsContainer.offsetY;\n\n    if (annotationObject.shape && annotationObject.shape.annotation) {\n      annotationObject.text = annotation.shape.annotation.text;\n      annotationObject.angle = annotation.shape.annotation.angle;\n      annotationObject.length = annotation.shape.annotation.length;\n    }\n\n    annotationObject.width = annotation.width;\n    annotationObject.height = annotation.height;\n    annotationObject.wrapper = annotationsContainer;\n    annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n    var bounds = new Rect(0, 0, 0, 0);\n    var width = annotation.width || 0;\n    var height = annotation.height || 0;\n\n    if (width !== undefined && height !== undefined) {\n      bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n    }\n\n    this.setAnnotationPath(bounds, annotationsContainer, {\n      x: annotationObject.offsetX,\n      y: annotationObject.offsetY\n    }, annotationObject, annotation.length, annotation.angle);\n    return annotationsContainer;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n    if (node && node.shape.type === 'Bpmn') {\n      var shape = isBlazor() ? node.shape.bpmnShape : node.shape.shape;\n\n      if (shape === 'TextAnnotation') {\n        return node.wrapper.children[1];\n      } else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n        var annotationNode = this.annotationObjects[node.id][id].node;\n        return this.getTextAnnotationWrapper(annotationNode, id);\n      }\n    }\n\n    return null;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n    var bpmnShapeContent = node.wrapper.children[0];\n    var shape = node.shape;\n    annotation.nodeId = node.id;\n    var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n    shape.annotations.push(annotationObj);\n    bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n    node.wrapper.measure(new Size());\n    node.wrapper.arrange(node.wrapper.desiredSize);\n    return this.annotationObjects[node.id][annotation.id].connector;\n  };\n\n  BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n    var bpmnShape = obj.shape;\n\n    if (bpmnShape.annotations.length) {\n      for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n        var annotation = bpmnShape.annotations[i];\n        this.removeAnnotationObjects(obj, annotation, diagram);\n      }\n    }\n\n    delete this.annotationObjects[obj.id];\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n    //remove connector path\n    //remove annotation node wrapper\n    //remove from a quad\n    if (node.shape.type === 'Bpmn') {\n      if (!isBlazor() && node.shape.shape === 'TextAnnotation' || isBlazor() && node.shape.bpmnShape === 'TextAnnotation') {\n        var id = node.id.split('_');\n        var annotationId = id[id.length - 1];\n        var nodeId = id[id.length - 3] || id[0];\n        var parentNode = diagram.nameTable[nodeId];\n        var bpmnShape = parentNode.shape;\n\n        for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n          var annotation = _a[_i];\n\n          if (annotation.id === annotationId) {\n            var index = bpmnShape.annotations.indexOf(annotation);\n\n            if (index !== -1) {\n              diagram.removeDependentConnector(node);\n              this.removeAnnotationObjects(parentNode, annotation, diagram);\n              return true;\n            }\n          }\n        }\n      } else if (node.shape.annotations && node.shape.annotations.length) {\n        this.clearAnnotations(node, diagram);\n      }\n    }\n\n    return false;\n  };\n\n  BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n    var bpmnShape = parentNode.shape;\n    var index = bpmnShape.annotations.indexOf(annotation);\n\n    if (index !== -1) {\n      if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n        var entry_1 = {\n          type: 'CollectionChanged',\n          changeType: 'Remove',\n          undoObject: cloneObject(annotation),\n          redoObject: cloneObject(annotation),\n          category: 'Internal'\n        };\n        diagram.addHistoryEntry(entry_1);\n      }\n\n      bpmnShape.annotations.splice(index, 1);\n      var entry = this.annotationObjects[parentNode.id];\n\n      if (entry && entry[annotation.id]) {\n        var annotationNode = entry[annotation.id].node;\n        var annotationConnector = entry[annotation.id].connector;\n        diagram.removeElements(annotationNode);\n        diagram.removeElements(annotationConnector);\n        var nodeContent = parentNode.wrapper.children[0];\n        index = nodeContent.children.indexOf(annotationNode.wrapper);\n        nodeContent.children.splice(index, 1);\n        index = nodeContent.children.indexOf(annotationConnector.wrapper);\n        nodeContent.children.splice(index, 1);\n        diagram.removeFromAQuad(annotationNode);\n        diagram.removeFromAQuad(annotationConnector);\n        delete diagram.nameTable[annotationNode.id];\n        delete diagram.nameTable[annotationConnector.id];\n        delete entry[annotation.id];\n      }\n    }\n  };\n\n  BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n    var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n    var data = '';\n    var pathElement = wrapper.children[0];\n    var portElement = wrapper.children[2];\n    var textElement = wrapper.children[1];\n    pathElement.horizontalAlignment = 'Stretch';\n    pathElement.verticalAlignment = 'Stretch';\n    textElement.margin.left = textElement.margin.right = 5;\n    textElement.margin.top = textElement.margin.bottom = 5;\n    var point;\n    var segment;\n\n    if (rotateAngle === 0) {\n      data = 'M10,20 L0,20 L0,0 L10,0';\n      pathElement.width = 10;\n      pathElement.horizontalAlignment = 'Left';\n      portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n      textElement.margin.top = textElement.margin.bottom = 10;\n      point = parentBounds.middleRight;\n      segment = {\n        x1: parentBounds.right,\n        y1: parentBounds.top,\n        x2: parentBounds.right,\n        y2: parentBounds.bottom\n      };\n    } else if (rotateAngle === 180) {\n      data = 'M0,0 L10,0 L10,20 L0,20';\n      pathElement.width = 10;\n      pathElement.horizontalAlignment = 'Right';\n      portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n      textElement.margin.top = textElement.margin.bottom = 10;\n      point = parentBounds.middleLeft;\n      segment = {\n        x1: parentBounds.left,\n        y1: parentBounds.top,\n        x2: parentBounds.left,\n        y2: parentBounds.bottom\n      };\n    } else if (rotateAngle === 90) {\n      data = 'M20,10 L20,0 L0,0 L0,10';\n      pathElement.height = 10;\n      pathElement.verticalAlignment = 'Top';\n      portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n      textElement.margin.left = textElement.margin.right = 10;\n      point = parentBounds.bottomCenter;\n      segment = {\n        x1: parentBounds.right,\n        y1: parentBounds.bottom,\n        x2: parentBounds.left,\n        y2: parentBounds.bottom\n      };\n    } else {\n      data = 'M0,0 L0,10 L20,10 L20,0';\n      pathElement.height = 10;\n      pathElement.verticalAlignment = 'Bottom';\n      portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n      textElement.margin.left = textElement.margin.right = 10;\n      point = parentBounds.topCenter;\n      segment = {\n        x1: parentBounds.right,\n        y1: parentBounds.top,\n        x2: parentBounds.left,\n        y2: parentBounds.top\n      };\n    }\n\n    var center = parentBounds.center;\n    var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n    point = getIntersectionPoints(segment, [center, endPoint], false, center);\n    pathElement.data = data;\n\n    if (length !== undefined && angle !== undefined) {\n      point = Point.transform(point, angle, length);\n      wrapper.offsetX = node.offsetX = point.x;\n      wrapper.offsetY = node.offsetY = point.y;\n    }\n  };\n  /**   @private  */\n\n\n  BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n    if (this.annotationObjects) {\n      var parentNodeId = activeLabel.parentId;\n      var annotationId = activeLabel.id;\n      var parentNode = diagram.nameTable[parentNodeId];\n\n      if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n        return parentNode;\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n  /** @private */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n    var parentNodeId = activeLabel.parentId;\n    var annotationId = activeLabel.id;\n\n    if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n      for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n        var annotation = _a[_i];\n\n        if (annotation.id === annotationId) {\n          annotation.text = text;\n          var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n          wrapper.content = text;\n          wrapper.visible = true;\n          parentNode.wrapper.measure(new Size());\n          parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n      }\n    }\n  };\n  /**   @private  */\n\n\n  BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n    var annotation = actualObject.shape.annotations;\n    var annotationNode;\n\n    if (annotation && annotation.length > 0) {\n      for (var i = 0; i < annotation.length; i++) {\n        annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n        diagram.updateQuad(annotationNode);\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n    if (actualObject.shape.type === 'Bpmn') {\n      var annotation = actualObject.shape.annotations;\n\n      if (annotation && annotation.length > 0) {\n        for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n          for (var j = 0; j < annotation.length; j++) {\n            var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n            var id = annotationId[annotationId.length - 1];\n\n            if (id === annotation[j].id) {\n              var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n              var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n              var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n              var position = connector.sourcePoint;\n              position = {\n                x: connector.sourcePoint.x + actualObject.offsetX - oldObject.offsetX,\n                y: connector.sourcePoint.y + actualObject.offsetY - oldObject.offsetY\n              };\n              position = Point.transform(position, annotation[j].angle, annotation[j].length);\n              actualObject.wrapper.children[0].children[i].offsetX = annotationNode.offsetX = position.x;\n              actualObject.wrapper.children[0].children[i].offsetY = annotationNode.offsetY = position.y;\n              diagram.updateQuad(annotationNode);\n            }\n          }\n        }\n      }\n    }\n  }; // /** @private */\n  // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n  //     if (obj.targetID) {\n  //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n  //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n  //             return targetNode;\n  //         }\n  //     }\n  //     return obj;\n  // }\n\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n    var count = 0;\n    var shape = node.shape.activity; //let loopType: string;\n\n    var subProcess = shape.subProcess;\n    var loopType = subProcess.loop;\n\n    if (loopType !== undefined && loopType !== 'None') {\n      count++;\n    }\n\n    if (subProcess.compensation !== undefined && subProcess.compensation === true) {\n      count++;\n    }\n\n    if (subProcess.collapsed !== undefined && subProcess.collapsed === true) {\n      count++;\n    }\n\n    if (subProcess.adhoc !== undefined && subProcess.adhoc === true) {\n      count++;\n    }\n\n    return count;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n    var count = 0;\n    var shape = node.shape.activity;\n    var task = shape.task;\n    var loopType;\n\n    if (task.compensation !== undefined && task.compensation === true) {\n      count++;\n    }\n\n    if (task.loop !== undefined && task.loop !== 'None') {\n      count++;\n    }\n\n    return count;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.setStyle = function (child, node) {\n    //set style\n    child.style.fill = node.style.fill;\n    child.style.strokeColor = node.style.strokeColor;\n    child.style.strokeWidth = node.style.strokeWidth;\n    child.style.strokeDashArray = node.style.strokeDashArray;\n    child.style.opacity = node.style.opacity;\n    child.style.gradient = node.style.gradient;\n\n    if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n      child.shadow = node.shadow;\n    }\n  }; //End code conversion region\n  //Update BPMN Shapes on NodePropertyChange\n  //Start region\n\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n    var newShape = changedProp.shape || {};\n    var elementWrapper = actualObject.wrapper.children[0];\n    var actualShape = actualObject.shape.shape || actualObject.shape.bpmnShape;\n    var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n\n    if ((isBlazor() && newShape.bpmnShape === 'Gateway' || newShape.shape === 'Gateway') && newShape.gateway) {\n      actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n    } else if ((isBlazor() && newShape.bpmnShape === 'DataObject' || newShape.shape === 'DataObject') && newShape.dataObject) {\n      actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n    } else if ((isBlazor() && newShape.bpmnShape === 'Activity' || newShape.shape === 'Activity') && newShape.activity) {\n      actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n    } else if ((isBlazor() && newShape.bpmnShape === 'Event' || actualObject.shape.bpmnShape === 'Event' || newShape.shape === 'Event') && newShape.event) {\n      var shapeEvent = newShape.event;\n      actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n    } else if (isBlazor() && newShape.bpmnShape === 'Message' || newShape.shape === 'Message' || isBlazor() && newShape.bpmnShape === 'DataSource' || newShape.shape === 'DataSource') {\n      actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject); //}\n      // else if (newShape.shape === 'Group') {\n      //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n    } else if (newShape.gateway !== undefined || actualShape === 'Gateway' && sizeChanged) {\n      this.updateBPMNGateway(actualObject, changedProp);\n    } else if (newShape.dataObject !== undefined || actualShape === 'DataObject' && sizeChanged) {\n      this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n    } else if (newShape.activity !== undefined || actualShape === 'Activity' && sizeChanged) {\n      this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n    } else if (newShape.event !== undefined || actualShape === 'Event' && sizeChanged) {\n      this.updateBPMNEvent(actualObject, changedProp, oldObject);\n    }\n\n    actualObject.wrapper.children[0].id = actualObject.wrapper.children[0].id || elementWrapper.id;\n\n    if (changedProp.style) {\n      updateStyle(changedProp.style, elementWrapper instanceof Container ? !isBlazor() && actualObject.shape.shape === 'Activity' || isBlazor() && actualObject.shape.bpmnShape === 'Activity' ? elementWrapper.children[0].children[0] : elementWrapper.children[0] : elementWrapper);\n\n      if (changedProp.style && changedProp.style.strokeColor) {\n        if (elementWrapper.children.length > 0) {\n          if ((!isBlazor() && actualObject.shape.shape === 'Activity' || isBlazor() && actualObject.shape.bpmnShape === 'Activity') && actualObject.shape.activity.activity === 'SubProcess') {\n            var child = elementWrapper.children[0];\n            this.updateBPMNStyle(child, changedProp.style.strokeColor);\n          } else if (!isBlazor() && actualObject.shape.shape === 'Gateway' || isBlazor() && actualObject.shape.bpmnShape === 'Gateway' || !isBlazor() && actualObject.shape.shape === 'Event' || isBlazor() && actualObject.shape.bpmnShape === 'Event') {\n            this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n          }\n        }\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n    for (var i = 0; i < elementWrapper.children.length; i++) {\n      var child = elementWrapper.children[i];\n      updateStyle({\n        strokeColor: changedProp\n      }, child);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n    var bpmnShape = node.shape;\n    var elementWrapper = node.wrapper.children[0];\n\n    if (bpmnShape) {\n      updateStyle(node.style, elementWrapper.children[0]);\n      var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n      elementWrapper.children[1].data = bpmnshapeGatewaydata;\n    }\n\n    if (changedProp.width !== undefined || changedProp.height !== undefined) {\n      this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n    var bpmnShape = newObject.shape;\n    var elementWrapper = node.wrapper.children[0];\n\n    if (bpmnShape) {\n      var elementWrapperChild1 = elementWrapper.children[1];\n      var elementWrapperChild2 = elementWrapper.children[2];\n\n      if (newObject.style !== undefined) {\n        updateStyle(newObject.style, elementWrapper.children[0]);\n        elementWrapperChild1.style.opacity = node.style.opacity;\n        elementWrapperChild2.style.opacity = node.style.opacity;\n      }\n\n      if (bpmnShape.dataObject) {\n        switch (bpmnShape.dataObject.type) {\n          case 'None':\n            elementWrapperChild1.visible = false;\n            break;\n\n          case 'Input':\n            elementWrapperChild1.style.fill = 'white';\n            break;\n\n          case 'Output':\n            elementWrapperChild1.style.fill = 'black';\n            break;\n        }\n\n        if (oldObject.shape.dataObject.type === 'None') {\n          elementWrapperChild1.visible = true;\n        }\n\n        if (newObject.shape.dataObject.collection !== undefined) {\n          elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n        }\n      }\n    }\n\n    if (newObject.width !== undefined || newObject.height !== undefined) {\n      this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n    switch (event) {\n      case 'Start':\n        child1.visible = false;\n        child0.style.strokeDashArray = '';\n        child2.style.fill = 'white';\n        child2.style.strokeColor = 'black';\n        child0.style.fill = 'white';\n        break;\n\n      case 'NonInterruptingStart':\n        child0.style.strokeDashArray = '2 3';\n        child2.style.fill = 'white';\n        child0.style.fill = 'white';\n        child2.style.strokeColor = 'black';\n        child1.visible = false;\n        break;\n\n      case 'Intermediate':\n        child0.style.strokeDashArray = '';\n        child0.style.fill = 'white';\n        child1.style.strokeDashArray = '';\n        child0.style.gradient = null;\n        child2.style.fill = 'white';\n        child2.style.strokeColor = 'black';\n        this.updateEventVisibility(oldObject, child1);\n        break;\n\n      case 'NonInterruptingIntermediate':\n        child0.style.fill = 'white';\n        child0.style.gradient = null;\n        child2.style.fill = 'white';\n        child2.style.strokeColor = 'black';\n        child0.style.strokeDashArray = '2 3';\n        child1.style.strokeDashArray = '2 3';\n        this.updateEventVisibility(oldObject, child1);\n        break;\n\n      case 'ThrowingIntermediate':\n      case 'End':\n        child0.style.fill = event !== 'End' ? 'white' : 'black';\n        child0.style.strokeDashArray = '';\n        child1.style.strokeDashArray = '';\n        child0.style.gradient = null;\n        child2.style.fill = 'black';\n        this.updateEventVisibility(oldObject, child1);\n        child2.style.strokeColor = node.style.fill;\n        break;\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n    if (oldObject.shape.activity && oldObject.shape.activity.subProcess && oldObject.shape.activity.subProcess.events && oldObject.shape.activity.subProcess.events[0] !== undefined && oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n      if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' || oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n        child1.visible = true;\n      }\n    } else if (oldObject.shape.event !== undefined) {\n      if (oldObject.shape.event.event === 'NonInterruptingStart' || oldObject.shape.event.event === 'Start') {\n        child1.visible = true;\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n    var bpmnShape = newObject.shape;\n    var trigger;\n    var elementWrapper = node.wrapper.children[0];\n\n    if (bpmnShape) {\n      var elementWrapperChild0 = elementWrapper.children[0];\n      var elementWrapperChild1 = elementWrapper.children[1];\n      var elementWrapperChild2 = elementWrapper.children[2]; //let event: string;\n\n      if (newObject.style !== undefined) {\n        updateStyle(node.style, elementWrapper.children[0]);\n\n        if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n          elementWrapperChild1.style.opacity = node.style.opacity;\n          elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n        }\n      }\n\n      var event_1 = bpmnShape.event.event;\n      trigger = bpmnShape.event.trigger;\n\n      if (event_1 !== undefined) {\n        this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n      }\n\n      if (trigger !== undefined) {\n        this.updateBPMNEventTrigger(node, newObject);\n      }\n    }\n\n    if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n      this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n    var bpmnShape = node.shape;\n    var elementWrapper = node.wrapper.children[0].children[2];\n    elementWrapper.canMeasurePath = true;\n\n    if (newObject.style && (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n      updateStyle(node.style, elementWrapper);\n    }\n\n    var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n    elementWrapper.data = bpmnshapeTriggerdata;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n    var bpmnShape = newObject.shape;\n    var elementWrapper = node.wrapper.children[0];\n    var size = this.getSize(node, elementWrapper.children[0].children[0]);\n\n    if (bpmnShape) {\n      var oldProp = oldObject.shape.activity.activity;\n      var actualObjectProp = node.shape.activity.activity;\n\n      if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n        diagram.removeElements(node);\n        node.wrapper.children[0] = this.getBPMNActivityShape(node);\n      } else {\n        if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n          this.updateBPMNActivityTask(node, newObject);\n          var subChildCount = this.getTaskChildCount(node);\n          var x = void 0;\n          var childSpace = subChildCount * 12;\n          var area = size.width / 2 - childSpace;\n\n          if (subChildCount === 1) {\n            x = area + 8;\n          } else {\n            x = area + (subChildCount - 1) * 8;\n          }\n\n          if (bpmnShape.activity.task.loop !== undefined) {\n            this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n          }\n        }\n\n        if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n          this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n        }\n      }\n\n      this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n    }\n\n    if (newObject.width !== undefined || newObject.height !== undefined) {\n      this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n    var bpmnShape = newObject.shape;\n    var elementWrapper = node.wrapper.children[0].children[0];\n    var task = bpmnShape.activity.task;\n\n    for (var i = 0; i < elementWrapper.children.length; i++) {\n      if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n        elementWrapper.children.splice(i, 1);\n        var element = document.getElementById(node.id + '_1_taskTypeService');\n        element.parentNode.removeChild(element);\n      }\n    }\n\n    if (task.type === 'Receive' || task.type === 'Send') {\n      elementWrapper.children[1].height = 14;\n    } else {\n      elementWrapper.children[1].height = 20;\n    }\n\n    if (task.type !== undefined) {\n      var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n      elementWrapper.children[1].data = bpmnshapeTaskdata;\n\n      if (task.type === 'Service') {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n          if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n            elementWrapper.children.splice(i, 1);\n            var element = document.getElementById(node.id + '_1_tasktType');\n            element.parentNode.removeChild(element);\n          }\n        }\n\n        var taskTypeNode = new PathElement();\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNode.data = bpmnshapeTaskdata;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskTypeNode.width = 20;\n        taskTypeNode.height = 20;\n        elementWrapper.children.splice(1, 0, taskTypeNode);\n        var taskTypeNodeService = new PathElement();\n        taskTypeNodeService.id = node.id + '_1_taskTypeService';\n        taskTypeNodeService.data = bpmnshapeTaskdata;\n        taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n        taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n        taskTypeNodeService.style.fill = 'white';\n        taskTypeNodeService.style.opacity = node.style.opacity;\n        elementWrapper.children.splice(2, 0, taskTypeNodeService);\n      }\n    }\n\n    if (bpmnShape.activity.task.call !== undefined) {\n      if (bpmnShape.activity.task.call !== false) {\n        elementWrapper.children[0].style.strokeWidth = 4;\n      } else {\n        elementWrapper.children[0].style.strokeWidth = 1;\n      }\n    }\n\n    if (bpmnShape.activity.task.compensation !== undefined) {\n      if (bpmnShape.activity.task.compensation === true) {\n        elementWrapper.children[3].visible = true;\n      } else {\n        elementWrapper.children[3].visible = false;\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n    var bpmnShape = newObject.shape;\n    var elementWrapper = node.wrapper.children[0].children[0];\n    var activity = bpmnShape.activity;\n    var loop;\n    var index = 0;\n    var bpmnshapeLoopdata;\n\n    if (activity.subProcess !== undefined) {\n      var subProcess = activity.subProcess;\n      index = activity.subProcess.type === 'Transaction' ? 2 : 0;\n      loop = subProcess.loop;\n      bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n      elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n      elementWrapper.children[2 + index].visible = loop === 'None' ? false : true;\n    } else if (activity.task !== undefined && activity.task.loop !== undefined) {\n      bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n      elementWrapper.children[2].data = bpmnshapeLoopdata;\n      elementWrapper.children[2].visible = activity.task.loop === 'None' ? false : true;\n    }\n\n    this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n    if (subChildCount === 1) {\n      for (var i = start; i < elementWrapper.children.length; i++) {\n        if (i !== 2 && elementWrapper.children[i].visible === true) {\n          elementWrapper.children[i].margin.left = x;\n          x = area + 8;\n        }\n      }\n    } else {\n      x = area + (subChildCount - 1) * 8;\n\n      for (var i = start; i < elementWrapper.children.length; i++) {\n        if (i !== 2 && elementWrapper.children[i].visible === true) {\n          elementWrapper.children[i].margin.left = x;\n          x += 12 + 8;\n        }\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n    var bpmnShape = newObject.shape;\n    var elementWrapper = node.wrapper.children[0];\n    var size = this.getSize(node, elementWrapper.children[0].children[0]);\n    var subProcess = bpmnShape.activity.subProcess;\n    var subChildCount = this.getSubprocessChildCount(node);\n    var x;\n    var childSpace = subChildCount * 12;\n    var area = size.width / 2 - childSpace;\n\n    if (subChildCount === 1) {\n      x = area + 8;\n    } else {\n      x = area + (subChildCount - 1) * 8;\n    }\n\n    updateStyle(node.style, elementWrapper.children[0].children[0]);\n\n    if (subProcess.events !== undefined) {\n      this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n    }\n\n    if (subProcess.adhoc !== undefined) {\n      this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n    }\n\n    if (subProcess.boundary !== undefined) {\n      this.updateBPMNSubProcessBoundary(node, subProcess);\n    }\n\n    if (subProcess.collapsed !== undefined) {\n      this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n    }\n\n    if (subProcess.compensation !== undefined) {\n      this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n    }\n\n    if (subProcess.loop !== undefined) {\n      this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n    }\n\n    if (subProcess.transaction !== undefined) {\n      this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n    var bpmnShape = newObject.shape;\n    var elementWrapper = node.wrapper.children[0];\n    var nodeContent = elementWrapper.children[0];\n    var index;\n    var j = 0;\n    var elementWrapperChildLen = elementWrapper.children[0].children.length;\n    var subProcess = bpmnShape.activity.subProcess;\n    var events;\n    var start = 2;\n\n    for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var eventIndex = Number(key);\n      var eventWrapper = nodeContent.children[eventIndex + start];\n      var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n      this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n    }\n  };\n\n  BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n    var elementWrapper = node.wrapper.children[0];\n    var bpmnShape = newObject.shape;\n    var child0 = eventWrapper.children[0];\n    var child1 = eventWrapper.children[1];\n    var child2 = eventWrapper.children[2];\n    var eventType;\n    var trigger;\n\n    if (newObject.style) {\n      if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n        elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n        elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n      }\n    }\n\n    if (bpmnShape.activity.subProcess !== undefined) {\n      eventType = newEvent.event;\n      trigger = newEvent.trigger;\n    }\n\n    if (eventType !== undefined) {\n      this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n    }\n\n    if (trigger !== undefined) {\n      if (newObject.style) {\n        updateStyle(newObject.style, elementWrapper.children[0]);\n      }\n\n      var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n      eventWrapper.children[2].data = bpmnshapeTriggerdata;\n    }\n\n    if (newEvent.height !== undefined || newEvent.width !== undefined) {\n      this.getEventSize(newEvent, eventWrapper);\n    }\n\n    if (newEvent.id !== undefined) {\n      eventWrapper.id = newEvent.id;\n    }\n\n    if (newEvent.margin !== undefined) {\n      eventWrapper.margin = newEvent.margin;\n    }\n\n    if (newEvent.horizontalAlignment !== undefined) {\n      eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n    }\n\n    if (newEvent.verticalAlignment !== undefined) {\n      eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n    }\n\n    if (newEvent.offset !== undefined) {\n      eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n      eventWrapper.relativeMode = 'Point';\n    }\n\n    if (newEvent.annotations !== undefined) {\n      var annotations = void 0;\n      var annotation = elementWrapper.children[0].children[2];\n\n      if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n        annotations = eventWrapper.children[3];\n        diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n      }\n    }\n\n    if (newEvent.ports !== undefined) {\n      var ports = void 0;\n      var port = elementWrapper.children[0].children[2];\n\n      if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n        ports = eventWrapper.children[4];\n        diagram.updatePort(newEvent.ports[0], ports, port);\n      }\n    }\n\n    if (newEvent.visible !== undefined) {\n      this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n    }\n  };\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n    var transaction = newObject.shape.activity.subProcess.transaction;\n    var eventContainer = node.wrapper.children[0].children[0].children[2];\n    var actualEvent;\n\n    if (transaction.success !== undefined) {\n      actualEvent = node.shape.activity.subProcess.transaction.success;\n      this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n    }\n\n    if (transaction.cancel !== undefined) {\n      actualEvent = node.shape.activity.subProcess.transaction.cancel;\n      this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n    }\n\n    if (transaction.failure !== undefined) {\n      actualEvent = node.shape.activity.subProcess.transaction.failure;\n      this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n    }\n\n    for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n      var edge = _a[_i];\n      var connector = diagram.nameTable[edge];\n\n      switch (connector.sourcePortID) {\n        case 'success':\n          if (transaction.success && transaction.success.visible !== undefined) {\n            diagram.connectorPropertyChange(connector, {}, {\n              sourcePortID: 'success'\n            });\n          }\n\n          break;\n\n        case 'cancel':\n          if (transaction.cancel && transaction.cancel.visible !== undefined) {\n            diagram.connectorPropertyChange(connector, {}, {\n              sourcePortID: 'cancel'\n            });\n          }\n\n          break;\n\n        case 'failure':\n          if (transaction.failure && transaction.failure.visible !== undefined) {\n            diagram.connectorPropertyChange(connector, {}, {\n              sourcePortID: 'failure'\n            });\n          }\n\n          break;\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n    if (events.height !== undefined) {\n      wrapperChild.height = events.height;\n      wrapperChild.children[0].height = events.height;\n      wrapperChild.children[1].height = events.height * 0.85;\n      wrapperChild.children[2].height = events.height * 0.54;\n    }\n\n    if (events.width !== undefined) {\n      wrapperChild.width = events.width;\n      wrapperChild.children[0].width = events.width;\n      wrapperChild.children[1].width = events.width * 0.85;\n      wrapperChild.children[2].width = events.width * 0.54;\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n    var shape = node.shape;\n    var elementWrapper = node.wrapper.children[0].children[0];\n    var index = node.shape.activity.subProcess.type === 'Transaction' ? 2 : 0;\n\n    if (subProcess.adhoc === false) {\n      elementWrapper.children[3 + index].visible = false;\n    } else {\n      elementWrapper.children[3 + index].visible = true;\n    }\n\n    this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n    var shape = node.shape;\n    var elementWrapper = node.wrapper.children[0].children[0].children[0];\n\n    if (subProcess.boundary === 'Default') {\n      elementWrapper.style.strokeWidth = 1;\n      elementWrapper.style.strokeDashArray = '1 0';\n    }\n\n    if (subProcess.boundary === 'Call') {\n      elementWrapper.style.strokeWidth = 4;\n      elementWrapper.style.strokeDashArray = '1 0';\n    }\n\n    if (subProcess.boundary === 'Event') {\n      elementWrapper.style.strokeWidth = 1;\n      elementWrapper.style.strokeDashArray = '2 2';\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n    if (node.shape.activity.subProcess.processes && node.shape.activity.subProcess.processes.length > 0) {\n      var processes = node.shape.activity.subProcess.processes;\n\n      for (var j = processes.length - 1; j >= 0; j--) {\n        var currentNode = diagram.nameTable[processes[j]];\n        currentNode.visible = visible;\n        diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n\n        if (visible) {\n          if (!isBlazor() && currentNode.shape.shape === 'Event' || isBlazor() && currentNode.shape.bpmnShape === 'Event') {\n            this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n          }\n\n          if (currentNode.shape.activity.activity === 'SubProcess') {\n            this.setSubProcessVisibility(currentNode);\n          }\n        }\n\n        var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n\n        for (var i = connectors.length - 1; i >= 0; i--) {\n          var connector = diagram.nameTable[connectors[i]];\n          connector.visible = visible;\n          diagram.updateElementVisibility(connector.wrapper, connector, visible);\n        }\n      }\n    }\n\n    if (visible) {\n      if (!isBlazor() && node.shape.shape === 'Event' || isBlazor() && node.shape.bpmnShape === 'Event') {\n        this.setEventVisibility(node, node.wrapper.children[0].children);\n      }\n\n      if (node.shape.activity.activity === 'SubProcess') {\n        this.setSubProcessVisibility(node);\n      }\n\n      if (node.shape.activity.activity === 'Task' && (!isBlazor() && node.shape.shape === 'Activity' || isBlazor() && node.shape.bpmnShape === 'Activity') && node.shape.activity.subProcess.loop === 'None') {\n        node.wrapper.children[0].children[0].children[3].visible = false;\n      }\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n    var eventLength = node.shape.activity.subProcess.events.length;\n    var elementWrapper = node.wrapper.children[0].children[0];\n    var index = node.shape.activity.subProcess.type === 'Transaction' ? 3 : 1;\n\n    if (subProcess.collapsed === false) {\n      this.updateElementVisibility(node, true, diagram);\n      elementWrapper.children[index + eventLength].visible = false;\n    } else {\n      this.updateElementVisibility(node, false, diagram);\n      elementWrapper.children[index + eventLength].visible = true;\n    }\n\n    this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n    var elementWrapper = node.wrapper.children[0].children[0];\n    var index = node.shape.activity.subProcess.type === 'Transaction' ? 2 : 0;\n\n    if (subProcess.compensation === false) {\n      elementWrapper.children[4 + index].visible = false;\n    } else {\n      elementWrapper.children[4 + index].visible = true;\n    }\n\n    this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n    this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n    var flowType = connection.shape;\n\n    if (flowType.sequence !== undefined) {\n      actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n    }\n\n    if (flowType.association !== undefined) {\n      actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n    }\n\n    if (flowType.message !== undefined) {\n      actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n    }\n\n    return actualObject;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n    if (connection.shape.sequence === 'Normal') {\n      diagram.connectorPropertyChange(actualObject, oldObject, {\n        type: 'Straight',\n        targetDecorator: {\n          shape: 'Arrow',\n          style: {\n            fill: 'black'\n          }\n        }\n      });\n      actualObject.wrapper.children[3].visible = false;\n    }\n\n    if (connection.shape.sequence === 'Default') {\n      diagram.connectorPropertyChange(actualObject, oldObject, {\n        type: 'Straight',\n        targetDecorator: {\n          shape: 'Arrow',\n          style: {\n            fill: 'black'\n          }\n        },\n        sourceDecorator: {\n          shape: 'None'\n        }\n      });\n      var segment = new PathElement();\n      var pathseq = new PathElement();\n      var pathseqData = void 0;\n      segment = actualObject.getSegmentElement(actualObject, segment);\n      var anglePoints = actualObject.intermediatePoints;\n\n      for (var j = 0; j < anglePoints.length - 1; j++) {\n        // eslint-disable-next-line no-global-assign\n        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n        pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n      }\n\n      actualObject.wrapper.children[3].data = pathseqData[0];\n      actualObject.wrapper.children[3].id = actualObject.id + '_' + connection.shape.sequence;\n      actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n      actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n      actualObject.wrapper.children[3].rotateAngle = 45;\n      actualObject.wrapper.children[3].transform = Transform.Self;\n    }\n\n    if (connection.shape.sequence === 'Conditional') {\n      diagram.connectorPropertyChange(actualObject, oldObject, {\n        type: 'Straight',\n        targetDecorator: {\n          shape: 'Arrow',\n          style: {\n            fill: 'black'\n          }\n        },\n        sourceDecorator: {\n          shape: 'Diamond',\n          width: 20,\n          height: 10,\n          style: {\n            fill: 'white'\n          }\n        }\n      });\n      actualObject.wrapper.children[3].visible = false;\n    }\n\n    return actualObject;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n    if (connection.shape.association === 'Default') {\n      diagram.connectorPropertyChange(actualObject, oldObject, {\n        type: 'Straight',\n        style: {\n          strokeDashArray: 'None'\n        },\n        targetDecorator: {\n          shape: 'Arrow',\n          style: {\n            fill: 'black'\n          }\n        },\n        sourceDecorator: {\n          shape: 'None'\n        }\n      });\n    }\n\n    if (connection.shape.association === 'Directional') {\n      diagram.connectorPropertyChange(actualObject, oldObject, {\n        type: 'Straight',\n        style: {\n          strokeDashArray: '2 2'\n        },\n        targetDecorator: {\n          shape: 'Arrow',\n          style: {\n            fill: 'black'\n          }\n        },\n        sourceDecorator: {\n          shape: 'None'\n        }\n      });\n    }\n\n    if (connection.shape.association === 'BiDirectional') {\n      diagram.connectorPropertyChange(actualObject, oldObject, {\n        type: 'Straight',\n        style: {\n          strokeDashArray: '2 2'\n        },\n        targetDecorator: {\n          shape: 'Arrow',\n          style: {\n            fill: 'black'\n          }\n        },\n        sourceDecorator: {\n          shape: 'Arrow',\n          width: 5,\n          height: 10,\n          style: {\n            fill: 'white'\n          }\n        }\n      });\n    }\n\n    return actualObject;\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n    var segmentOffset = 0.5;\n    var angle;\n    var pt;\n\n    if (oldObject.shape.message === 'Default') {\n      if (connection.shape.message !== undefined) {\n        if (connection.shape.message === 'InitiatingMessage' || connection.shape.message === 'NonInitiatingMessage') {\n          var segment = new PathElement();\n          segment = actualObject.getSegmentElement(actualObject, segment);\n          var anglePoints = actualObject.intermediatePoints;\n\n          for (var j = 0; j < anglePoints.length - 1; j++) {\n            /* eslint-disable */\n            length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n            /* eslint-enable */\n\n            var offLength = length * segmentOffset;\n\n            if (length >= offLength) {\n              angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n              pt = Point.transform(anglePoints[j], angle, offLength);\n            }\n          }\n        }\n\n        actualObject.wrapper.children[3].id = actualObject.id + '_' + connection.shape.message;\n        actualObject.wrapper.children[3].width = 25;\n        actualObject.wrapper.children[3].height = 15;\n        actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n        actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n        actualObject.wrapper.children[3].verticalAlignment = 'Center';\n        actualObject.wrapper.children[3].transform = Transform.Self;\n        actualObject.wrapper.children[3].style.fill = connection.shape.message === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        actualObject.wrapper.children[3].offsetX = pt.x;\n        actualObject.wrapper.children[3].offsetY = pt.y;\n      }\n    } else if (oldObject.shape.message !== 'NonInitiatingMessage' || oldObject.shape.message !== 'InitiatingMessage') {\n      if (connection.shape.message !== 'Default') {\n        actualObject.wrapper.children[3].style.fill = connection.shape.message === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n      } else {\n        actualObject.wrapper.children[3].visible = false;\n      }\n    }\n\n    return actualObject;\n  }; //End update Region\n  //size updation\n\n\n  BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n    wrapper.children[0].width = width;\n    wrapper.children[0].height = height; //child node 1 - event node\n\n    var eventNode = wrapper.children[1];\n    eventNode.width = width * 0.85;\n    eventNode.height = height * 0.85;\n    var triggerNode = wrapper.children[2];\n\n    if (event.trigger === 'Message') {\n      triggerNode.width = width * 0.54;\n      triggerNode.height = height * 0.4;\n    } else {\n      triggerNode.width = width * 0.5;\n      triggerNode.height = height * 0.5;\n    }\n  };\n  /** @private */\n\n\n  BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n    var checkAnnotation = node.id.split('_');\n\n    if (checkAnnotation[1] === 'textannotation') {\n      var parentNode = void 0;\n\n      for (var j = 0; j < node.inEdges.length; j++) {\n        var connector = diagram.nameTable[node.inEdges[j]];\n\n        if (connector) {\n          parentNode = diagram.nameTable[connector.sourceID];\n        }\n\n        var start = {\n          x: node.offsetX + tx,\n          y: node.offsetY + ty\n        };\n        var end = connector.sourcePoint;\n        var length_1 = Point.findLength(start, end);\n        var angle = Point.findAngle(end, start);\n\n        if (parentNode.shape.annotations) {\n          for (var x = 0; x < parentNode.shape.annotations.length; x++) {\n            if (parentNode.shape.annotations[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n              parentNode.shape.annotations[x].length = length_1;\n              parentNode.shape.annotations[x].angle = angle;\n              this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    if (node.processId) {\n      this.drag(node, tx, ty, diagram);\n      return true;\n    }\n\n    return false;\n  };\n\n  BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n    var direction = getPortDirection(point, bounds, bounds, false);\n    var rotateAngle = 0;\n\n    switch (direction) {\n      case 'Right':\n        rotateAngle = 0;\n        break;\n\n      case 'Left':\n        rotateAngle = 180;\n        break;\n\n      case 'Bottom':\n        rotateAngle = 90;\n        break;\n\n      case 'Top':\n        rotateAngle = 270;\n        break;\n    }\n\n    return rotateAngle;\n  };\n\n  BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n    wrapper.children[0].width = width;\n    wrapper.children[0].height = height;\n    wrapper.children[1].width = width * 0.45;\n    wrapper.children[1].height = height * 0.45;\n  };\n\n  BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n    wrapper.children[0].width = width;\n    wrapper.children[0].height = height;\n  };\n\n  BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n    //child node 1 - event node\n    wrapper.children[0].width = width;\n    wrapper.children[0].height = height;\n    wrapper.children[0].children[0].width = width;\n    wrapper.children[0].children[0].height = height;\n\n    if (activity.subProcess.type === 'Transaction') {\n      wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n      wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n      wrapper.children[0].children[2].width = width;\n      wrapper.children[0].children[2].height = height;\n    }\n\n    var taskNode = new DiagramElement();\n    var x;\n    var size = this.getSize(node, taskNode);\n    var childCount;\n    var iconSpace = 4;\n\n    if (activity.activity === 'Task') {\n      childCount = this.getTaskChildCount(node);\n    } else {\n      childCount = this.getSubprocessChildCount(node);\n    }\n\n    var childSpace = childCount * 12;\n    var area = (width || size.width) / 2;\n\n    if (childCount === 1) {\n      x = area - 6;\n    } else {\n      x = area - childSpace / 2 - (childCount - 1) * iconSpace / 2;\n    }\n\n    for (var i = 0; i < wrapper.children[0].children.length; i++) {\n      if (wrapper.children[0].children[i].visible && (wrapper.children[0].children[i].id.indexOf('_loop') > -1 || wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 || wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 || wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n        wrapper.children[0].children[i].margin.left = x;\n        x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n      }\n    }\n  };\n\n  BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n    if (element instanceof Container) {\n      for (var i = 0; i < element.children.length; i++) {\n        this.updateDiagramContainerVisibility(element.children[i], visible);\n      }\n    }\n\n    element.visible = visible;\n  };\n  /**\n   *To destroy the ruler\n   *\n   * @returns {void} To destroy the ruler\n   */\n\n\n  BpmnDiagrams.prototype.destroy = function () {\n    /**\n     * Destroys the BpmnDiagrams module\n     */\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string}   Get module name.\n   */\n\n\n  BpmnDiagrams.prototype.getModuleName = function () {\n    /**\n     * Returns the module name\n     */\n    return 'Bpmn';\n  };\n\n  return BpmnDiagrams;\n}();\n\nexport { BpmnDiagrams };\n/**\n * getBpmnShapePathData method \\\n *\n * @returns { string } getBpmnShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\n\nexport function getBpmnShapePathData(shape) {\n  return bpmnShapes[shape.toString()];\n}\n/**\n * getBpmnTriggerShapePathData method \\\n *\n * @returns { string } getBpmnTriggerShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\n\nexport function getBpmnTriggerShapePathData(shape) {\n  return bpmnTriggerShapes[shape.toString()];\n}\n/**\n * getBpmnGatewayShapePathData method \\\n *\n * @returns { string } getBpmnGatewayShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\n\nexport function getBpmnGatewayShapePathData(shape) {\n  return bpmnGatewayShapes[shape.toString()];\n}\n/**\n * getBpmnTaskShapePathData method \\\n *\n * @returns { string } getBpmnTaskShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\n\nexport function getBpmnTaskShapePathData(shape) {\n  return bpmnTaskShapes[shape.toString()];\n}\n/**\n * getBpmnLoopShapePathData method \\\n *\n * @returns { string } getBpmnLoopShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\n\nexport function getBpmnLoopShapePathData(shape) {\n  return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n  'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n  'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n  'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' + 'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' + 'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' + 'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n  'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' + 'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n  'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' + 'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' + 'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z'\n};\nvar bpmnTriggerShapes = {\n  // 'None': '',\n  'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n  'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' + 'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' + 'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' + 'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' + 'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' + 'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' + '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n  'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n  'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n  'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n  'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n  'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n  'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n  'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n  'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n  'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n  'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' + 'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z'\n};\nvar bpmnGatewayShapes = {\n  'None': '',\n  //exclusive\n  'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' + 'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n  //inclusive\n  'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' + 's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' + 's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n  //parallel\n  'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n  //complex\n  'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' + 'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' + 'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n  //eventbased\n  'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' + 'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' + 'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' + 'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n  //exclusive event based\n  'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' + 'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n  //parallel event based\n  'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' + 'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z'\n};\nvar bpmnTaskShapes = {\n  'None': '',\n  'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' + 'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' + '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' + 'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' + 'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' + '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' + '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n  'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' + ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n  'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' + ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n  'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' + 'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' + 'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' + 'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' + 'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n  'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' + 'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' + 'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' + 'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' + 'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' + 'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' + 'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' + 'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' + 'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' + 'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' + 'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' + 'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' + 'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' + 'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' + 'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' + 'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' + 'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' + 'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' + 'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' + 'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' + 'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' + 'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' + 'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' + 'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' + 'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' + 'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' + 'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n  'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' + 'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' + 'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' + 'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n  'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' + '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' + 'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' + 'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' + 'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' + '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' + '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' + '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' + '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' + 'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' + 'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' + 'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' + 'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' + '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' + '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n  'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' + 'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' + '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' + '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' + 'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' + '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' + '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z'\n};\nvar bpmnLoopShapes = {\n  'None': '',\n  'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' + 'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' + 'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' + 'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' + 'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n  'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' + ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n  'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' + 'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' + 'L 55.375,82.5 L 40.375,82.5 Z'\n};","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/bpmn.js"],"names":["Node","DiagramElement","Canvas","Container","PathElement","TextElement","updateStyle","randomId","cloneObject","Connector","BpmnAnnotation","Transform","DiagramAction","findAngle","getIntersectionPoints","getPortDirection","Point","NodeConstraints","ConnectorConstraints","Rect","Size","getDiagramElement","isBlazor","BpmnDiagrams","annotationObjects","Object","defineProperty","prototype","get","connectors","_i","_a","keys","length","key","entry","_b","_c","annotation","key_1","push","enumerable","configurable","getTextAnnotationConn","obj","shape","type","annotations","id","getSize","node","content","size","width","height","undefined","actualSize","measure","desiredSize","maxWidth","Math","min","maxHeight","minWidth","max","minHeight","initBPMNContent","diagram","bpmnShape","getBPMNEventShape","event","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","i","text","children","getBPMNTextAnnotation","style","strokeDashArray","setStyle","constraints","Shadow","shadow","bpmnShapeData","getBpmnShapePathData","data","gatewayshape","gatewayNode","offsetX","offsetY","gatewayTypeNode","opacity","strokeColor","horizontalAlignment","verticalAlignment","relativeMode","shapeType","gateway","gatewayTypeNodeShapeData","getBpmnGatewayShapePathData","fill","strokeWidth","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","margin","left","top","dataobjCollectionNode","visible","collection","getBPMNTaskShape","activity","task","taskShapes","taskNode","cornerRadius","call","childCount","getTaskChildCount","x","childSpace","area","taskTypeNode","taskTypeNodeData","getBpmnTaskShapePathData","taskTypeNodeService","loopType","loop","taskLoopNode","childNode2data","getBpmnLoopShapePathData","bottom","setOffsetWithRespectToBounds","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","trigger","pathdata","shapeEvent","pathElement","shapeActivity","subProcess","innerEvtNode","outerEvtNode","gradient","triggerNode","triggerNodeData","getBpmnTriggerShapePathData","setSizeForBPMNEvents","setEventVisibility","canvas","setSubProcessVisibility","eventLength","events","index","elementWrapper","wrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessEventsShapes","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","iconSpace","subChildSpace","collapsedShape","collapsed","processes","getBPMNSubEvent","getBPMNSubProcessLoopShape","boundary","getBPMNAdhocShape","subprocessComp","container","eventContainer","getBPMNSubprocessEvent","offset","y","shapeWidth","shapeHeight","innerRect","right","transactionEvents","transaction","success","cancel","failure","updateDiagramContainerVisibility","float","subprocessLoop","subprocessLoopData","drag","tx","ty","nameTable","processId","nodePropertyChange","bound","getChildrenBound","updateSubProcessess","arrange","refreshCanvasLayers","updateSelector","updateDocks","dropBPMNchild","target","source","currentSymbol","indexOf","redoElement","sources","targetWrapper","edges","concat","outEdges","inEdges","bpmnModule","textAnnotationConnectors","remove","undoObject","nodes","redoObject","category","addHistoryEntry","mode","zIndex","updateProcesses","updateSubprocessNodeIndex","updateIndex","processNode","nodeindex","getIndex","splice","Number","processTable","processTable_1","actualObject","updateConnectorEdges","removeBpmnProcesses","currentObj","element","j","removeDependentConnector","removeChildFromBPMN","processIndex","name","removeProcess","parent_1","refreshDiagramLayer","addProcess","process","parentId","add","parentNode","child","appendChild","excludeChild","processes_1","bounds","uniteRect","diffX","diffY","pivot","commandHandler","scale","compensationNode","activityType","ports","annot","initAnnotationWrapper","port","initPortWrapper","adhocNode","nodeId","annotationContainer","annotationPath","textElement","fontSize","italic","bold","textWrapping","color","fontFamily","whiteSpace","textOverflow","textAlign","textDecoration","cos","angle","PI","sin","transform","Self","rotateAngle","annotationNode","setAnnotationPath","connector","Default","DragTargetEnd","Drag","sourceID","targetID","targetDecorator","annotationConnector","targetPortID","init","nodeKey","connKey","initObject","annotationsContainer","textObject","textStyle","annotationObject","getTextAnnotationWrapper","addAnnotation","bpmnShapeContent","annotationObj","clearAnnotations","removeAnnotationObjects","checkAndRemoveAnnotations","split","annotationId","diagramActions","UndoRedo","Group","entry_1","changeType","removeElements","nodeContent","removeFromAQuad","parentBounds","position","getAnnotationPathAngle","portElement","point","segment","middleRight","x1","y1","x2","y2","middleLeft","bottomCenter","topCenter","center","endPoint","isBpmnTextAnnotation","activeLabel","parentNodeId","updateTextAnnotationContent","updateQuad","updateTextAnnotationProp","oldObject","direction","targetPoint","sourcePoint","count","updateBPMN","changedProp","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","newObject","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","elementWrapperChild0","event_1","updateBPMNEventTrigger","canMeasurePath","bpmnshapeTriggerdata","oldProp","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","document","getElementById","removeChild","bpmnshapeTaskdata","start","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","elementWrapperChildLen","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","updateAnnotation","updatePort","edge","sourcePortID","connectorPropertyChange","wrapperChild","updateElementVisibility","currentNode","updateBPMNConnector","connection","flowType","sequence","getSequence","association","getAssociation","message","getMessage","sourceDecorator","pathseq","pathseqData","getSegmentElement","anglePoints","intermediatePoints","distance","findPath","segmentOffset","pt","offLength","eventNode","updateAnnotationDrag","checkAnnotation","end","length_1","findLength","destroy","getModuleName","bpmnShapes","toString","bpmnTriggerShapes","bpmnGatewayShapes","bpmnTaskShapes","bpmnLoopShapes"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     *\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        //let gatewayTypeNodeShapeData: string;\n        var gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call\n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        var taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement(); //let childNode2data: string;\n        var childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = node.style.fill;\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = node.style.fill;\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? node.style.fill : node.style.fill !== 'white' ? node.style.fill : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = 'white';\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        //let eventContainer: Canvas;\n        var eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        // eslint-disable-next-line prefer-const\n        loopType = subProcess.loop;\n        // eslint-disable-next-line prefer-const\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        //const diffX: number = 0;\n        //const diffY: number = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                        this.updateSubprocessNodeIndex(source, diagram, target);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateIndex = function (diagram, source) {\n        //let processNode: Node;\n        var processNode = source;\n        var nodeindex = diagram.getIndex(processNode, processNode.id);\n        diagram.nodes.splice(Number(nodeindex), 1);\n        processNode.zIndex = diagram.nodes[diagram.nodes.length - 1].zIndex + 1;\n        diagram.nodes.push(processNode);\n    };\n    BpmnDiagrams.prototype.updateSubprocessNodeIndex = function (source, diagram, target) {\n        if (source.shape.activity.subProcess.processes\n            && source.shape.activity.subProcess.processes.length > 0) {\n            for (var i = 0; i < source.shape.activity.subProcess.processes.length; i++) {\n                this.updateIndex(diagram, source);\n                var processes = source.shape.activity.subProcess.processes[i];\n                if (diagram.nameTable[processes].shape.activity.subProcess.processes.length > 0) {\n                    this.updateSubprocessNodeIndex(diagram.nameTable[processes], diagram, target);\n                }\n                else {\n                    var node = diagram.nameTable[source.shape.activity.subProcess.processes[i]];\n                    this.updateIndex(diagram, node);\n                }\n            }\n        }\n        else {\n            this.updateIndex(diagram, source);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        //let id: string;\n        process.id = process.id || randomId();\n        var id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 }\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 }\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        //let loopType: string;\n        var subProcess = shape.subProcess;\n        var loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape ||\n            (actualObject.shape.bpmnShape);\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event' ||\n            actualObject.shape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //}\n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        actualObject.wrapper.children[0].id = actualObject.wrapper.children[0].id || elementWrapper.id;\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            //let event: string;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            var event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                // eslint-disable-next-line no-global-assign\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        /* eslint-disable */\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        /* eslint-enable */\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     *To destroy the ruler\n     *\n     * @returns {void} To destroy the ruler\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string}   Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\n/**\n * getBpmnShapePathData method \\\n *\n * @returns { string } getBpmnShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\n/**\n * getBpmnTriggerShapePathData method \\\n *\n * @returns { string } getBpmnTriggerShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\n/**\n * getBpmnGatewayShapePathData method \\\n *\n * @returns { string } getBpmnGatewayShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\n/**\n * getBpmnTaskShapePathData method \\\n *\n * @returns { string } getBpmnTaskShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\n/**\n * getBpmnLoopShapePathData method \\\n *\n * @returns { string } getBpmnLoopShapePathData method .\\\n * @param {string} shape - provide the shape value.\n *\n * @private\n */\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z'\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z'\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z'\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z'\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n"]},"metadata":{},"sourceType":"module"}