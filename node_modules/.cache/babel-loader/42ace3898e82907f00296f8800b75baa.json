{"ast":null,"code":"import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\n\nvar SpatialSearch =\n/** @class */\nfunction () {\n  /**\n   *  Constructor for creating the spatial search\n   *\n   * @param {number} objectTable The objectTable.\n   * @private\n   */\n  function SpatialSearch(objectTable) {\n    this.quadSize = 500;\n    this.objectTable = objectTable;\n    this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n    this.pageLeft = Number.MAX_VALUE;\n    this.pageRight = -Number.MAX_VALUE;\n    this.pageTop = Number.MAX_VALUE;\n    this.pageBottom = -Number.MAX_VALUE;\n    this.quadTable = {};\n  }\n  /**\n   * removeFromAQuad method\\\n   *\n   * @returns {void}    removeFromAQuad method .\\\n   * @param {IGroupable} node - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.removeFromAQuad = function (node) {\n    if (this.quadTable[node.id]) {\n      var quad = this.quadTable[node.id];\n      var index = this.objectIndex(quad.objects, node);\n\n      if (index !== -1) {\n        quad.objects.splice(index, 1);\n        this.update(quad);\n        delete this.quadTable[node.id];\n      }\n    }\n  };\n\n  SpatialSearch.prototype.update = function (quad) {\n    if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n      var parent_1 = quad.parent;\n\n      if (parent_1.first === quad) {\n        parent_1.first = null;\n      } else if (parent_1.second === quad) {\n        parent_1.second = null;\n      } else if (parent_1.third === quad) {\n        parent_1.third = null;\n      } else if (parent_1.fourth === quad) {\n        parent_1.fourth = null;\n      }\n\n      this.update(quad.parent);\n    } else {\n      if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n        quad.left = 0;\n        quad.width = 1000;\n        quad.top = 0;\n        quad.height = 1000;\n      }\n\n      return;\n    }\n  };\n\n  SpatialSearch.prototype.addIntoAQuad = function (node) {\n    var quad = this.parentQuad.addIntoAQuad(node);\n    this.quadTable[node.id] = quad;\n  };\n\n  SpatialSearch.prototype.objectIndex = function (objects, node) {\n    for (var i = 0; i < objects.length; i++) {\n      if (objects[i].id === node.id) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  SpatialSearch.prototype.updateQuad = function (node) {\n    this.setCurrentNode(node);\n    var nodBounds = node.outerBounds;\n\n    if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) && !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n      return false;\n    } //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n\n\n    if (this.quadTable[node.id]) {\n      var quad = this.quadTable[node.id];\n\n      if (!quad.isContained()) {\n        this.removeFromAQuad(node);\n        this.addIntoAQuad(node);\n      }\n    } else {\n      this.addIntoAQuad(node);\n    }\n\n    if (this.isWithinPageBounds(nodBounds) && this.leftElement !== node && this.topElement !== node && this.rightElement !== node && this.bottomElement !== node) {//contained - no change\n    } else {\n      var modified = false;\n\n      if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n        if (this.pageLeft >= this.childLeft) {\n          this.pageLeft = this.childLeft;\n          this.leftElement = node;\n          modified = true;\n        } else if (node === this.leftElement) {\n          this.pageLeft = Number.MAX_VALUE;\n          this.findLeft(this.parentQuad);\n          modified = true;\n        }\n      }\n\n      if (this.pageTop !== this.childTop || node !== this.topElement) {\n        if (this.pageTop >= this.childTop) {\n          this.pageTop = this.childTop;\n          this.topElement = node;\n          modified = true;\n        } else if (node === this.topElement) {\n          this.pageTop = Number.MAX_VALUE;\n          this.findTop(this.parentQuad);\n          modified = true;\n        }\n      }\n\n      if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n        if (this.pageBottom <= this.childBottom) {\n          modified = true;\n          this.pageBottom = this.childBottom;\n          this.bottomElement = node;\n        } else if (node === this.bottomElement) {\n          this.pageBottom = -Number.MAX_VALUE;\n          this.findBottom(this.parentQuad);\n          modified = true;\n        }\n      }\n\n      if (this.pageRight !== this.childRight || node !== this.rightElement) {\n        if (this.pageRight <= this.childRight) {\n          this.pageRight = this.childRight;\n          this.rightElement = node;\n          modified = true;\n        } else if (node === this.rightElement) {\n          this.pageRight = -Number.MAX_VALUE;\n          this.findRight(this.parentQuad);\n          modified = true;\n        }\n      }\n\n      return modified;\n    }\n\n    this.setCurrentNode(null);\n    return false;\n  };\n\n  SpatialSearch.prototype.isWithinPageBounds = function (node) {\n    if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop && node.bottom <= this.pageBottom) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * findQuads method\\\n   *\n   * @returns {  Quad[] }    findQuads method .\\\n   * @param {Rect} region - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.findQuads = function (region) {\n    var quads = [];\n    this.parentQuad.findQuads(region, quads);\n    return quads;\n  };\n  /**\n   * findObjects method\\\n   *\n   * @returns {  IGroupable[] }    findObjects method .\\\n   * @param {Rect} region - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.findObjects = function (region) {\n    var quads = this.findQuads(region);\n    var objects = [];\n\n    for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n      var quad = quads_1[_i];\n\n      for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n        var obj = _b[_a];\n\n        if (obj.outerBounds.intersects(region)) {\n          objects.push(this.objectTable[obj.id]);\n        }\n      }\n    }\n\n    return objects;\n  };\n  /**\n   * updateBounds method\\\n   *\n   * @returns { boolean }    updateBounds method .\\\n   * @param {IGroupable} node - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.updateBounds = function (node) {\n    var modified = false;\n\n    if (node === this.topElement) {\n      this.pageTop = Number.MAX_VALUE;\n      this.topElement = null;\n      this.findTop(this.parentQuad);\n      modified = true;\n    }\n\n    if (node === this.leftElement) {\n      this.pageLeft = Number.MAX_VALUE;\n      this.leftElement = null;\n      this.findLeft(this.parentQuad);\n      modified = true;\n    }\n\n    if (node === this.rightElement) {\n      this.pageRight = -Number.MAX_VALUE;\n      this.rightElement = null;\n      this.findRight(this.parentQuad);\n      modified = true;\n    }\n\n    if (node === this.bottomElement) {\n      this.pageBottom = -Number.MAX_VALUE;\n      this.bottomElement = null;\n      this.findBottom(this.parentQuad);\n      modified = true;\n    }\n\n    return modified;\n  };\n\n  SpatialSearch.prototype.findBottom = function (quad) {\n    //if (quad.Quads.Count === 4)\n    {\n      if (quad.third || quad.fourth) {\n        if (quad.third) {\n          this.findBottom(quad.third);\n        }\n\n        if (quad.fourth) {\n          this.findBottom(quad.fourth);\n        }\n      } else {\n        if (quad.second) {\n          this.findBottom(quad.second);\n        }\n\n        if (quad.first) {\n          this.findBottom(quad.first);\n        }\n      }\n    }\n\n    for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n      var node = _a[_i];\n\n      if (this.pageBottom <= node.outerBounds.bottom) {\n        this.pageBottom = node.outerBounds.bottom;\n        this.bottomElement = node;\n      }\n    }\n  };\n\n  SpatialSearch.prototype.findRight = function (quad) {\n    //if (quad.Quads.Count === 4)\n    {\n      if (quad.second || quad.fourth) {\n        if (quad.second) {\n          this.findRight(quad.second);\n        }\n\n        if (quad.fourth) {\n          this.findRight(quad.fourth);\n        }\n      } else {\n        if (quad.first) {\n          this.findRight(quad.first);\n        }\n\n        if (quad.third) {\n          this.findRight(quad.third);\n        }\n      }\n    }\n\n    for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n      var node = _a[_i];\n\n      if (this.pageRight <= node.outerBounds.right) {\n        this.pageRight = node.outerBounds.right;\n        this.rightElement = node;\n      }\n    }\n  };\n\n  SpatialSearch.prototype.findLeft = function (quad) {\n    //if (quad.Quads.Count === 4)\n    {\n      if (quad.first || quad.third) {\n        if (quad.first) {\n          this.findLeft(quad.first);\n        }\n\n        if (quad.third) {\n          this.findLeft(quad.third);\n        }\n      } else {\n        if (quad.second) {\n          this.findLeft(quad.second);\n        }\n\n        if (quad.fourth) {\n          this.findLeft(quad.fourth);\n        }\n      }\n    }\n\n    for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n      var node = _a[_i];\n\n      if (this.pageLeft >= node.outerBounds.left) {\n        this.pageLeft = node.outerBounds.left;\n        this.leftElement = node;\n      }\n    }\n  };\n\n  SpatialSearch.prototype.findTop = function (quad) {\n    //if (quad.Quads.Count === 4)\n    {\n      if (quad.first || quad.second) {\n        if (quad.first) {\n          this.findTop(quad.first);\n        }\n\n        if (quad.second) {\n          this.findTop(quad.second);\n        }\n      } else {\n        if (quad.third) {\n          this.findTop(quad.third);\n        }\n\n        if (quad.fourth) {\n          this.findTop(quad.fourth);\n        }\n      }\n    }\n\n    for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n      var node = _a[_i];\n\n      if (this.pageTop >= node.outerBounds.top) {\n        this.pageTop = node.outerBounds.top;\n        this.topElement = node;\n      }\n    }\n  };\n  /**\n   * setCurrentNode method\\\n   *\n   * @returns { void }    setCurrentNode method .\\\n   * @param {IGroupable} node - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.setCurrentNode = function (node) {\n    this.childNode = node;\n\n    if (node) {\n      var r = node.outerBounds;\n      this.childLeft = Number(r.left);\n      this.childTop = Number(r.top);\n      this.childRight = Number(r.right);\n      this.childBottom = Number(r.bottom);\n    } else {\n      this.childLeft = Number.MAX_VALUE;\n      this.childTop = Number.MAX_VALUE;\n      this.childRight = -Number.MAX_VALUE;\n      this.childBottom = -Number.MAX_VALUE;\n    }\n  };\n  /**\n   * getPageBounds method\\\n   *\n   * @returns { Rect }    getPageBounds method .\\\n   * @param {number} originX - provide the options value.\n   * @param {number} originY - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n    if (this.pageLeft === Number.MAX_VALUE) {\n      return new Rect(0, 0, 0, 0);\n    }\n\n    var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n    var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n    return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n  };\n  /**\n   * getQuad method\\\n   *\n   * @returns { Quad }    getQuad method .\\\n   * @param {IGroupable} node - provide the options value.\n   * @private\n   */\n\n\n  SpatialSearch.prototype.getQuad = function (node) {\n    return this.quadTable[node.id];\n  };\n\n  return SpatialSearch;\n}();\n\nexport { SpatialSearch };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/spatial-search/spatial-search.js"],"names":["Rect","Quad","SpatialSearch","objectTable","quadSize","parentQuad","pageLeft","Number","MAX_VALUE","pageRight","pageTop","pageBottom","quadTable","prototype","removeFromAQuad","node","id","quad","index","objectIndex","objects","splice","update","parent","length","first","second","third","fourth","parent_1","left","width","top","height","addIntoAQuad","i","updateQuad","setCurrentNode","nodBounds","outerBounds","isNaN","x","y","isContained","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","childLeft","findLeft","childTop","findTop","childBottom","findBottom","childRight","findRight","right","bottom","findQuads","region","quads","findObjects","_i","quads_1","_a","_b","obj","intersects","push","updateBounds","childNode","r","getPageBounds","originX","originY","undefined","Math","min","round","getQuad"],"mappings":"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","sourcesContent":["import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /**\n     *  Constructor for creating the spatial search\n     *\n     * @param {number} objectTable The objectTable.\n     * @private\n     */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /**\n     * removeFromAQuad method\\\n     *\n     * @returns {void}    removeFromAQuad method .\\\n     * @param {IGroupable} node - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * findQuads method\\\n     *\n     * @returns {  Quad[] }    findQuads method .\\\n     * @param {Rect} region - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /**\n     * findObjects method\\\n     *\n     * @returns {  IGroupable[] }    findObjects method .\\\n     * @param {Rect} region - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /**\n     * updateBounds method\\\n     *\n     * @returns { boolean }    updateBounds method .\\\n     * @param {IGroupable} node - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /**\n     * setCurrentNode method\\\n     *\n     * @returns { void }    setCurrentNode method .\\\n     * @param {IGroupable} node - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /**\n     * getPageBounds method\\\n     *\n     * @returns { Rect }    getPageBounds method .\\\n     * @param {number} originX - provide the options value.\n     * @param {number} originY - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /**\n     * getQuad method\\\n     *\n     * @returns { Quad }    getQuad method .\\\n     * @param {IGroupable} node - provide the options value.\n     * @private\n     */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n"]},"metadata":{},"sourceType":"module"}