{"ast":null,"code":"/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size =\n/** @class */\nfunction () {\n  function Size(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  /**\n   * isEmpty method \\\n   *\n   * @returns { boolean } isEmpty method .\\\n   *\n   * @private\n   */\n\n\n  Size.prototype.isEmpty = function () {\n    return this.height === 0 && this.width === 0;\n  }; // public static get empty(): Size {\n  //     return new Size();\n  // }\n  // public get isEmpty(): boolean {\n  //     return this.equals(Size.empty);\n  // }\n  // public equals(size2: Size): boolean {\n  //     return this.width === size2.width && this.height === size2.height;\n  // }\n  // public union(size: Size): void {\n  //     size.width = Math.max(size.width, this.width);\n  //     size.height = Math.max(size.height, this.height);\n  // }\n\n  /**\n   * clone method \\\n   *\n   * @returns { Size } clone method .\\\n   *\n   * @private\n   */\n\n\n  Size.prototype.clone = function () {\n    return new Size(this.width, this.height);\n  };\n\n  return Size;\n}();\n\nexport { Size };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/size.js"],"names":["Size","width","height","prototype","isEmpty","clone"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,IAAI;AAAG;AAAe,YAAY;AAClC,WAASA,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AACzB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIF,EAAAA,IAAI,CAACG,SAAL,CAAeC,OAAf,GAAyB,YAAY;AACjC,WAAO,KAAKF,MAAL,KAAgB,CAAhB,IAAqB,KAAKD,KAAL,KAAe,CAA3C;AACH,GAFD,CAZkC,CAelC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACID,EAAAA,IAAI,CAACG,SAAL,CAAeE,KAAf,GAAuB,YAAY;AAC/B,WAAO,IAAIL,IAAJ,CAAS,KAAKC,KAAd,EAAqB,KAAKC,MAA1B,CAAP;AACH,GAFD;;AAGA,SAAOF,IAAP;AACH,CAvCyB,EAA1B;;AAwCA,SAASA,IAAT","sourcesContent":["/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * isEmpty method \\\n     *\n     * @returns { boolean } isEmpty method .\\\n     *\n     * @private\n     */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**\n     * clone method \\\n     *\n     * @returns { Size } clone method .\\\n     *\n     * @private\n     */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n"]},"metadata":{},"sourceType":"module"}