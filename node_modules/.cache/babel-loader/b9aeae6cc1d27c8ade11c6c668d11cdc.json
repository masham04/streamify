{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\n\nvar ImageElement =\n/** @class */\nfunction (_super) {\n  __extends(ImageElement, _super);\n  /**\n   * set the id for each element\n   */\n\n\n  function ImageElement() {\n    var _this = _super.call(this) || this;\n    /**\n     * sets or gets the image source\n     */\n\n\n    _this.imageSource = '';\n    /**\n     * sets scaling factor of the image\n     */\n\n    _this.imageScale = 'None';\n    /**\n     * sets the alignment of the image\n     */\n\n    _this.imageAlign = 'None';\n    /**\n     * Sets how to stretch the image\n     */\n\n    _this.stretch = 'Stretch';\n    return _this;\n  }\n\n  Object.defineProperty(ImageElement.prototype, \"source\", {\n    /**\n     * Gets the source for the image element\n     */\n\n    /**\n     * Gets the source for the image element \\\n     *\n     * @returns { void }Gets the source for the image element.\\\n     *\n     * @private\n     */\n    get: function () {\n      return this.imageSource;\n    },\n\n    /**\n     * Sets the source for the image element \\\n     *\n     * @returns { void }Sets the source for the image element.\\\n     * @param {string} value - provide the id value.\n     *\n     * @private\n     */\n    set: function (value) {\n      this.imageSource = value;\n      this.isDirt = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Measures minimum space that is required to render the image \\\n   *\n   * @returns { Size }Measures minimum space that is required to render the image.\\\n   * @param {Size} availableSize - provide the id value.\n   * @param {Object} id - provide the id value.\n   * @param {Function} callback - provide the id value.\n   *\n   * @private\n   */\n\n  ImageElement.prototype.measure = function (availableSize, id, callback) {\n    if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n      this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n      this.isDirt = false;\n    }\n\n    if (this.width !== undefined && this.height !== undefined) {\n      this.desiredSize = new Size(this.width, this.height);\n      this.contentSize = this.desiredSize;\n    } else {\n      this.desiredSize = this.contentSize;\n    }\n\n    this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n    return this.desiredSize;\n  };\n  /**\n   * Arranges the image\n   * @param {Size} desiredSize\n   */\n\n  /**\n   * Arranges the image \\\n   *\n   * @returns { Size }Arranges the image.\\\n   * @param {Size} desiredSize - provide the id value.\n   *\n   * @private\n   */\n\n\n  ImageElement.prototype.arrange = function (desiredSize) {\n    this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n    this.updateBounds();\n    return this.actualSize;\n  };\n\n  return ImageElement;\n}(DiagramElement);\n\nexport { ImageElement };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/image-element.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Size","DiagramElement","measureImage","ImageElement","_super","_this","call","imageSource","imageScale","imageAlign","stretch","defineProperty","get","set","value","isDirt","enumerable","configurable","measure","availableSize","id","callback","width","undefined","height","contentSize","source","desiredSize","validateDesiredSize","arrange","actualSize","updateBounds"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        /**\n         * Gets the source for the image element \\\n         *\n         * @returns { void }Gets the source for the image element.\\\n         *\n         * @private\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element \\\n         *\n         * @returns { void }Sets the source for the image element.\\\n         * @param {string} value - provide the id value.\n         *\n         * @private\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image \\\n     *\n     * @returns { Size }Measures minimum space that is required to render the image.\\\n     * @param {Size} availableSize - provide the id value.\n     * @param {Object} id - provide the id value.\n     * @param {Function} callback - provide the id value.\n     *\n     * @private\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param {Size} desiredSize\n     */\n    /**\n     * Arranges the image \\\n     *\n     * @returns { Size }Arranges the image.\\\n     * @param {Size} desiredSize - provide the id value.\n     *\n     * @private\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n"]},"metadata":{},"sourceType":"module"}