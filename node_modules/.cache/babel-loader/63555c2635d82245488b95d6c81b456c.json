{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { RealAction } from '../diagram/enum/enum';\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event, isBlazor } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\n\nvar Overview =\n/** @class */\nfunction (_super) {\n  __extends(Overview, _super);\n\n  function Overview(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    /** @private */\n\n\n    _this.mode = 'Canvas';\n    /** @private */\n\n    _this.id = 'overview';\n    _this.actionName = '';\n    _this.startPoint = null;\n    _this.currentPoint = null;\n    _this.prevPoint = null;\n    _this.scale = null;\n    _this.inAction = false;\n    _this.viewPortRatio = 1;\n    _this.horizontalOffset = 0;\n    _this.verticalOffset = 0;\n    _this.model = {};\n    _this.event = true;\n    _this.overviewid = 88123;\n    _this.model = {\n      width: _this.width,\n      height: _this.height\n    };\n    return _this;\n  }\n  /**\n   * Updates the overview control when the objects are changed\n   *\n   * @param {OverviewModel} newProp - Lists the new values of the changed properties\n   * @param {OverviewModel} oldProp - Lists the old values of the changed properties\n   */\n\n\n  Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n    //let objectArray: Object[] = [];\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'sourceID':\n          this.setParent(newProp.sourceID);\n          break;\n\n        case 'width':\n        case 'height':\n          this.renderCanvas();\n          this.setParent(this.sourceID);\n          break;\n      }\n    }\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string}  Get the properties to be maintained in the persisted state.\n   */\n\n\n  Overview.prototype.getPersistData = function () {\n    var keyEntity = ['loaded'];\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * Initializes the values of private members.\n   *\n   * @returns {void}  Initializes the values of private members.\n   * @private\n   */\n\n\n  Overview.prototype.preRender = function () {\n    if (this.element.id === '') {\n      var collection = document.getElementsByClassName('e-overview').length;\n      this.element.id = 'overview_' + this.overviewid + '_' + collection;\n    }\n\n    this.element.style.background = 'transparent';\n    this.unWireEvents();\n    this.wireEvents();\n  };\n\n  Overview.prototype.render = function () {\n    this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n    this.renderCanvas();\n    this.setParent(this.sourceID);\n    this.renderComplete();\n  }; // eslint-disable-next-line @typescript-eslint/ban-types\n\n\n  Overview.prototype.getSizeValue = function (real) {\n    var text;\n\n    if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n      text = real.toString();\n    } else {\n      text = real.toString() + 'px';\n    }\n\n    return text;\n  };\n\n  Overview.prototype.renderCanvas = function (options) {\n    var canvas = document.getElementById(this.element.id + '_canvas');\n\n    if (!canvas) {\n      canvas = createHtmlElement('div', {});\n      this.element.appendChild(canvas);\n    }\n\n    var attribute = {\n      'id': this.element.id + '_canvas',\n      'class': 'drawing',\n      'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' + this.getSizeValue(this.model.width) + ';style:-ms-touch-action: none;touch-action: none;'\n    };\n    setAttributeHtml(canvas, attribute);\n    this.element.setAttribute('tabindex', String(0));\n    this.element.style.overflow = 'hidden';\n    this.element.style.height = String(this.model.height);\n    this.element.style.width = String(this.model.width);\n    this.canvas = canvas;\n  };\n\n  Overview.prototype.setParent = function (id) {\n    var element = document.getElementById(id);\n    var instance = 'ej2_instances';\n\n    if (this.parent) {\n      var oldparent = this.parent;\n      this.parent = null;\n      oldparent.setOverview(null, this.element.id);\n      this.removeDocument(this);\n    }\n\n    this.parent = this.getDiagram(element, instance);\n\n    if (this.parent) {\n      this.parent.setOverview(this);\n    }\n  };\n\n  Overview.prototype.getDiagram = function (element, instance) {\n    var diagram;\n    var n = element[instance].length;\n\n    for (var i = 0; i < n; i++) {\n      if (hasClass(element[instance][i].element, 'e-diagram')) {\n        diagram = element[instance][i];\n        break;\n      }\n    }\n\n    return diagram;\n  };\n\n  Overview.prototype.unWireEvents = function () {\n    var start = Browser.touchStartEvent;\n    var move = Browser.touchMoveEvent; //const evnt: EventHandler;\n\n    var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave'; //const isIE11Pointer: Boolean = Browser.isPointer;\n    // const wheelEvent: string = Browser.info.name === 'mozilla' ?\n    //     (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n\n    var stop = Browser.touchEndEvent;\n    EventHandler.remove(this.element, start, this.mouseDown);\n    EventHandler.remove(this.element, move, this.mouseMove);\n    EventHandler.remove(this.element, stop, this.mouseUp);\n    EventHandler.remove(this.element, cancel, this.documentMouseUp);\n    EventHandler.remove(window, 'resize', this.windowResize);\n    var container = document.getElementById(this.sourceID + 'content');\n\n    if (container) {\n      EventHandler.remove(container, 'scroll', this.scrolled);\n    }\n  };\n\n  Overview.prototype.wireEvents = function () {\n    var start = Browser.touchStartEvent;\n    var stop = Browser.touchEndEvent;\n    var move = Browser.touchMoveEvent;\n    var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave'; //const isIE11Pointer: Boolean = Browser.isPointer;\n    // const wheelEvent: string = Browser.info.name === 'mozilla' ?\n    //     (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n\n    EventHandler.add(this.element, start, this.mouseDown, this);\n    EventHandler.add(this.element, move, this.mouseMove, this);\n    EventHandler.add(this.element, stop, this.mouseUp, this);\n    EventHandler.add(this.element, cancel, this.documentMouseUp, this); // eslint-disable\n\n    EventHandler.add(window, 'resize', this.windowResize, this); // eslint-enable\n\n    var container = document.getElementById(this.sourceID + 'content');\n\n    if (container) {\n      EventHandler.add(container, 'scroll', this.scrolled, this);\n    }\n  };\n  /**\n   * renderDocument method\\\n   *\n   * @returns {  void }    renderDocument method .\\\n   * @param {Overview} view - provide the angle value.\n   * @private\n   */\n\n\n  Overview.prototype.renderDocument = function (view) {\n    view.canvas = this.canvas;\n    var g = document.getElementById(this.canvas.id + '_svg');\n\n    if (g) {\n      g.parentNode.removeChild(g);\n    }\n\n    var attr = {\n      id: this.canvas.id + '_svg',\n      version: '1.1',\n      'class': 'overview_svg'\n    };\n    var svg = createSvgElement('svg', attr);\n    this.svg = svg;\n    view.svg = svg;\n    view.canvas.appendChild(svg);\n    var ovw = document.getElementById(this.element.id);\n    var element = ovw;\n    var eWidth = element.clientWidth;\n    var eHeight = element.clientHeight;\n    var bRect = element.getBoundingClientRect(); // Check for the window resize\n\n    var screenX = window.screenX < 0 ? window.screenX * -1 : window.screenX;\n    var screenY = window.screenY < 0 ? window.screenY * -1 : window.screenY;\n\n    if (eWidth === 0) {\n      var widthValue = Math.floor(window.innerWidth - screenX - Math.floor(bRect.left));\n      eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n    }\n\n    if (eHeight === 0) {\n      var heightValue = Math.floor(window.innerHeight - screenY - Math.floor(bRect.top));\n      eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n    }\n\n    if (eWidth > 0) {\n      svg.setAttribute('width', String(eWidth));\n      this.model.height = eHeight;\n    }\n\n    if (eHeight > 0) {\n      svg.setAttribute('height', String(eHeight));\n      this.model.width = eWidth;\n    } //let attributes: Object;\n\n\n    if (!view.diagramLayerDiv) {\n      view.diagramLayerDiv = createHtmlElement('div', {}); //const container: HTMLElement = document.getElementById(this.element.id);\n\n      view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n      view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n      view.diagramLayerDiv.appendChild(view.diagramLayer);\n      view.canvas.appendChild(view.diagramLayerDiv);\n    }\n\n    var attributes = {\n      'id': this.element.id + '_diagramLayer_div',\n      'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n    };\n    setAttributeHtml(view.diagramLayerDiv, attributes);\n    this.renderHtmlLayer(view.canvas);\n    this.renderNativeLayer(view.canvas, view);\n    this.addOverviewRectPanel(view);\n  };\n  /**\n   * removeDocument method\\\n   *\n   * @returns {  void }    removeDocument method .\\\n   * @param {Overview} view - provide the angle value.\n   * @private\n   */\n\n\n  Overview.prototype.removeDocument = function (view) {\n    var svg = document.getElementById(this.canvas.id + '_svg');\n    this.canvas.removeChild(svg);\n    var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n    this.canvas.removeChild(htmlLayer);\n    var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n    this.canvas.removeChild(diagramLayer);\n    view.diagramLayerDiv = null;\n    view.diagramLayer = null;\n    var domTable = 'domTable';\n    window[domTable][this.id + 'html_layer'] = null;\n  };\n\n  Overview.prototype.renderHtmlLayer = function (canvas) {\n    var htmlLayer = createHtmlElement('div', {\n      'id': this.element.id + '_htmlLayer',\n      'class': 'e-html-layer',\n      'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n    });\n    var options = {\n      'id': this.element.id + '_htmlLayer_div',\n      'style': 'position:absolute;top:0px;left:0px;'\n    };\n    var htmlDiv = createHtmlElement('div', options);\n    htmlLayer.appendChild(htmlDiv);\n    canvas.appendChild(htmlLayer);\n    return htmlLayer;\n  };\n\n  Overview.prototype.renderNativeLayer = function (canvas, view) {\n    if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n      var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n      var nativeLayer = createSvgElement('g', {\n        'id': this.element.id + '_nativeLayer'\n      });\n      nativeLayerSvg.appendChild(nativeLayer);\n      view.diagramLayerDiv.appendChild(nativeLayerSvg);\n      setAttributeSvg(nativeLayerSvg, {\n        'class': 'e-native-layer'\n      });\n    }\n  };\n\n  Overview.prototype.addOverviewRectPanel = function (view) {\n    var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n\n    if (svg) {\n      svg.parentNode.removeChild(svg);\n    }\n\n    var attr = {\n      id: this.canvas.id + '_overviewsvg',\n      class: 'overviewsvg',\n      version: '1.1',\n      'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n      width: this.model.width,\n      height: this.model.height\n    };\n    svg = createSvgElement('svg', attr);\n    view.canvas.appendChild(svg);\n    var ovw = createSvgElement('g', {\n      'id': this.element.id + '_overviewlayer',\n      'style': 'pointer-events:none'\n    });\n    svg.appendChild(ovw);\n    var rect = createSvgElement('rect', {\n      'fill': 'transparent',\n      'width': '100%',\n      'height': '100%',\n      'class': 'overviewbackrect',\n      'id': this.canvas.id + 'overviewbackrect'\n    });\n    rect.setAttribute('style', ' pointer-events: none; ');\n    ovw.appendChild(rect); //const svgDocument: SVGElement = (ovw);\n\n    var g = createSvgElement('g', {\n      'id': this.canvas.id + 'overviewhandle',\n      'style': 'pointer-events:all'\n    });\n    ovw.appendChild(g);\n    var innerrect = createSvgElement('rect', {\n      'id': this.canvas.id + 'overviewrect',\n      'fill': 'transparent'\n    });\n    g.appendChild(innerrect);\n    this.renderOverviewCorner('left', g);\n    this.renderOverviewCorner('right', g);\n    this.renderOverviewCorner('top', g);\n    this.renderOverviewCorner('bottom', g);\n    this.renderOverviewCorner('topleft', g);\n    this.renderOverviewCorner('topright', g);\n    this.renderOverviewCorner('bottomleft', g);\n    this.renderOverviewCorner('bottomright', g);\n  };\n\n  Overview.prototype.renderOverviewCorner = function (name, parent) {\n    var svg = this.svg;\n    var shape;\n\n    if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n      shape = 'rect';\n    } else {\n      shape = 'circle';\n    }\n\n    var innerrect = createSvgElement(shape, {\n      'id': this.canvas.id + 'visible' + name\n    });\n    parent.appendChild(innerrect);\n    var transrect = createSvgElement(shape, {\n      'id': this.canvas.id + name,\n      'class': 'overviewresizer',\n      'fill': 'transparent'\n    });\n    parent.appendChild(transrect);\n  };\n\n  Overview.prototype.updateOverviewRectangle = function () {\n    var difx = this.currentPoint.x - this.prevPoint.x;\n    var dify = this.currentPoint.y - this.prevPoint.y;\n    var size = new Size();\n    size.width = 0;\n    size.height = 0;\n    var x = 0;\n    var y = 0;\n    var w;\n    var h;\n\n    switch (this.resizeDirection) {\n      case 'left':\n        size.width -= difx;\n        size.height -= difx / this.viewPortRatio;\n        x = difx;\n        y = difx / this.viewPortRatio;\n        y /= 2;\n        break;\n\n      case 'right':\n        size.width += difx;\n        size.height += difx / this.viewPortRatio;\n        y = difx / this.viewPortRatio;\n        y /= -2;\n        break;\n\n      case 'top':\n        size.height -= dify;\n        size.width -= dify * this.viewPortRatio;\n        y = dify;\n        x = dify * this.viewPortRatio;\n        x /= 2;\n        break;\n\n      case 'bottom':\n        size.height += dify;\n        size.width += dify * this.viewPortRatio;\n        x = dify * this.viewPortRatio;\n        x /= -2;\n        break;\n\n      case 'topleft':\n        if (Math.abs(dify) > Math.abs(difx)) {\n          difx = dify * this.viewPortRatio;\n        } else {\n          dify = difx / this.viewPortRatio;\n        }\n\n        size.width -= difx;\n        size.height -= dify;\n        x = difx;\n        y = dify;\n        break;\n\n      case 'topright':\n        if (Math.abs(dify) > Math.abs(difx)) {\n          difx = -dify * this.viewPortRatio;\n        } else {\n          dify = -(difx / this.viewPortRatio);\n        }\n\n        y = dify;\n        size.width += difx;\n        size.height -= dify;\n        break;\n\n      case 'bottomleft':\n        if (Math.abs(dify) > Math.abs(difx)) {\n          difx = -dify * this.viewPortRatio;\n        } else {\n          dify = -difx / this.viewPortRatio;\n        }\n\n        x = difx;\n        size.width -= difx;\n        size.height += dify;\n        break;\n\n      case 'bottomright':\n        if (Math.abs(dify) > Math.abs(difx)) {\n          difx = dify * this.viewPortRatio;\n        } else {\n          dify = difx / this.viewPortRatio;\n        }\n\n        size.width += difx;\n        size.height += dify;\n        break;\n    }\n\n    this.updateHelper(x, y, size, w, h);\n  };\n\n  Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n    var x;\n    var y;\n    var bounds;\n    var svg = this.element.getElementsByTagName('svg')[2];\n    var rect = svg.getElementById('helper');\n\n    if (size) {\n      bounds = rect.getBBox();\n      x = bounds.x + difx;\n      y = bounds.y + dify;\n      width = bounds.width + size.width;\n      height = bounds.height + size.height;\n    } else {\n      var difx_1;\n\n      if (this.currentPoint.x > this.startPoint.x) {\n        difx_1 = this.currentPoint.x - this.prevPoint.x;\n      } else {\n        difx_1 = this.prevPoint.x - this.currentPoint.x;\n      }\n\n      var dify_1;\n\n      if (this.currentPoint.y > this.startPoint.y) {\n        dify_1 = this.currentPoint.y - this.prevPoint.y;\n      } else {\n        dify_1 = this.prevPoint.y - this.currentPoint.y;\n      }\n\n      var w = void 0;\n      var h = void 0;\n\n      if (Math.abs(dify_1) > Math.abs(difx_1)) {\n        difx_1 = this.viewPortRatio * dify_1;\n        h = true;\n        w = false;\n      } else {\n        dify_1 = difx_1 / this.viewPortRatio;\n        w = true;\n        h = false;\n      }\n\n      bounds = rect.getBBox();\n      x = this.startPoint.x > this.currentPoint.x ? bounds.x - difx_1 : bounds.x;\n      y = this.startPoint.y > this.currentPoint.y ? bounds.y - dify_1 : bounds.y;\n      width = bounds.width + difx_1;\n      height = bounds.height + dify_1;\n    }\n\n    setAttributeSvg(this.helper, {\n      'id': this.helper.id,\n      'x': x,\n      'y': y,\n      'width': Math.max(0, width),\n      'height': Math.max(0, height)\n    });\n  };\n\n  Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n    var rect = document.getElementById(this.canvas.id + 'overviewrect');\n    var attr = {\n      x: x,\n      y: y,\n      width: Math.max(1, width),\n      height: Math.max(1, height)\n    };\n    setAttributeHtml(rect, attr);\n    this.updateOverviewCorner('top', x + 8, y + 1, Math.max(0, width - 16), 2);\n    this.updateOverviewCorner('bottom', x + 8, y + height + 3, Math.max(0, width - 16), 2);\n    this.updateOverviewCorner('left', x - 2, y + 11, 2, Math.max(0, height - 16));\n    this.updateOverviewCorner('right', x + width, y + 11, 2, Math.max(0, height - 16));\n    this.updateOverviewCorner('topleft', x, y + 3, 5, 5);\n    this.updateOverviewCorner('topright', x + width, y + 3, 5, 5);\n    this.updateOverviewCorner('bottomleft', x, y + height + 3, 5, 5);\n    this.updateOverviewCorner('bottomright', x + width, y + height + 3, 5, 5);\n  };\n\n  Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n    var attr;\n    var transattr;\n    var rectname = 'visible' + name;\n    var rect = document.getElementById(this.canvas.id + rectname);\n\n    if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n      attr = {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: '#ED1C24'\n      };\n      transattr = {\n        x: x - 2,\n        y: y - 2,\n        width: width === 2 ? 4 : width,\n        height: height === 2 ? 4 : height\n      };\n    } else {\n      attr = {\n        cx: x,\n        cy: y,\n        'r': 4,\n        fill: '#ED1C24'\n      };\n      transattr = {\n        cx: x,\n        cy: y,\n        'r': 6,\n        fill: 'transparent'\n      };\n    }\n\n    setAttributeHtml(rect, attr);\n    var transrect = document.getElementById(this.canvas.id + name);\n    setAttributeHtml(transrect, transattr);\n  };\n\n  Overview.prototype.translateOverviewRectangle = function () {\n    var offwidth = Number(this.model.width);\n    var offheight = Number(this.model.height);\n    var difx = this.currentPoint.x - this.prevPoint.x;\n    var dify = this.currentPoint.y - this.prevPoint.y; //const viewPort: Rect;\n    //let zoom: number = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n\n    var svg = this.element.getElementsByClassName('overviewsvg')[0];\n    var panel = svg.getElementById(this.canvas.id + 'overviewrect');\n    var bounds = panel.getBBox();\n    var x = bounds.x + difx;\n    var y = bounds.y + dify;\n    var width = bounds.width;\n    var height = bounds.height;\n    this.updateOverviewrect(x, y, width, height);\n    this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n  };\n\n  Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n    var offwidth = Number(this.model.width);\n    var offheight = Number(this.model.height); //const viewPort: Rect;\n\n    var viewwidth = width / offwidth * this.contentWidth;\n    var viewheight = height / offheight * this.contentHeight;\n    var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n\n    if (zoom >= 0.25 && zoom <= 30) {\n      var point = {\n        x: 0,\n        y: 0\n      };\n      this.updateParentView(zoom, x, y, width, height, point);\n      var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n\n      if (this.helper) {\n        var panel = this.element.getElementsByTagName('rect')[10];\n        var svgRect = panel.getBBox();\n        bounds.x = svgRect.x;\n        bounds.y = svgRect.y;\n      }\n\n      this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n    }\n  };\n\n  Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n    if (!this.actionName || scaled) {\n      var offwidth = Number(this.model.width);\n      var offheight = Number(this.model.height);\n      var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n      var bounds = new Rect();\n      var x = bounds.x = hoffset / currentZoom / scale;\n      var y = bounds.y = voffset / currentZoom / scale; //const viewPort: Rect;\n\n      var width = bounds.width = this.parent.scroller.viewPortWidth / currentZoom / scale;\n      var height = bounds.height = this.parent.scroller.viewPortHeight / currentZoom / scale; //const ratio: number = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n\n      if (scaled) {\n        var rect = new Rect();\n        rect.x = x;\n        rect.y = y;\n        rect.width = width;\n        rect.height = height;\n        return rect;\n      }\n\n      this.updateOverviewrect(-x, -y, width, height);\n    }\n\n    return null;\n  };\n\n  Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n    var offwidth = Number(this.model.width);\n    var offheight = Number(this.model.height);\n    var scalex = this.contentWidth / offwidth;\n    var scaley = this.contentHeight / offheight;\n    var hoffset = x * scalex * zoom;\n    var voffset = y * scaley * zoom;\n    var delx;\n    var dely;\n    var bounds = this.parent.scroller.getPageBounds();\n\n    if (zoom !== 1 || this.actionName === 'pan') {\n      delx = -hoffset - this.parent.scroller.horizontalOffset;\n      dely = -voffset - this.parent.scroller.verticalOffset;\n    }\n\n    this.parent.setBlazorDiagramProps(true);\n    this.parent.realActions |= RealAction.OverViewAction;\n\n    if (this.actionName === 'scale' || this.actionName === 'draw') {\n      this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n    } else {\n      if (!isBlazor()) {\n        this.parent.pan(delx, dely, focusPoint);\n      } else {\n        this.parent.scroller.zoom(1, delx, dely, focusPoint);\n      }\n    }\n  };\n\n  Overview.prototype.updateHtmlLayer = function (view) {\n    var htmlLayer = getHTMLLayer(view.element.id);\n    var bounds = this.parent.scroller.getPageBounds(true);\n    var width = bounds.width;\n    var height = bounds.height;\n    var w = Math.max(width, this.parent.scroller.viewPortWidth);\n    var h = Math.max(height, this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom);\n    var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n    htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,' + this.parent.scroller.transform.ty + 'px)';\n  };\n  /** @private */\n\n  /**\n   * updateView method\\\n   *\n   * @returns {  void }    removeDocument method .\\\n   * @param {Overview} view - provide the angle value.\n   * @private\n   */\n\n\n  Overview.prototype.updateView = function (view) {\n    //let width: number; let height: number;\n    var bounds = this.parent.scroller.getPageBounds();\n    var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n    var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n    var transformWidth = 0;\n    var transformHeight = 0;\n\n    if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n      transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n      transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n    }\n\n    var width = bounds.width;\n    var height = bounds.height;\n    var offwidth = Number(this.model.width);\n    var offheight = Number(this.model.height); //let scale: number;\n\n    var w = Math.max(width, this.parent.scroller.viewPortWidth);\n    var h = Math.max(height, this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom);\n    this.contentWidth = w = Math.max(w, offwidth / offheight * h);\n    this.contentHeight = h = Math.max(h, offheight / offwidth * w);\n    var scale = Math.min(offwidth / w, offheight / h);\n    var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n    htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + -bounds.y + 'px)';\n    htmlLayer.style.transform = 'scale(' + scale + ') translate(' + (-bounds.x + transformWidth) + 'px,' + (-bounds.y + transformHeight) + 'px)';\n    var ovw = document.getElementById(this.element.id + '_overviewlayer');\n    ovw.setAttribute('transform', 'translate(' + -bounds.x * scale + ',' + -bounds.y * scale + ')');\n    this.horizontalOffset = bounds.x * scale;\n    this.verticalOffset = bounds.y * scale;\n    var canvas = document.getElementById(this.element.id + '_diagramLayer');\n    var nativeLayer = getNativeLayer(this.element.id);\n    var context = canvas.getContext('2d');\n    var widthratio = Number(this.model.width) / this.contentWidth;\n    var heightratio = Number(this.model.height) / this.contentHeight;\n    widthratio = Math.min(widthratio, heightratio);\n    var transform = this.parent.scroller.transform;\n    var tx = transform.tx;\n    var ty = transform.ty;\n    nativeLayer.setAttribute('transform', 'translate(' + tx * widthratio + ',' + ty * heightratio + '),scale(' + widthratio + ')');\n    context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n    context.fillStyle = 'red';\n    this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n  }; // region - Event Handlers\n\n\n  Overview.prototype.scrolled = function (evt) {\n    if (this.event) {\n      var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n      this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n    }\n  };\n\n  Overview.prototype.updateCursor = function (evt) {\n    if (hasClass(evt.target, 'overviewresizer')) {\n      switch (evt.target.id) {\n        case this.canvas.id + 'left':\n          this.canvas.style.cursor = 'w-resize';\n          break;\n\n        case this.canvas.id + 'right':\n          this.canvas.style.cursor = 'e-resize';\n          break;\n\n        case this.canvas.id + 'top':\n          this.canvas.style.cursor = 'n-resize';\n          break;\n\n        case this.canvas.id + 'bottom':\n          this.canvas.style.cursor = 's-resize';\n          break;\n\n        case this.canvas.id + 'topleft':\n          this.canvas.style.cursor = 'nw-resize';\n          break;\n\n        case this.canvas.id + 'topright':\n          this.canvas.style.cursor = 'ne-resize';\n          break;\n\n        case this.canvas.id + 'bottomleft':\n          this.canvas.style.cursor = 'sw-resize';\n          break;\n\n        case this.canvas.id + 'bottomright':\n          this.canvas.style.cursor = 'se-resize';\n          break;\n      }\n    } else {\n      this.canvas.style.cursor = 'default';\n    }\n  };\n\n  Overview.prototype.mouseMove = function (evt) {\n    this.event = false;\n    this.updateCursor(evt);\n    this.currentPoint = this.mousePosition(evt);\n\n    if (this.actionName) {\n      switch (this.actionName) {\n        case 'draw':\n          if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n            this.initHelper();\n            this.inAction = true;\n          }\n\n          if (this.inAction) {\n            this.updateHelper();\n          }\n\n          break;\n\n        case 'scale':\n          if (!this.inAction) {\n            this.initHelper();\n            this.inAction = true;\n          }\n\n          this.updateOverviewRectangle();\n          break;\n\n        case 'pan':\n          if (this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y || this.inAction) {\n            this.inAction = true;\n            this.translateOverviewRectangle();\n          }\n\n          break;\n      }\n    }\n\n    this.prevPoint = this.currentPoint;\n  };\n\n  Overview.prototype.documentMouseUp = function (evt) {\n    this.inAction = false;\n    this.actionName = '';\n\n    if (this.helper) {\n      this.helper.parentNode.removeChild(this.helper);\n      this.helper = null;\n    }\n\n    this.event = true;\n    document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n  };\n\n  Overview.prototype.windowResize = function (evt) {\n    var _this = this;\n\n    if (this.resizeTo) {\n      clearTimeout(this.resizeTo);\n    }\n\n    this.resizeTo = setTimeout(function () {\n      var element = document.getElementById(_this.element.id);\n      var bRect = element.getBoundingClientRect();\n      _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n      _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n\n      _this.renderCanvas();\n\n      _this.setParent(_this.sourceID);\n    }, 10);\n    return false;\n  };\n  /**\n   * mouseDown method\\\n   *\n   * @returns {  void }    mouseDown method .\\\n   * @param {PointerEvent | TouchEvent} evt - provide the angle value.\n   * @private\n   */\n\n\n  Overview.prototype.mouseDown = function (evt) {\n    if (evt.target.id === this.canvas.id + '_overviewsvg') {\n      this.actionName = 'draw';\n    }\n\n    if (evt.target.id === this.canvas.id + 'overviewrect') {\n      this.actionName = 'pan';\n    }\n\n    if (hasClass(evt.target, 'overviewresizer')) {\n      this.actionName = 'scale';\n\n      switch (evt.target.id) {\n        case this.canvas.id + 'left':\n          this.resizeDirection = 'left';\n          break;\n\n        case this.canvas.id + 'right':\n          this.resizeDirection = 'right';\n          break;\n\n        case this.canvas.id + 'top':\n          this.resizeDirection = 'top';\n          break;\n\n        case this.canvas.id + 'bottom':\n          this.resizeDirection = 'bottom';\n          break;\n\n        case this.canvas.id + 'topleft':\n          this.resizeDirection = 'topleft';\n          break;\n\n        case this.canvas.id + 'topright':\n          this.resizeDirection = 'topright';\n          break;\n\n        case this.canvas.id + 'bottomleft':\n          this.resizeDirection = 'bottomleft';\n          break;\n\n        case this.canvas.id + 'bottomright':\n          this.resizeDirection = 'bottomright';\n          break;\n      }\n    }\n\n    this.startPoint = this.prevPoint = this.mousePosition(evt);\n    this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n    var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n    overViewHandle.style.pointerEvents = 'none';\n  };\n\n  Overview.prototype.mouseUp = function (evt) {\n    this.currentPoint = this.mousePosition(evt); //let offwidth: number = Number(this.model.width);\n    //let offheight: number = Number(this.model.height);\n\n    if (this.actionName) {\n      if (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y) {\n        if (this.actionName === 'pan') {//let i: number = 0;\n        } else {\n          if (this.helper) {\n            var bounds = this.element.getElementsByTagName('rect')[10].getBBox();\n            this.resizeDirection = this.resizeDirection || '';\n            var x = bounds.x;\n            var y = bounds.y;\n            var width = bounds.width;\n            var height = bounds.height;\n            var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' || this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n            this.renderOverviewRect(x, y, width, height);\n          }\n        }\n      } else {\n        if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n          var svg = this.element.getElementsByTagName('svg')[2];\n          var g = svg.getElementById(this.canvas.id + 'overviewrect');\n          var bounds = g.getBBox();\n          var width = bounds.width;\n          var height = bounds.height;\n          this.inAction = true;\n          this.actionName = 'pan';\n          this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n          this.inAction = false;\n        }\n      }\n    }\n\n    if (this.helper) {\n      this.helper.parentNode.removeChild(this.helper);\n      this.helper = null;\n    }\n\n    this.actionName = '';\n    this.startPoint = null;\n    this.currentPoint = null;\n    this.prevPoint = null;\n    this.helper = null;\n    this.viewPortRatio = 1;\n    this.resizeDirection = '';\n    this.inAction = false;\n    this.event = true;\n    document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n  };\n\n  Overview.prototype.initHelper = function () {\n    var g = this.element.getElementsByTagName('svg')[2]; //const scale: number = this.parent.scroller.currentZoom;\n\n    var x = this.startPoint.x;\n    var y = this.startPoint.y;\n    var width = 1;\n    var height = 1;\n\n    if (this.actionName === 'scale') {\n      var rect = g.getElementById(this.canvas.id + 'overviewrect');\n      var bounds = rect.getBBox();\n      x = bounds.x;\n      y = bounds.y;\n      width = bounds.width;\n      height = bounds.height;\n    }\n\n    var selectionRect = createSvgElement('rect', {\n      'id': 'helper',\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      'fill': 'transparent',\n      'stroke': 'gray',\n      'stroke-dasharray': '2 2',\n      'shape-rendering': 'crispEdges'\n    });\n    var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n    overviewLayer.appendChild(selectionRect);\n    this.helper = selectionRect;\n  };\n\n  Overview.prototype.mousePosition = function (evt) {\n    var touchArg;\n    var offsetX;\n    var offsetY;\n\n    if (evt.type.indexOf('touch') !== -1) {\n      touchArg = evt;\n      var pageX = touchArg.changedTouches[0].clientX;\n      var pageY = touchArg.changedTouches[0].clientY;\n      offsetX = pageX - this.element.offsetLeft;\n      offsetY = pageY - this.element.offsetTop;\n    } else {\n      offsetX = evt.clientX;\n      offsetY = evt.clientY;\n    }\n\n    var boundingRect = this.element.getBoundingClientRect();\n    offsetX = offsetX - boundingRect.left;\n    offsetY = offsetY - boundingRect.top;\n    return {\n      x: offsetX + this.horizontalOffset,\n      y: offsetY + this.verticalOffset\n    };\n  }; // end region - Event handlers\n\n  /**\n   *To destroy the overview\n   *\n   * @returns {void} To destroy the overview\n   */\n\n\n  Overview.prototype.destroy = function () {\n    this.unWireEvents();\n    this.notify('destroy', {});\n\n    _super.prototype.destroy.call(this);\n\n    if (document.getElementById(this.element.id)) {\n      this.element.classList.remove('e-overview');\n      var content = document.getElementById(this.element.id + '_canvas');\n\n      if (content) {\n        this.element.removeChild(content);\n      }\n    }\n\n    this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n    this.diagramLayerDiv = null;\n    this.canvas = null;\n    this.parent = null;\n  };\n  /**\n   * Core method to return the component name.\n   *\n   * @returns {string}  Core method to return the component name.\n   * @private\n   */\n\n\n  Overview.prototype.getModuleName = function () {\n    /**\n     * Returns the module name\n     */\n    return 'Overview';\n  };\n\n  __decorate([Property('100%')], Overview.prototype, \"width\", void 0);\n\n  __decorate([Property('100%')], Overview.prototype, \"height\", void 0);\n\n  __decorate([Property('')], Overview.prototype, \"sourceID\", void 0);\n\n  __decorate([Event()], Overview.prototype, \"created\", void 0);\n\n  return Overview;\n}(Component);\n\nexport { Overview };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/overview/overview.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","RealAction","DiagramRenderer","CanvasRenderer","Component","Property","Browser","EventHandler","Event","isBlazor","setAttributeHtml","setAttributeSvg","createHtmlElement","getHTMLLayer","createSvgElement","getNativeLayer","hasClass","Rect","Size","SvgRenderer","Overview","_super","options","element","_this","call","mode","id","actionName","startPoint","currentPoint","prevPoint","scale","inAction","viewPortRatio","horizontalOffset","verticalOffset","model","event","overviewid","width","height","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setParent","sourceID","renderCanvas","getPersistData","keyEntity","addOnPersist","preRender","collection","document","getElementsByClassName","style","background","unWireEvents","wireEvents","render","diagramRenderer","renderComplete","getSizeValue","real","text","toString","indexOf","canvas","getElementById","appendChild","attribute","setAttribute","String","overflow","instance","parent","oldparent","setOverview","removeDocument","getDiagram","diagram","n","start","touchStartEvent","move","touchMoveEvent","cancel","isPointer","stop","touchEndEvent","remove","mouseDown","mouseMove","mouseUp","documentMouseUp","window","windowResize","container","scrolled","add","renderDocument","view","g","parentNode","removeChild","attr","version","svg","ovw","eWidth","clientWidth","eHeight","clientHeight","bRect","getBoundingClientRect","screenX","screenY","widthValue","Math","floor","innerWidth","left","heightValue","innerHeight","top","diagramLayerDiv","diagramLayer","createCanvas","attributes","renderHtmlLayer","renderNativeLayer","addOverviewRectPanel","htmlLayer","domTable","htmlDiv","nativeLayerSvg","createSvg","nativeLayer","class","rect","innerrect","renderOverviewCorner","name","shape","transrect","updateOverviewRectangle","difx","x","dify","y","size","w","h","resizeDirection","abs","updateHelper","bounds","getElementsByTagName","getBBox","difx_1","dify_1","helper","max","updateOverviewrect","updateOverviewCorner","transattr","rectname","fill","cx","cy","translateOverviewRectangle","offwidth","Number","offheight","panel","updateParentView","scroller","currentZoom","renderOverviewRect","viewwidth","contentWidth","viewheight","contentHeight","zoom","viewPortWidth","viewPortHeight","point","scrollOverviewRect","svgRect","hoffset","voffset","scaled","min","focusPoint","scalex","scaley","delx","dely","getPageBounds","setBlazorDiagramProps","realActions","OverViewAction","pan","updateHtmlLayer","transform","tx","ty","updateView","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","context","getContext","widthratio","heightratio","setTransform","fillStyle","evt","updateCursor","cursor","mousePosition","initHelper","pointerEvents","resizeTo","clearTimeout","setTimeout","overViewHandle","adjust","selectionRect","overviewLayer","touchArg","offsetX","offsetY","type","pageX","changedTouches","clientX","pageY","clientY","offsetLeft","offsetTop","boundingRect","destroy","notify","classList","content","views","splice","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { RealAction } from '../diagram/enum/enum';\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event, isBlazor } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     *\n     * @param {OverviewModel} newProp - Lists the new values of the changed properties\n     * @param {OverviewModel} oldProp - Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        //let objectArray: Object[] = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string}  Get the properties to be maintained in the persisted state.\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initializes the values of private members.\n     *\n     * @returns {void}  Initializes the values of private members.\n     * @private\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        //const evnt: EventHandler;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        //const isIE11Pointer: Boolean = Browser.isPointer;\n        // const wheelEvent: string = Browser.info.name === 'mozilla' ?\n        //     (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        //const isIE11Pointer: Boolean = Browser.isPointer;\n        // const wheelEvent: string = Browser.info.name === 'mozilla' ?\n        //     (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        // eslint-disable\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        // eslint-enable\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * renderDocument method\\\n     *\n     * @returns {  void }    renderDocument method .\\\n     * @param {Overview} view - provide the angle value.\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        //let attributes: Object;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            //const container: HTMLElement = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /**\n     * removeDocument method\\\n     *\n     * @returns {  void }    removeDocument method .\\\n     * @param {Overview} view - provide the angle value.\n     * @private\n     */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n        var domTable = 'domTable';\n        window[domTable][this.id + 'html_layer'] = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        //const svgDocument: SVGElement = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y + 1, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height + 3, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y + 3, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y + 3, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height + 3, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height + 3, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        //const viewPort: Rect;\n        //let zoom: number = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        //const viewPort: Rect;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            //const viewPort: Rect;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            //const ratio: number = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        this.parent.setBlazorDiagramProps(true);\n        this.parent.realActions |= RealAction.OverViewAction;\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            if (!isBlazor()) {\n                this.parent.pan(delx, dely, focusPoint);\n            }\n            else {\n                this.parent.scroller.zoom(1, delx, dely, focusPoint);\n            }\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    /**\n     * updateView method\\\n     *\n     * @returns {  void }    removeDocument method .\\\n     * @param {Overview} view - provide the angle value.\n     * @private\n     */\n    Overview.prototype.updateView = function (view) {\n        //let width: number; let height: number;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        var width = bounds.width;\n        var height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        //let scale: number;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        var scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        var transform = this.parent.scroller.transform;\n        var tx = transform.tx;\n        var ty = transform.ty;\n        nativeLayer.setAttribute('transform', 'translate('\n            + (tx * widthratio) + ',' + (ty * heightratio) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /**\n     * mouseDown method\\\n     *\n     * @returns {  void }    mouseDown method .\\\n     * @param {PointerEvent | TouchEvent} evt - provide the angle value.\n     * @private\n     */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        //let offwidth: number = Number(this.model.width);\n        //let offheight: number = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    //let i: number = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        //const scale: number = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     *To destroy the overview\n     *\n     * @returns {void} To destroy the overview\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Core method to return the component name.\n     *\n     * @returns {string}  Core method to return the component name.\n     * @private\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"]},"metadata":{},"sourceType":"module"}