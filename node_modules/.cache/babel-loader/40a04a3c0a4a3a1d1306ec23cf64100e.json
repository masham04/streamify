{"ast":null,"code":"import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n\n/** @private */\n\nvar SvgRenderer =\n/** @class */\nfunction () {\n  function SvgRenderer() {}\n  /**\n   * Draw the shawdow  for the rectangle shape in diagram \\\n   *\n   *  @returns {void}  Draw the shawdow  for the rectangle shape in diagram .\\\n   *\n   *  @param { SVGElement} options - Provide the base attributes .\n   *  @param { RectAttributes} canvas - Provide the canvas values .\n   *  @param { string} collection - Provide the collection value.\n   *  @param { boolean} parentSvg - Provide the parent SVG values .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n    if (collection === void 0) {\n      collection = null;\n    }\n\n    var pointModel = {\n      x: 0,\n      y: 0\n    };\n    var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance); //const tX: number = options.x + point.x; const tY: number = options.y + point.y;\n    //let pivotX: number = tX + options.width * options.pivotX;\n    //let pivotY: number = tY + options.height * options.pivotY;\n\n    var type;\n    var shadowElement;\n\n    if (parentSvg) {\n      shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n    }\n\n    if (!shadowElement) {\n      type = collection ? 'path' : 'rect';\n      shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n      canvas.appendChild(shadowElement);\n    }\n\n    var attr = {\n      'id': canvas.id + '_shadow',\n      'fill': options.shadow.color,\n      'stroke': options.shadow.color,\n      'opacity': options.shadow.opacity.toString(),\n      'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n    };\n\n    if (parentSvg) {\n      var svgContainer = parentSvg.getElementById(canvas.id);\n\n      if (svgContainer) {\n        svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n      }\n    }\n\n    setAttributeSvg(shadowElement, attr);\n\n    if (!collection) {\n      setAttributeSvg(shadowElement, {\n        'width': options.width,\n        'height': options.height\n      });\n    } else if (collection) {\n      this.renderPath(shadowElement, options, collection);\n    }\n  };\n  /**\n   * Return the dashed array values \\\n   *\n   *  @returns {number[]}  Return the dashed array values .\\\n   *  @param { SVGElement} dashArray - Return the dashed array values .\n   *  @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  SvgRenderer.prototype.parseDashArray = function (dashArray) {\n    var dashes = [];\n    return dashes;\n  };\n  /**\n   * Draw the Rectangle for the diagram \\\n   *\n   *  @returns {void}  Draw the Rectangle for the diagram .\\\n   *\n   *  @param { SVGElement} svg - Provide the SVG .\n   *  @param { RectAttributes} options - Provide the Rect attributes .\n   *  @param { string} diagramId - Provide the diagram id .\n   *  @param { boolean} onlyRect - Provide the boolean attribute for the shawdow rendering  .\n   *  @param { boolean} isSelector - Provide the selector possobilities .\n   *  @param { SVGSVGElement} parentSvg - Provide the parent svg element .\n   *  @param { Object} ariaLabel - Provide the Arial label attributes .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n    if (options.shadow && !onlyRect) {\n      this.renderShadow(options, svg, undefined, parentSvg);\n    }\n\n    var id;\n\n    if (options.id === svg.id) {\n      id = options.id + '_container';\n    } else {\n      id = options.id;\n    }\n\n    var rect;\n\n    if (parentSvg) {\n      rect = parentSvg.getElementById(id);\n    }\n\n    if (!rect || isSelector) {\n      rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      svg.appendChild(rect);\n    }\n\n    var shadowElement;\n\n    if (parentSvg && !options.shadow) {\n      shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n\n      if (shadowElement) {\n        shadowElement.parentNode.removeChild(shadowElement);\n      }\n    }\n\n    var attr = {\n      'id': id,\n      'x': options.x.toString(),\n      'y': options.y.toString(),\n      'width': options.width.toString(),\n      'height': options.height.toString(),\n      'visibility': options.visible ? 'visible' : 'hidden',\n      'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n      'rx': options.cornerRadius || 0,\n      'ry': options.cornerRadius || 0,\n      'opacity': options.opacity,\n      'aria-label': ariaLabel ? ariaLabel : ''\n    };\n\n    if (options.class) {\n      attr['class'] = options.class;\n    }\n\n    var poiterEvents = 'pointer-events';\n\n    if (!ariaLabel) {\n      attr[poiterEvents] = 'none';\n    }\n\n    setAttributeSvg(rect, attr);\n    this.setSvgStyle(rect, options, diagramId);\n  };\n  /**\n   * Update the diagram selection region \\\n   *\n   *  @returns {void}  Update the diagram selection region .\\\n   *\n   *  @param { SVGElement} gElement - Provide the element type.\n   *  @param { RectAttributes} options - Provide the Rect attributes .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n    var rect;\n    rect = gElement.parentNode.getElementById(options.id);\n    var attr = {\n      'id': options.id,\n      'x': options.x.toString(),\n      'y': options.y.toString(),\n      'width': options.width.toString(),\n      'height': options.height.toString(),\n      'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n      class: 'e-diagram-selected-region'\n    };\n\n    if (!rect) {\n      rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      gElement.appendChild(rect);\n    }\n\n    this.setSvgStyle(rect, options);\n    setAttributeSvg(rect, attr);\n  };\n  /**\n   * Create the g element for the diagram \\\n   *\n   *  @returns {SVGGElement}   Create the g element for the diagram .\\\n   *\n   *  @param { SVGElement} elementType - Provide the element type.\n   *  @param { Object} attribute - Provide the attributes for the g element.\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n    var gElement = createSvgElement(elementType, attribute);\n    return gElement;\n  };\n  /**\n   * Draw the line for the diagram\\\n   *\n   *  @returns {void}  Draw the line for the diagram .\\\n   *\n   *  @param { SVGElement} gElement - Provide the g element .\n   *  @param { LineAttributes} options - Provide the line element attributes .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawLine = function (gElement, options) {\n    var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    this.setSvgStyle(line, options);\n    var pivotX = options.x + options.width * options.pivotX;\n    var pivotY = options.y + options.height * options.pivotY; //const kk: string = '';\n\n    var attr = {\n      'id': options.id,\n      'x1': options.startPoint.x + options.x,\n      'y1': options.startPoint.y + options.y,\n      'x2': options.endPoint.x + options.x,\n      'y2': options.endPoint.y + options.y,\n      'stroke': options.stroke,\n      'stroke-width': options.strokeWidth.toString(),\n      'opacity': options.opacity.toString(),\n      'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n      'visibility': options.visible ? 'visible' : 'hidden'\n    };\n\n    if (options.class) {\n      attr['class'] = options.class;\n    }\n\n    setAttributeSvg(line, attr);\n    gElement.appendChild(line);\n  };\n  /**\n   * Draw the circle for the diagram\\\n   *\n   *  @returns {void}  Draw the circle for the diagram .\\\n   *\n   *  @param { SVGElement} gElement - Provide the g element .\n   *  @param { CircleAttributes} options - Provide the circle element attributes .\n   *  @param {string} enableSelector - Provide the selector constraints string .\n   *  @param {Object} ariaLabel - Provide arial label value .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n    var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    this.setSvgStyle(circle, options);\n    var classval = options.class || '';\n\n    if (!enableSelector) {\n      classval += ' e-disabled';\n    }\n\n    var attr = {\n      'id': options.id,\n      'cx': options.centerX,\n      'cy': options.centerY,\n      'r': options.radius,\n      'visibility': options.visible ? 'visible' : 'hidden',\n      'class': classval,\n      'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n    };\n    circle.style.display = options.visible ? 'block' : 'none';\n    setAttributeSvg(circle, attr);\n    gElement.appendChild(circle);\n  };\n  /**\n   * Draw the path element for the diagram\\\n   *\n   *  @returns {void}  Draw the path element for the diagram .\\\n   *\n   *  @param { SVGElement} svg - Provide the SVG element .\n   *  @param { PathAttributes} options - Provide the path element attributes .\n   *  @param {string} diagramId - Provide the diagram id .\n   *  @param {boolean} isSelector - Provide selector boolean value .\n   *  @param {SVGSVGElement} parentSvg - Provide the parent SVG element .\n   *  @param {Object} ariaLabel - Provide arial label value .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    var x = Math.floor(Math.random() * 10 + 1); //const id: string = svg.id + '_shape' + x.toString();\n\n    var collection = [];\n    collection = processPathData(options.data);\n    collection = pathSegmentCollection(collection);\n\n    if (options.shadow) {\n      this.renderShadow(options, svg, collection, parentSvg);\n    }\n\n    var shadowElement;\n\n    if (parentSvg && !options.shadow) {\n      shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n\n      if (shadowElement) {\n        shadowElement.parentNode.removeChild(shadowElement);\n      }\n    }\n\n    var path;\n\n    if (parentSvg) {\n      path = parentSvg.getElementById(options.id);\n    }\n\n    if (!path || isSelector) {\n      path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n      svg.appendChild(path);\n    }\n\n    this.renderPath(path, options, collection);\n    var attr = {\n      'id': options.id,\n      'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')' + 'translate(' + options.x + ',' + options.y + ')',\n      'visibility': options.visible ? 'visible' : 'hidden',\n      'opacity': options.opacity,\n      'aria-label': ariaLabel ? ariaLabel : ''\n    };\n\n    if (options.class) {\n      attr['class'] = options.class;\n    }\n\n    setAttributeSvg(path, attr);\n    this.setSvgStyle(path, options, diagramId);\n  };\n  /**\n   * Draw the path element for the diagram\\\n   *\n   *  @returns {void}  Draw the path element for the diagram .\\\n   *\n   *  @param { SVGElement} svg - Provide the SVG element .\n   *  @param {PathAttributes} options - Provide the path element attributes .\n   *  @param {Object[]} collection - Provide the parent SVG element .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var segments = collection;\n    var d = '';\n\n    for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n      var obj = segments[i];\n      var segment = obj;\n      var char = segment.command;\n\n      if ('x1' in segment) {\n        x1 = segment.x1;\n      }\n\n      if ('x2' in segment) {\n        x2 = segment.x2;\n      }\n\n      if ('y1' in segment) {\n        y1 = segment.y1;\n      }\n\n      if ('y2' in segment) {\n        y2 = segment.y2;\n      }\n\n      if ('x' in segment) {\n        x = segment.x;\n      }\n\n      if ('y' in segment) {\n        y = segment.y;\n      }\n\n      switch (char) {\n        case 'M':\n          d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n          break;\n\n        case 'L':\n          d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n          break;\n\n        case 'C':\n          d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n          d += x.toString() + ',' + y.toString() + ' ';\n          break;\n\n        case 'Q':\n          d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n          break;\n\n        case 'A':\n          d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n          d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n          break;\n\n        case 'Z':\n        case 'z':\n          d = d + 'Z' + ' ';\n          break;\n      }\n    }\n\n    svg.setAttribute('d', d);\n  };\n\n  SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n    text.style.fontStyle = options.italic ? 'italic' : 'normal';\n    text.style.fontWeight = options.bold ? 'bold' : 'normal';\n    text.style.fontSize = options.fontSize.toString() + 'px';\n    text.style.fontFamily = options.fontFamily;\n  };\n  /**\n   * Draw the text element for the diagram\\\n   *\n   *  @returns {void}  Draw the text element for the diagram .\\\n   *\n   *  @param { SVGElement} canvas - Provide the SVG element .\n   *  @param {TextAttributes} options - Provide the text element attributes .\n   *  @param {SVGSVGElement} parentSvg - Provide the parent SVG element .\n   *  @param {Object} ariaLabel - Provide the label properties .\n   *  @param {string} diagramId - Provide the diagram id .\n   *  @param {number} scaleValue - Provide the scale value .\n   *  @param {Container} parentNode - Provide the parent node .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n    if (options.content !== undefined) {\n      var textNode = void 0;\n      var childNodes = void 0;\n      var wrapBounds = void 0;\n      var position = void 0;\n      var child = void 0;\n      var tspanElement = void 0;\n      var offsetX = 0;\n      var offsetY = 0;\n      var i = 0;\n      var text = void 0;\n\n      if (parentSvg) {\n        text = parentSvg.getElementById(options.id + '_text');\n      }\n\n      if (text) {\n        if (options.doWrap) {\n          while (text.firstChild) {\n            text.removeChild(text.firstChild);\n          }\n        }\n      } else {\n        options.doWrap = true;\n        text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n\n        if (options.whiteSpace === 'pre-wrap') {\n          text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        }\n\n        canvas.appendChild(text);\n      }\n\n      var pivotX = options.x + options.width * options.pivotX;\n      var pivotY = options.y + options.height * options.pivotY;\n      var childNodesHeight = 0;\n\n      if (options.doWrap || options.textOverflow !== 'Wrap') {\n        var innerHtmlTextElement = document.getElementById(options.id + '_text');\n\n        if (innerHtmlTextElement) {\n          innerHtmlTextElement.innerHTML = '';\n        }\n\n        this.setSvgStyle(text, options, diagramId);\n        this.setSvgFontStyle(text, options);\n        textNode = document.createTextNode(options.content);\n        childNodes = options.childNodes;\n        wrapBounds = options.wrapBounds;\n        position = this.svgLabelAlign(options, wrapBounds, childNodes);\n\n        if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n          childNodes[0].text = overFlow(options.content, options);\n        }\n\n        for (i = 0; i < childNodes.length; i++) {\n          tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n          textNode = document.createTextNode(childNodes[i].text);\n          child = childNodes[i];\n          child.x = setChildPosition(child, childNodes, i, options);\n          offsetX = position.x + child.x - wrapBounds.x;\n          offsetY = position.y + child.dy * i + options.fontSize * 0.8;\n\n          if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n            var size = options.isHorizontalLane ? parentNode.actualSize.width : parentNode.actualSize.height;\n\n            if (offsetY < size) {\n              if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                var temp = childNodes[i + 1];\n                var y = position.y + temp.dy * (i + 1) + options.fontSize * 0.8;\n\n                if (y > size) {\n                  child.text = child.text.slice(0, child.text.length - 3);\n                  child.text = child.text.concat('...');\n                  textNode.data = child.text;\n                }\n              }\n\n              this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n              childNodesHeight += child.dy;\n            } else {\n              break;\n            }\n          } else {\n            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n          }\n        }\n      }\n\n      if (childNodesHeight && options.isHorizontalLane) {\n        pivotX = options.parentOffsetX + options.pivotX;\n        pivotY = options.parentOffsetY + options.pivotY;\n        options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n      }\n\n      if (options.textDecoration && options.textDecoration === 'LineThrough') {\n        options.textDecoration = wordBreakToString(options.textDecoration);\n      }\n\n      var attr = {\n        'id': options.id + '_text',\n        'fill': options.color,\n        'visibility': options.visible ? 'visible' : 'hidden',\n        'text-decoration': options.textDecoration,\n        'transform': 'rotate(' + options.angle + ',' + pivotX + ',' + pivotY + ')' + 'translate(' + options.x + ',' + options.y + ')',\n        'opacity': options.opacity,\n        'aria-label': ariaLabel ? ariaLabel : ''\n      };\n      setAttributeSvg(text, attr);\n    }\n  };\n\n  SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n    setAttributeSvg(tspanElement, {\n      'x': offsetX.toString(),\n      'y': offsetY.toString()\n    });\n    text.setAttribute('fill', child.text);\n    tspanElement.appendChild(textNode);\n    text.appendChild(tspanElement);\n  };\n  /**\n   * Draw the image element for the diagram\\\n   *\n   *  @returns {void} Draw the image element for the diagram .\n   *  @param { SVGElement | HTMLCanvasElement} canvas - Provide the SVG element .\n   *  @param {ImageAttributes} obj - Provide the image attributes .\n   *  @param {SVGSVGElement} parentSvg - Provide the parent SVG element .\n   *  @param {boolean} fromPalette - Provide the pointer event value .\n   *  @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n    ///const id: string = obj.id + '_image';\n    var image;\n\n    if (parentSvg) {\n      image = parentSvg.getElementById(obj.id + 'image');\n    }\n\n    if (!image) {\n      image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n      canvas.appendChild(image);\n    }\n\n    var imageObj = new Image();\n    imageObj.src = obj.source;\n    var scale = obj.scale !== 'None' ? obj.scale : '';\n\n    if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n      scale = '';\n    }\n\n    var imgAlign = obj.alignment;\n    var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n\n    if (scale !== 'Stretch') {\n      aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n    }\n\n    var attr = {\n      'id': obj.id + 'image',\n      'x': obj.x.toString(),\n      'y': obj.y.toString(),\n      'transform': 'rotate(' + obj.angle + ',' + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n      'width': obj.width.toString(),\n      'visibility': obj.visible ? 'visible' : 'hidden',\n      'height': obj.height.toString(),\n      'preserveAspectRatio': aspectRatio,\n      'opacity': (obj.opacity || 1).toString()\n    };\n    setAttributeSvg(image, attr);\n    image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n  };\n  /**\n   * Draw the HTML element for the diagram\\\n   *\n   *  @returns {void} Draw the native element for the diagram.\n   *  @param {DiagramHtmlElement} element - Provide the element .\n   *  @param {HTMLElement} canvas - Provide the canvas element  .\n   *  @param {Transforms} transform - Provide the transform value .\n   *  @param {boolean} value - Provide the pointer event value .\n   *  @param {number} indexValue - Provide the index value .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n    var htmlElement;\n    var parentHtmlElement;\n\n    if (canvas) {\n      var i = void 0;\n      var j = void 0;\n      var parentElement = void 0;\n\n      for (i = 0; i < canvas.childNodes.length; i++) {\n        parentElement = canvas.childNodes[i];\n\n        for (j = 0; j < parentElement.childNodes.length; j++) {\n          if (parentElement.childNodes[j].id === element.id + '_html_element') {\n            htmlElement = parentElement.childNodes[j];\n            break;\n          }\n        }\n      }\n    }\n\n    if (!htmlElement) {\n      parentHtmlElement = canvas.querySelector('#' + element.id + '_html_element') || canvas.querySelector('#' + element.nodeId + '_html_element');\n\n      if (!parentHtmlElement) {\n        var attr_1 = {\n          'id': element.nodeId + '_html_element',\n          'class': 'foreign-object'\n        };\n        parentHtmlElement = createHtmlElement('div', attr_1);\n      }\n\n      var attr = {\n        'id': element.id + '_html_element',\n        'class': 'foreign-object'\n      };\n      htmlElement = createHtmlElement('div', attr);\n      var isOverviewLayer = false;\n\n      if (canvas.parentNode && canvas.parentNode.parentNode && canvas.parentNode.parentNode.parentNode && canvas.parentNode.parentNode.parentNode.classList.contains('e-overview')) {\n        isOverviewLayer = true;\n      }\n\n      if (isOverviewLayer) {\n        htmlElement.appendChild(element.template.cloneNode(true));\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n      }\n\n      if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n        canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n      }\n\n      parentHtmlElement.appendChild(htmlElement);\n      canvas.appendChild(parentHtmlElement);\n    }\n\n    var point = cornersPointsBeforeRotation(element).topLeft;\n    htmlElement.setAttribute('style', 'height:' + element.actualSize.height + 'px; width:' + element.actualSize.width + 'px;left:' + point.x + 'px; top:' + point.y + 'px;' + 'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' + 'pointer-events:' + (value ? 'all' : 'none') + ';visibility:' + (element.visible ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n  };\n  /**\n   * Draw the native element for the diagram\\\n   *\n   *  @returns {void} Draw the native element for the diagram.\n   *  @param {DiagramNativeElement} element - Provide the node element .\n   *  @param {HTMLCanvasElement} canvas - Provide the SVG element  .\n   *  @param {number} height - Provide the height for the shape .\n   *  @param {number} width - Provide the width for the shape .\n   *  @param {SVGSVGElement} parentSvg - Provide the parent svg for  the shape .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n    var nativeElement;\n    var clipPath;\n\n    if (parentSvg) {\n      nativeElement = parentSvg.getElementById(element.id + '_native_element');\n      clipPath = parentSvg.getElementById(element.id + '_clip');\n    }\n\n    if (!nativeElement) {\n      nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      nativeElement.setAttribute('id', element.id + '_native_element');\n      nativeElement.appendChild(element.template.cloneNode(true));\n      canvas.appendChild(nativeElement);\n    }\n\n    if (clipPath) {\n      nativeElement.removeChild(clipPath);\n    }\n\n    nativeElement.setAttribute('style', 'visibility:' + (element.visible ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    this.setNativTransform(element, nativeElement, height, width);\n\n    if (element.scale === 'Slice') {\n      this.drawClipPath(element, nativeElement, height, width, parentSvg);\n    }\n\n    setAttributeSvg(nativeElement, element.description ? {\n      'aria-label': element.description\n    } : {});\n  };\n\n  SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n    //let angle: number;\n    var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n    var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n    var x = element.templatePosition.x * width / contentWidth;\n    var y = element.templatePosition.y * height / contentHeight;\n    nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY + ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) + ') scale(' + width / contentWidth + ',' + height / contentHeight + ')');\n  };\n  /**\n   *used to crop the given native element into a rectangle of the given size .\\\n   *\n   *  @returns {SVGElement} used to crop the given native element into a rectangle of the given size.\n   *  @param {DiagramNativeElement} node - Provide the node element .\n   *  @param {SVGElement} group - Provide the SVG element  .\n   *  @param {number} height - Provide the height for the shape .\n   *  @param {number} width - Provide the width for the shape .\n   *  @param {SVGSVGElement} parentSvg - Provide the parent svg for  the shape .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n    var contentWidth = node.contentSize.width;\n    var contentHeight = node.contentSize.height; //let actualWidth: number = node.actualSize.width;\n    //let actualHeight: number = node.actualSize.height;\n\n    var clipWidth = node.width / (width / contentWidth);\n    var clipHeight = node.height / (height / contentHeight);\n    var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n    var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n    var clipPath = parentSvg.getElementById(node.id + '_clip');\n    clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n    clipPath.setAttribute('id', node.id + '_clip');\n    group.appendChild(clipPath);\n    var rect = parentSvg.getElementById(node.id + '_clip_rect');\n    rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    clipPath.appendChild(rect);\n    var attr = {\n      'id': node.id + '_clip_rect',\n      'width': clipWidth.toString(),\n      'height': clipHeight.toString(),\n      'x': x.toString(),\n      'y': y.toString()\n    };\n    setAttributeSvg(rect, attr);\n\n    if (checkBrowserInfo()) {\n      group.setAttribute('clip-path', 'url(' + location.protocol + '//' + location.host + location.pathname + '#' + node.id + '_clip)');\n    } else {\n      group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n    }\n\n    return group;\n  };\n  /**\n   * Draw the gradient for the diagram shapes .\\\n   *\n   *  @returns {SVGElement} Draw the gradient for the diagram shapes.\n   *  @param {StyleAttributes} options - Provide the options  for the gradient  element .\n   *  @param {SVGElement} svg - Provide the SVG element  .\n   *  @param {string} diagramId - Provide the diagram id .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n    var max;\n    var min;\n    var grd;\n    var svgContainer = getBackgroundLayerSvg(diagramId);\n    var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n\n    if (!defs) {\n      defs = createSvgElement('defs', {\n        id: diagramId + 'gradient_pattern'\n      });\n      svgContainer.insertBefore(defs, svgContainer.firstChild);\n    }\n\n    var radial;\n    var linear; //let stop: StopModel; let offset: number;\n\n    removeGradient(svg.id);\n\n    if (options.gradient.type !== 'None') {\n      for (var i = 0; i < options.gradient.stops.length; i++) {\n        max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n        min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n      }\n\n      if (options.gradient.type === 'Linear') {\n        linear = options.gradient;\n        linear.id = svg.id + '_linear';\n        grd = this.createLinearGradient(linear);\n        defs.appendChild(grd);\n      } else {\n        radial = options.gradient;\n        radial.id = svg.id + '_radial';\n        grd = this.createRadialGradient(radial);\n        defs.appendChild(grd);\n      }\n\n      for (var i = 0; i < options.gradient.stops.length; i++) {\n        var stop_1 = options.gradient.stops[i];\n        var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n        var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        setAttributeSvg(stopElement, {\n          'offset': offset.toString(),\n          'style': 'stop-color:' + stop_1.color\n        });\n        grd.appendChild(stopElement);\n      }\n    }\n\n    return grd;\n  };\n  /**\n   * Draw the Linear gradient for the diagram .\\\n   *\n   *  @returns {SVGElement} Draw the Linear gradient for the diagram.\n   *  @param {LinearGradientModel} linear - Provide the objects for the gradient  element .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.createLinearGradient = function (linear) {\n    var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n    var attr = {\n      'id': linear.id,\n      'x1': linear.x1 + '%',\n      'y1': linear.y1 + '%',\n      'x2': linear.x2 + '%',\n      'y2': linear.y2 + '%'\n    };\n    setAttributeSvg(lineargradient, attr);\n    return lineargradient;\n  };\n  /**\n   * Draw the radial gradient for the diagram .\\\n   *\n   *  @returns {SVGElement} Draw the radial gradient for the diagram.\n   *  @param {RadialGradientModel} radial - Provide the objects for the gradient  element .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.createRadialGradient = function (radial) {\n    var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n    var attr = {\n      'id': radial.id,\n      'cx': radial.cx + '%',\n      'cy': radial.cy + '%',\n      'r': radial.r + '%',\n      'fx': radial.fx + '%',\n      'fy': radial.fy + '%'\n    };\n    setAttributeSvg(radialgradient, attr);\n    return radialgradient;\n  };\n  /**\n   * Set the SVG style for the SVG elements in the diagram.\\\n   *\n   *  @returns {void}\n   *  @param {SVGElement} svg - Provide the canvas element .\n   *  @param {StyleAttributes} style - Provide the canvas element .\n   *  @param {string} diagramId - Provide the canvas element .\n   *  @private\n   */\n\n\n  SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n    if (style.canApplyStyle || style.canApplyStyle === undefined) {\n      if (style.fill === 'none') {\n        style.fill = 'transparent';\n      }\n\n      if (style.stroke === 'none') {\n        style.stroke = 'transparent';\n      }\n\n      var dashArray = [];\n      var fill = void 0;\n\n      if (style.dashArray) {\n        var canvasRenderer = new CanvasRenderer();\n        dashArray = canvasRenderer.parseDashArray(style.dashArray);\n      }\n\n      if (style.gradient && style.gradient.type !== 'None' && diagramId) {\n        var grd = this.renderGradient(style, svg, diagramId);\n\n        if (checkBrowserInfo()) {\n          fill = 'url(' + location.protocol + '//' + location.host + location.pathname + '#' + grd.id + ')';\n        } else {\n          fill = 'url(#' + grd.id + ')';\n        }\n      } else {\n        fill = style.fill;\n      }\n\n      if (style.stroke) {\n        svg.setAttribute('stroke', style.stroke);\n      }\n\n      if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n        svg.setAttribute('stroke-width', style.strokeWidth.toString());\n      }\n\n      if (dashArray) {\n        svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n      }\n\n      if (fill) {\n        svg.setAttribute('fill', fill);\n      }\n    }\n  }; //end region\n  // text utility\n\n  /**\n   * Draw the SVG label.\\\n   *\n   * @returns {PointModel} Draw the SVG label .\n   *  @param {TextAttributes} text - Provide the canvas element .\n   *  @param {Object} wrapBound - Provide the canvas element .\n   *  @param {SubTextElement []} childNodes - Provide the canvas element .\n   * @private\n   */\n\n\n  SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n    var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n    var pos = {\n      x: 0,\n      y: 0\n    };\n    var x = 0;\n    var y = 1.2;\n    var offsetX = text.width * 0.5;\n    var offsety = text.height * 0.5;\n    var pointX = offsetX;\n    var pointY = offsety;\n\n    if (text.textAlign === 'left') {\n      pointX = 0;\n    } else if (text.textAlign === 'center') {\n      if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n        if (text.textWrapping === 'NoWrap') {\n          pointX = 0;\n        } else {\n          pointX = text.width * 0.5;\n        }\n      } else {\n        pointX = text.width * 0.5;\n      }\n    } else if (text.textAlign === 'right') {\n      pointX = text.width * 1;\n    }\n\n    pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n    pos.y = y + pointY - bounds.height / 2;\n    return pos;\n  };\n\n  return SvgRenderer;\n}();\n\nexport { SvgRenderer };","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/rendering/svg-renderer.js"],"names":["Point","Size","pathSegmentCollection","processPathData","setAttributeSvg","setChildPosition","overFlow","wordBreakToString","cornersPointsBeforeRotation","CanvasRenderer","createSvgElement","createHtmlElement","getBackgroundLayerSvg","removeGradient","checkBrowserInfo","isBlazor","SvgRenderer","prototype","renderShadow","options","canvas","collection","parentSvg","pointModel","x","y","point","transform","shadow","angle","distance","type","shadowElement","getElementById","id","document","createElementNS","appendChild","attr","color","opacity","toString","width","pivotX","height","pivotY","svgContainer","insertBefore","firstChild","renderPath","parseDashArray","dashArray","dashes","drawRectangle","svg","diagramId","onlyRect","isSelector","ariaLabel","undefined","rect","parentNode","removeChild","visible","cornerRadius","class","poiterEvents","setSvgStyle","updateSelectionRegion","gElement","createGElement","elementType","attribute","drawLine","line","startPoint","endPoint","stroke","strokeWidth","drawCircle","enableSelector","circle","classval","centerX","centerY","radius","style","display","drawPath","Math","floor","random","data","path","x1","y1","x2","y2","length","i","segments","d","obj","segment","char","command","r1","r2","largeArc","sweep","setAttribute","setSvgFontStyle","text","fontStyle","italic","fontWeight","bold","fontSize","fontFamily","drawText","scaleValue","content","textNode","childNodes","wrapBounds","position","child","tspanElement","offsetX","offsetY","doWrap","whiteSpace","setAttributeNS","childNodesHeight","textOverflow","innerHtmlTextElement","innerHTML","createTextNode","svgLabelAlign","textWrapping","dy","size","isHorizontalLane","actualSize","temp","slice","concat","setText","parentOffsetX","parentOffsetY","textDecoration","drawImage","fromPalette","image","imageObj","Image","src","source","scale","alignment","imgAlign","aspectRatio","charAt","toLowerCase","drawHTMLContent","element","value","indexValue","htmlElement","parentHtmlElement","j","parentElement","querySelector","nodeId","attr_1","isOverviewLayer","classList","contains","template","cloneNode","isTemplate","topLeft","rotateAngle","parentTransform","drawNativeContent","nativeElement","clipPath","setNativTransform","drawClipPath","description","contentWidth","contentSize","contentHeight","templatePosition","pivot","node","group","clipWidth","clipHeight","location","protocol","host","pathname","renderGradient","max","min","grd","defs","radial","linear","gradient","stops","offset","createLinearGradient","createRadialGradient","stop_1","stopElement","lineargradient","radialgradient","cx","cy","r","fx","fy","canApplyStyle","fill","canvasRenderer","wrapBound","bounds","pos","offsety","pointX","pointY","textAlign"],"mappings":"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","sourcesContent":["import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**\n     * Draw the shawdow  for the rectangle shape in diagram \\\n     *\n     *  @returns {void}  Draw the shawdow  for the rectangle shape in diagram .\\\n     *\n     *  @param { SVGElement} options - Provide the base attributes .\n     *  @param { RectAttributes} canvas - Provide the canvas values .\n     *  @param { string} collection - Provide the collection value.\n     *  @param { boolean} parentSvg - Provide the parent SVG values .\n     *  @private\n     */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        //const tX: number = options.x + point.x; const tY: number = options.y + point.y;\n        //let pivotX: number = tX + options.width * options.pivotX;\n        //let pivotY: number = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**\n     * Return the dashed array values \\\n     *\n     *  @returns {number[]}  Return the dashed array values .\\\n     *  @param { SVGElement} dashArray - Return the dashed array values .\n     *  @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**\n     * Draw the Rectangle for the diagram \\\n     *\n     *  @returns {void}  Draw the Rectangle for the diagram .\\\n     *\n     *  @param { SVGElement} svg - Provide the SVG .\n     *  @param { RectAttributes} options - Provide the Rect attributes .\n     *  @param { string} diagramId - Provide the diagram id .\n     *  @param { boolean} onlyRect - Provide the boolean attribute for the shawdow rendering  .\n     *  @param { boolean} isSelector - Provide the selector possobilities .\n     *  @param { SVGSVGElement} parentSvg - Provide the parent svg element .\n     *  @param { Object} ariaLabel - Provide the Arial label attributes .\n     *  @private\n     */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**\n     * Update the diagram selection region \\\n     *\n     *  @returns {void}  Update the diagram selection region .\\\n     *\n     *  @param { SVGElement} gElement - Provide the element type.\n     *  @param { RectAttributes} options - Provide the Rect attributes .\n     *  @private\n     */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**\n     * Create the g element for the diagram \\\n     *\n     *  @returns {SVGGElement}   Create the g element for the diagram .\\\n     *\n     *  @param { SVGElement} elementType - Provide the element type.\n     *  @param { Object} attribute - Provide the attributes for the g element.\n     *  @private\n     */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /**\n     * Draw the line for the diagram\\\n     *\n     *  @returns {void}  Draw the line for the diagram .\\\n     *\n     *  @param { SVGElement} gElement - Provide the g element .\n     *  @param { LineAttributes} options - Provide the line element attributes .\n     *  @private\n     */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        //const kk: string = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden'\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /**\n     * Draw the circle for the diagram\\\n     *\n     *  @returns {void}  Draw the circle for the diagram .\\\n     *\n     *  @param { SVGElement} gElement - Provide the g element .\n     *  @param { CircleAttributes} options - Provide the circle element attributes .\n     *  @param {string} enableSelector - Provide the selector constraints string .\n     *  @param {Object} ariaLabel - Provide arial label value .\n     *  @private\n     */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**\n     * Draw the path element for the diagram\\\n     *\n     *  @returns {void}  Draw the path element for the diagram .\\\n     *\n     *  @param { SVGElement} svg - Provide the SVG element .\n     *  @param { PathAttributes} options - Provide the path element attributes .\n     *  @param {string} diagramId - Provide the diagram id .\n     *  @param {boolean} isSelector - Provide selector boolean value .\n     *  @param {SVGSVGElement} parentSvg - Provide the parent SVG element .\n     *  @param {Object} ariaLabel - Provide arial label value .\n     *  @private\n     */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var x = Math.floor((Math.random() * 10) + 1);\n        //const id: string = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**\n     * Draw the path element for the diagram\\\n     *\n     *  @returns {void}  Draw the path element for the diagram .\\\n     *\n     *  @param { SVGElement} svg - Provide the SVG element .\n     *  @param {PathAttributes} options - Provide the path element attributes .\n     *  @param {Object[]} collection - Provide the parent SVG element .\n     *  @private\n     */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**\n     * Draw the text element for the diagram\\\n     *\n     *  @returns {void}  Draw the text element for the diagram .\\\n     *\n     *  @param { SVGElement} canvas - Provide the SVG element .\n     *  @param {TextAttributes} options - Provide the text element attributes .\n     *  @param {SVGSVGElement} parentSvg - Provide the parent SVG element .\n     *  @param {Object} ariaLabel - Provide the label properties .\n     *  @param {string} diagramId - Provide the diagram id .\n     *  @param {number} scaleValue - Provide the scale value .\n     *  @param {Container} parentNode - Provide the parent node .\n     *  @private\n     */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**\n     * Draw the image element for the diagram\\\n     *\n     *  @returns {void} Draw the image element for the diagram .\n     *  @param { SVGElement | HTMLCanvasElement} canvas - Provide the SVG element .\n     *  @param {ImageAttributes} obj - Provide the image attributes .\n     *  @param {SVGSVGElement} parentSvg - Provide the parent SVG element .\n     *  @param {boolean} fromPalette - Provide the pointer event value .\n     *  @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        ///const id: string = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale !== 'Stretch') {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /**\n     * Draw the HTML element for the diagram\\\n     *\n     *  @returns {void} Draw the native element for the diagram.\n     *  @param {DiagramHtmlElement} element - Provide the element .\n     *  @param {HTMLElement} canvas - Provide the canvas element  .\n     *  @param {Transforms} transform - Provide the transform value .\n     *  @param {boolean} value - Provide the pointer event value .\n     *  @param {number} indexValue - Provide the index value .\n     *  @private\n     */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            var isOverviewLayer = false;\n            if (canvas.parentNode && canvas.parentNode.parentNode && canvas.parentNode.parentNode.parentNode && canvas.parentNode.parentNode.parentNode.classList.contains('e-overview')) {\n                isOverviewLayer = true;\n            }\n            if (isOverviewLayer) {\n                htmlElement.appendChild(element.template.cloneNode(true));\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            }\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /**\n     * Draw the native element for the diagram\\\n     *\n     *  @returns {void} Draw the native element for the diagram.\n     *  @param {DiagramNativeElement} element - Provide the node element .\n     *  @param {HTMLCanvasElement} canvas - Provide the SVG element  .\n     *  @param {number} height - Provide the height for the shape .\n     *  @param {number} width - Provide the width for the shape .\n     *  @param {SVGSVGElement} parentSvg - Provide the parent svg for  the shape .\n     *  @private\n     */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        //let angle: number;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     *used to crop the given native element into a rectangle of the given size .\\\n     *\n     *  @returns {SVGElement} used to crop the given native element into a rectangle of the given size.\n     *  @param {DiagramNativeElement} node - Provide the node element .\n     *  @param {SVGElement} group - Provide the SVG element  .\n     *  @param {number} height - Provide the height for the shape .\n     *  @param {number} width - Provide the width for the shape .\n     *  @param {SVGSVGElement} parentSvg - Provide the parent svg for  the shape .\n     *  @private\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        //let actualWidth: number = node.actualSize.width;\n        //let actualHeight: number = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.protocol + '//' + location.host + location.pathname +\n                '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**\n     * Draw the gradient for the diagram shapes .\\\n     *\n     *  @returns {SVGElement} Draw the gradient for the diagram shapes.\n     *  @param {StyleAttributes} options - Provide the options  for the gradient  element .\n     *  @param {SVGElement} svg - Provide the SVG element  .\n     *  @param {string} diagramId - Provide the diagram id .\n     *  @private\n     */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear; //let stop: StopModel; let offset: number;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**\n     * Draw the Linear gradient for the diagram .\\\n     *\n     *  @returns {SVGElement} Draw the Linear gradient for the diagram.\n     *  @param {LinearGradientModel} linear - Provide the objects for the gradient  element .\n     *  @private\n     */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**\n     * Draw the radial gradient for the diagram .\\\n     *\n     *  @returns {SVGElement} Draw the radial gradient for the diagram.\n     *  @param {RadialGradientModel} radial - Provide the objects for the gradient  element .\n     *  @private\n     */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**\n     * Set the SVG style for the SVG elements in the diagram.\\\n     *\n     *  @returns {void}\n     *  @param {SVGElement} svg - Provide the canvas element .\n     *  @param {StyleAttributes} style - Provide the canvas element .\n     *  @param {string} diagramId - Provide the canvas element .\n     *  @private\n     */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None' && diagramId) {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.protocol + '//' + location.host + location.pathname + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**\n     * Draw the SVG label.\\\n     *\n     * @returns {PointModel} Draw the SVG label .\n     *  @param {TextAttributes} text - Provide the canvas element .\n     *  @param {Object} wrapBound - Provide the canvas element .\n     *  @param {SubTextElement []} childNodes - Provide the canvas element .\n     * @private\n     */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n"]},"metadata":{},"sourceType":"module"}