{"ast":null,"code":"/**\n *ShapeDictionary defines the shape of the default nodes and ports \\\n *\n * @returns { string }     ShapeDictionary defines the shape of the default nodes and ports.\\\n * @param {PortShapes} shape - provide the element value.\n *\n * @private\n */\nexport function getPortShape(shape) {\n  return portShapes[shape.toString()];\n}\n/**\n *ShapeDictionary defines the shape of the default nodes and ports \\\n *\n * @returns { string }     ShapeDictionary defines the shape of the default nodes and ports.\\\n * @param {DecoratorShapes} shape - provide the element value.\n * @param {DecoratorModel} decorator - provide the element value.\n *\n * @private\n */\n\nexport function getDecoratorShape(shape, decorator) {\n  if (shape === 'Custom') {\n    return decorator.pathData;\n  }\n\n  return decoratorShapes[shape];\n}\n/**\n *sets the path data for different icon shapes \\\n *\n * @returns { string }     sets the path data for different icon shapes\\\n * @param {IconShapeModel} icon - provide the element value.\n *\n * @private\n */\n\nexport function getIconShape(icon) {\n  var data;\n\n  switch (icon.shape) {\n    case 'Minus':\n      data = 'M0,50 L100,50';\n      break;\n\n    case 'Plus':\n      data = 'M0,-50 L0,50 M-50,0 L50,0';\n      break;\n\n    case 'ArrowUp':\n      data = 'M0,100 L50,0 L100,100 Z';\n      break;\n\n    case 'ArrowDown':\n      data = 'M0,0 L50,100 L100,0 Z';\n      break;\n\n    case 'Path':\n      data = icon.pathData;\n      break;\n  }\n\n  return data;\n} // eslint-disable-next-line prefer-const\n\nvar portShapes = {\n  'X': 'M14,14 L106,106 M106,14 L14,106',\n  'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n  'Square': 'M0,0 L10,0 L10,10 L0,10 z'\n}; // eslint-disable-next-line prefer-const\n\nvar decoratorShapes = {\n  'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n  'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n  'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n  'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' + 'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' + 'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' + 'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n  'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n  'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n  'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n  'Arrow': 'M15,10 L15,22 L5,16Z',\n  'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n  'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};","map":{"version":3,"sources":["/home/ubuntu*/Desktop/streamify/node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/dictionary/common.js"],"names":["getPortShape","shape","portShapes","toString","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,SAAOC,UAAU,CAACD,KAAK,CAACE,QAAN,EAAD,CAAjB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BH,KAA3B,EAAkCI,SAAlC,EAA6C;AAChD,MAAIJ,KAAK,KAAK,QAAd,EAAwB;AACpB,WAAOI,SAAS,CAACC,QAAjB;AACH;;AACD,SAAOC,eAAe,CAACN,KAAD,CAAtB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC/B,MAAIC,IAAJ;;AACA,UAAQD,IAAI,CAACR,KAAb;AACI,SAAK,OAAL;AACIS,MAAAA,IAAI,GAAG,eAAP;AACA;;AACJ,SAAK,MAAL;AACIA,MAAAA,IAAI,GAAG,2BAAP;AACA;;AACJ,SAAK,SAAL;AACIA,MAAAA,IAAI,GAAG,yBAAP;AACA;;AACJ,SAAK,WAAL;AACIA,MAAAA,IAAI,GAAG,uBAAP;AACA;;AACJ,SAAK,MAAL;AACIA,MAAAA,IAAI,GAAGD,IAAI,CAACH,QAAZ;AACA;AAfR;;AAiBA,SAAOI,IAAP;AACH,C,CACD;;AACA,IAAIR,UAAU,GAAG;AACb,OAAK,iCADQ;AAEb,YAAU,+CAFG;AAGb,YAAU;AAHG,CAAjB,C,CAKA;;AACA,IAAIK,eAAe,GAAG;AAClB,eAAa,mDADK;AAElB,YAAU,2BAFQ;AAGlB,YAAU,oEAHQ;AAIlB,eAAa,sDACT,kEADS,GAET,iFAFS,GAGT,gDAPc;AAQlB,mBAAiB,qCARC;AASlB,oBAAkB,uCATA;AAUlB,iBAAe,4CAVG;AAWlB,WAAS,sBAXS;AAYlB,aAAW,8BAZO;AAalB,YAAU;AAbQ,CAAtB","sourcesContent":["/**\n *ShapeDictionary defines the shape of the default nodes and ports \\\n *\n * @returns { string }     ShapeDictionary defines the shape of the default nodes and ports.\\\n * @param {PortShapes} shape - provide the element value.\n *\n * @private\n */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/**\n *ShapeDictionary defines the shape of the default nodes and ports \\\n *\n * @returns { string }     ShapeDictionary defines the shape of the default nodes and ports.\\\n * @param {DecoratorShapes} shape - provide the element value.\n * @param {DecoratorModel} decorator - provide the element value.\n *\n * @private\n */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n *sets the path data for different icon shapes \\\n *\n * @returns { string }     sets the path data for different icon shapes\\\n * @param {IconShapeModel} icon - provide the element value.\n *\n * @private\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\n// eslint-disable-next-line prefer-const\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z'\n};\n// eslint-disable-next-line prefer-const\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n"]},"metadata":{},"sourceType":"module"}